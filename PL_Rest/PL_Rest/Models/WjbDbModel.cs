

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "PL_Rest\Web.config"
//     Connection String Name: "PL_DbConnection"
//     Connection String:      "data source=PHIL_PC\SQLEXPRESS2017;initial catalog=wjbeitler;integrated security=SSPI; Connect Timeout = 300"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Express Edition (64-bit)
// Database Engine Edition : Express
// Database Version        : 14.0.2002.14

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace PL_Rest.Models
{
    using System.Collections.ObjectModel;
    using System.Linq;

    #region Unit of work

    public interface IPL_DbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AppLog> AppLogs { get; set; } // AppLog
        System.Data.Entity.DbSet<AppSetting> AppSettings { get; set; } // AppSettings
        System.Data.Entity.DbSet<ArchiveOrder> ArchiveOrders { get; set; } // ArchiveOrders
        System.Data.Entity.DbSet<ArchiveOrderDetail> ArchiveOrderDetails { get; set; } // ArchiveOrderDetail
        System.Data.Entity.DbSet<ArchiveRun> ArchiveRuns { get; set; } // ArchiveRun
        System.Data.Entity.DbSet<ArchiveRunOrder> ArchiveRunOrders { get; set; } // ArchiveRunOrder
        System.Data.Entity.DbSet<ArchiveRunResource> ArchiveRunResources { get; set; } // ArchiveRunResource
        System.Data.Entity.DbSet<ArchiveRunStop> ArchiveRunStops { get; set; } // ArchiveRunStop
        System.Data.Entity.DbSet<ChkCheckItem> ChkCheckItems { get; set; } // chkCheckItem
        System.Data.Entity.DbSet<ChkCheckItemLog> ChkCheckItemLogs { get; set; } // chkCheckItemLog
        System.Data.Entity.DbSet<ChkPallet> ChkPallets { get; set; } // chkPallet
        System.Data.Entity.DbSet<ChkPalletLog> ChkPalletLogs { get; set; } // chkPalletLog
        System.Data.Entity.DbSet<ChkStop> ChkStops { get; set; } // chkStop
        System.Data.Entity.DbSet<ChkvwCheckSummary> ChkvwCheckSummaries { get; set; } // chkvwCheckSummary
        System.Data.Entity.DbSet<ChkvwException> ChkvwExceptions { get; set; } // chkvwExceptions
        System.Data.Entity.DbSet<ChkvwExceptionDetail> ChkvwExceptionDetails { get; set; } // chkvwExceptionDetail
        System.Data.Entity.DbSet<ChkvwOrderDetail> ChkvwOrderDetails { get; set; } // chkvwOrderDetail
        System.Data.Entity.DbSet<ChkvwPalletCount> ChkvwPalletCounts { get; set; } // chkvwPalletCount
        System.Data.Entity.DbSet<ChkvwReconcile> ChkvwReconciles { get; set; } // chkvwReconcile
        System.Data.Entity.DbSet<ChkvwStopsNotClosed> ChkvwStopsNotCloseds { get; set; } // chkvwStopsNotClosed
        System.Data.Entity.DbSet<ClientBarcodeType> ClientBarcodeTypes { get; set; } // ClientBarcodeType
        System.Data.Entity.DbSet<ClientBarcodeTypeSpec> ClientBarcodeTypeSpecs { get; set; } // ClientBarcodeTypeSpec
        System.Data.Entity.DbSet<Company> Companies { get; set; } // Company
        System.Data.Entity.DbSet<CompanyCarrier> CompanyCarriers { get; set; } // CompanyCarrier
        System.Data.Entity.DbSet<CompanyContactInfo> CompanyContactInfoes { get; set; } // CompanyContactInfo
        System.Data.Entity.DbSet<CompanyLocation> CompanyLocations { get; set; } // CompanyLocation
        System.Data.Entity.DbSet<CompanyLocationAppointment> CompanyLocationAppointments { get; set; } // CompanyLocationAppointment
        System.Data.Entity.DbSet<CompanyLocationGp> CompanyLocationGps { get; set; } // CompanyLocationGPS
        System.Data.Entity.DbSet<CompanyMfCode> CompanyMfCodes { get; set; } // CompanyMfCode
        System.Data.Entity.DbSet<CompanyOpenWindow> CompanyOpenWindows { get; set; } // CompanyOpenWindow
        System.Data.Entity.DbSet<CompanyShipper> CompanyShippers { get; set; } // CompanyShipper
        System.Data.Entity.DbSet<CompanyStandard> CompanyStandards { get; set; } // CompanyStandard
        System.Data.Entity.DbSet<CompletedWork> CompletedWorks { get; set; } // CompletedWork
        System.Data.Entity.DbSet<Condition> Conditions { get; set; } // Condition
        System.Data.Entity.DbSet<ContactType> ContactTypes { get; set; } // ContactType
        System.Data.Entity.DbSet<DeletedOrder> DeletedOrders { get; set; } // DeletedOrders
        System.Data.Entity.DbSet<Department> Departments { get; set; } // Department
        System.Data.Entity.DbSet<Dtproperty> Dtproperties { get; set; } // dtproperties
        System.Data.Entity.DbSet<Edi214> Edi214 { get; set; } // edi214
        System.Data.Entity.DbSet<EdiFa> EdiFas { get; set; } // ediFa
        System.Data.Entity.DbSet<EdiGroup> EdiGroups { get; set; } // ediGroup
        System.Data.Entity.DbSet<EdiTransaction> EdiTransactions { get; set; } // ediTransaction
        System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        System.Data.Entity.DbSet<EmployeeCalendar> EmployeeCalendars { get; set; } // Employee_Calendar
        System.Data.Entity.DbSet<EmployeeDepartment> EmployeeDepartments { get; set; } // Employee_Department
        System.Data.Entity.DbSet<EmployeeInActiveReasonList> EmployeeInActiveReasonLists { get; set; } // Employee_InActive_Reason_List
        System.Data.Entity.DbSet<EmployeeProductivity> EmployeeProductivities { get; set; } // Employee_Productivity
        System.Data.Entity.DbSet<EmployeeTime> EmployeeTimes { get; set; } // EmployeeTime
        System.Data.Entity.DbSet<EquipmentChecklistResponse> EquipmentChecklistResponses { get; set; } // EquipmentChecklistResponse
        System.Data.Entity.DbSet<EquipmentClassHeader> EquipmentClassHeaders { get; set; } // EquipmentClassHeader
        System.Data.Entity.DbSet<EquipmentDetail> EquipmentDetails { get; set; } // EquipmentDetail
        System.Data.Entity.DbSet<ExceptionLog> ExceptionLogs { get; set; } // ExceptionLog
        System.Data.Entity.DbSet<Flag> Flags { get; set; } // Flag
        System.Data.Entity.DbSet<GpsLocation> GpsLocations { get; set; } // GPSLocation
        System.Data.Entity.DbSet<IdList> IdLists { get; set; } // IdList
        System.Data.Entity.DbSet<ImportedWarehouseWeight> ImportedWarehouseWeights { get; set; } // ImportedWarehouseWeight
        System.Data.Entity.DbSet<InboundCondition> InboundConditions { get; set; } // InboundCondition
        System.Data.Entity.DbSet<InboundException> InboundExceptions { get; set; } // InboundException
        System.Data.Entity.DbSet<InboundExceptionBeta> InboundExceptionBetas { get; set; } // InboundException_Beta
        System.Data.Entity.DbSet<InboundExceptionCondition> InboundExceptionConditions { get; set; } // InboundExceptionCondition
        System.Data.Entity.DbSet<InboundExceptionConditionBeta> InboundExceptionConditionBetas { get; set; } // InboundExceptionCondition_Beta
        System.Data.Entity.DbSet<InboundLocation> InboundLocations { get; set; } // InboundLocation
        System.Data.Entity.DbSet<InboundLog> InboundLogs { get; set; } // InboundLog
        System.Data.Entity.DbSet<InboundPallet> InboundPallets { get; set; } // InboundPallet
        System.Data.Entity.DbSet<InboundPalletBeta> InboundPalletBetas { get; set; } // InboundPallet_Beta
        System.Data.Entity.DbSet<InboundPalletDetailBeta> InboundPalletDetailBetas { get; set; } // InboundPalletDetail_Beta
        System.Data.Entity.DbSet<InboundSealDisposition> InboundSealDispositions { get; set; } // InboundSealDisposition
        System.Data.Entity.DbSet<InboundTrailer> InboundTrailers { get; set; } // InboundTrailer
        System.Data.Entity.DbSet<InboundTrailerBeta> InboundTrailerBetas { get; set; } // InboundTrailer_Beta
        System.Data.Entity.DbSet<Item> Items { get; set; } // Item
        System.Data.Entity.DbSet<JobType> JobTypes { get; set; } // JobType
        System.Data.Entity.DbSet<LFolino_VwAllRun> LFolino_VwAllRuns { get; set; } // vwAllRuns
        System.Data.Entity.DbSet<LFolino_VwAllStop> LFolino_VwAllStops { get; set; } // vwAllStops
        System.Data.Entity.DbSet<LFolino_VwProductivity> LFolino_VwProductivities { get; set; } // vwProductivity
        System.Data.Entity.DbSet<License> Licenses { get; set; } // License
        System.Data.Entity.DbSet<LocationImage> LocationImages { get; set; } // Location_Images
        System.Data.Entity.DbSet<LocationImageRelationship> LocationImageRelationships { get; set; } // Location_ImageRelationship
        System.Data.Entity.DbSet<LoggedInfo> LoggedInfoes { get; set; } // LoggedInfo
        System.Data.Entity.DbSet<MobileAppConfig> MobileAppConfigs { get; set; } // MobileAppConfig
        System.Data.Entity.DbSet<MobileAppEmployeeRequestsOthersRun> MobileAppEmployeeRequestsOthersRuns { get; set; } // MobileAppEmployeeRequestsOthersRun
        System.Data.Entity.DbSet<MobileAppException> MobileAppExceptions { get; set; } // MobileAppExceptions
        System.Data.Entity.DbSet<MobileAppProformaDateReleased> MobileAppProformaDateReleaseds { get; set; } // MobileAppProformaDateReleased
        System.Data.Entity.DbSet<MobileUser> MobileUsers { get; set; } // MobileUser
        System.Data.Entity.DbSet<ModuleInfo> ModuleInfoes { get; set; } // ModuleInfo
        System.Data.Entity.DbSet<NewOrder> NewOrders { get; set; } // NewOrders
        System.Data.Entity.DbSet<NewOrderDetail> NewOrderDetails { get; set; } // NewOrderDetail
        System.Data.Entity.DbSet<NonDispatchedStop> NonDispatchedStops { get; set; } // NonDispatchedStop
        System.Data.Entity.DbSet<NonDispatchedStopType> NonDispatchedStopTypes { get; set; } // NonDispatchedStopType
        System.Data.Entity.DbSet<Order> Orders { get; set; } // Orders
        System.Data.Entity.DbSet<OrderAction> OrderActions { get; set; } // OrderActions
        System.Data.Entity.DbSet<OrderActivity> OrderActivities { get; set; } // OrderActivity
        System.Data.Entity.DbSet<OrderAssignment> OrderAssignments { get; set; } // OrderAssignment
        System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // OrderDetail
        System.Data.Entity.DbSet<OrderError> OrderErrors { get; set; } // OrderErrors
        System.Data.Entity.DbSet<OrderItem> OrderItems { get; set; } // OrderItems
        System.Data.Entity.DbSet<OrderJobCode> OrderJobCodes { get; set; } // OrderJobCode
        System.Data.Entity.DbSet<OrderJobCodeMapping> OrderJobCodeMappings { get; set; } // OrderJobCodeMapping
        System.Data.Entity.DbSet<OrderPick> OrderPicks { get; set; } // OrderPick
        System.Data.Entity.DbSet<PalletTag> PalletTags { get; set; } // PalletTag
        System.Data.Entity.DbSet<Proforma> Proformas { get; set; } // Proforma
        System.Data.Entity.DbSet<ProformaRunMaster> ProformaRunMasters { get; set; } // ProformaRunMaster
        System.Data.Entity.DbSet<ProformaRunResource> ProformaRunResources { get; set; } // ProformaRunResource
        System.Data.Entity.DbSet<ProformaRunStop> ProformaRunStops { get; set; } // ProformaRunStops
        System.Data.Entity.DbSet<Report> Reports { get; set; } // Report
        System.Data.Entity.DbSet<ReportJob> ReportJobs { get; set; } // ReportJob
        System.Data.Entity.DbSet<ResultsOld> ResultsOlds { get; set; } // Results_old
        System.Data.Entity.DbSet<Run> Runs { get; set; } // Run
        System.Data.Entity.DbSet<RunAssignment> RunAssignments { get; set; } // RunAssignment
        System.Data.Entity.DbSet<RunDetail> RunDetails { get; set; } // RunDetails
        System.Data.Entity.DbSet<RunOrder> RunOrders { get; set; } // RunOrder
        System.Data.Entity.DbSet<RunResource> RunResources { get; set; } // RunResource
        System.Data.Entity.DbSet<RunStop> RunStops { get; set; } // RunStop
        System.Data.Entity.DbSet<RunStopDetail> RunStopDetails { get; set; } // RunStopDetail
        System.Data.Entity.DbSet<RunStopDetailPhoto> RunStopDetailPhotoes { get; set; } // RunStopDetailPhoto
        System.Data.Entity.DbSet<RunSub> RunSubs { get; set; } // RunSub
        System.Data.Entity.DbSet<ScannedPalletConfirm> ScannedPalletConfirms { get; set; } // ScannedPalletConfirm
        System.Data.Entity.DbSet<ScannedPalletLoad> ScannedPalletLoads { get; set; } // ScannedPalletLoad
        System.Data.Entity.DbSet<Server> Servers { get; set; } // Server
        System.Data.Entity.DbSet<ServiceLevel> ServiceLevels { get; set; } // Service_Level
        System.Data.Entity.DbSet<StatusCode> StatusCodes { get; set; } // Status_Codes
        System.Data.Entity.DbSet<StkBarcode> StkBarcodes { get; set; } // stkBarcode
        System.Data.Entity.DbSet<StkBarcodeArchive> StkBarcodeArchives { get; set; } // stkBarcode_Archive
        System.Data.Entity.DbSet<StkCodeDate> StkCodeDates { get; set; } // stkCodeDate
        System.Data.Entity.DbSet<StkCust> StkCusts { get; set; } // stkCust
        System.Data.Entity.DbSet<StkFlag> StkFlags { get; set; } // stkFlag
        System.Data.Entity.DbSet<StkInfo> StkInfoes { get; set; } // stkInfo
        System.Data.Entity.DbSet<StkInfoFlag> StkInfoFlags { get; set; } // stkInfoFlag
        System.Data.Entity.DbSet<StkLocation> StkLocations { get; set; } // stkLocation
        System.Data.Entity.DbSet<StkMobileDevice> StkMobileDevices { get; set; } // stkMobileDevice
        System.Data.Entity.DbSet<StkSqlCeIdentityRange> StkSqlCeIdentityRanges { get; set; } // stkSqlCEIdentityRange
        System.Data.Entity.DbSet<StkSqlCeIdentityRangeTable> StkSqlCeIdentityRangeTables { get; set; } // stkSqlCEIdentityRangeTable
        System.Data.Entity.DbSet<StkStock> StkStocks { get; set; } // stkStock
        System.Data.Entity.DbSet<StkUser> StkUsers { get; set; } // stkUser
        System.Data.Entity.DbSet<StkvwLocation> StkvwLocations { get; set; } // stkvwLocation
        System.Data.Entity.DbSet<StkvwStockCheck> StkvwStockChecks { get; set; } // stkvwStockChecks
        System.Data.Entity.DbSet<StkvwStockDate> StkvwStockDates { get; set; } // stkvwStockDate
        System.Data.Entity.DbSet<StkvwStockLd> StkvwStockLds { get; set; } // stkvwStock_ld
        System.Data.Entity.DbSet<StkvwStockLdAll> StkvwStockLdAlls { get; set; } // stkvwStock_ldAll
        System.Data.Entity.DbSet<StkvwStockLdOrig> StkvwStockLdOrigs { get; set; } // stkvwStock_ld_orig
        System.Data.Entity.DbSet<StkvwTiHi> StkvwTiHis { get; set; } // stkvwTiHi
        System.Data.Entity.DbSet<StopAssignment> StopAssignments { get; set; } // StopAssignment
        System.Data.Entity.DbSet<StopPallet> StopPallets { get; set; } // StopPallet
        System.Data.Entity.DbSet<SurName> SurNames { get; set; } // SurName
        System.Data.Entity.DbSet<Tractor> Tractors { get; set; } // Tractor
        System.Data.Entity.DbSet<TractorCalendar> TractorCalendars { get; set; } // Tractor_Calendar
        System.Data.Entity.DbSet<TractorInActiveReasonList> TractorInActiveReasonLists { get; set; } // Tractor_InActive_Reason_List
        System.Data.Entity.DbSet<TractorProductivity> TractorProductivities { get; set; } // Tractor_Productivity
        System.Data.Entity.DbSet<Trailer> Trailers { get; set; } // Trailer
        System.Data.Entity.DbSet<TrailerCalendar> TrailerCalendars { get; set; } // Trailer_Calendar
        System.Data.Entity.DbSet<TrailerInactiveReasonList> TrailerInactiveReasonLists { get; set; } // Trailer_Inactive_Reason_List
        System.Data.Entity.DbSet<TrailerProductivity> TrailerProductivities { get; set; } // Trailer_Productivity
        System.Data.Entity.DbSet<VwAllOrder> VwAllOrders { get; set; } // vwAllOrders
        System.Data.Entity.DbSet<VwCompanyLocation> VwCompanyLocations { get; set; } // vwCompanyLocation
        System.Data.Entity.DbSet<VwConsigneeFax> VwConsigneeFaxes { get; set; } // vwConsigneeFax
        System.Data.Entity.DbSet<VwContact> VwContacts { get; set; } // vwContacts
        System.Data.Entity.DbSet<VwContactsLegacy> VwContactsLegacies { get; set; } // vwContactsLegacy
        System.Data.Entity.DbSet<VwDispatch> VwDispatches { get; set; } // vwDispatch
        System.Data.Entity.DbSet<VwDispatchApp> VwDispatchApps { get; set; } // vwDispatchApp
        System.Data.Entity.DbSet<VwDispatchAppAll> VwDispatchAppAlls { get; set; } // vwDispatchAppAll
        System.Data.Entity.DbSet<VwDispatchAppArchive> VwDispatchAppArchives { get; set; } // vwDispatchAppArchive
        System.Data.Entity.DbSet<VwDispatchAppRun> VwDispatchAppRuns { get; set; } // vwDispatchAppRun
        System.Data.Entity.DbSet<VwDispatchAppRunStop> VwDispatchAppRunStops { get; set; } // vwDispatchAppRunStop
        System.Data.Entity.DbSet<VwDispatchAppUnplanned> VwDispatchAppUnplanneds { get; set; } // vwDispatchAppUnplanned
        System.Data.Entity.DbSet<VwDispatchArchive> VwDispatchArchives { get; set; } // vwDispatchArchive
        System.Data.Entity.DbSet<VwDispatchAudit> VwDispatchAudits { get; set; } // vwDispatchAudit
        System.Data.Entity.DbSet<VwDispatchDetailOpen> VwDispatchDetailOpens { get; set; } // vwDispatchDetailOpen
        System.Data.Entity.DbSet<VwDispatchOpen> VwDispatchOpens { get; set; } // vwDispatchOpen
        System.Data.Entity.DbSet<VwDispatchOpenOld> VwDispatchOpenOlds { get; set; } // vwDispatchOpen_old
        System.Data.Entity.DbSet<VwDispatchSheet2> VwDispatchSheet2 { get; set; } // vwDispatchSheet2
        System.Data.Entity.DbSet<VwDispatchSheetOrig> VwDispatchSheetOrigs { get; set; } // vwDispatchSheet_orig
        System.Data.Entity.DbSet<VwDriversOff> VwDriversOffs { get; set; } // vwDriversOff
        System.Data.Entity.DbSet<VwInboundDamage> VwInboundDamages { get; set; } // vwInboundDamage
        System.Data.Entity.DbSet<VwItemsPalletsConsignee> VwItemsPalletsConsignees { get; set; } // vwItemsPalletsConsignee
        System.Data.Entity.DbSet<VwOrder> VwOrders { get; set; } // vwOrders
        System.Data.Entity.DbSet<VwOrderLogin> VwOrderLogins { get; set; } // vwOrderLogins
        System.Data.Entity.DbSet<VwOrderPalletCount> VwOrderPalletCounts { get; set; } // vwOrderPalletCounts
        System.Data.Entity.DbSet<VwOrderPickListOpen> VwOrderPickListOpens { get; set; } // vwOrderPickListOpen
        System.Data.Entity.DbSet<VwOrphanedOrder> VwOrphanedOrders { get; set; } // vwOrphanedOrders
        System.Data.Entity.DbSet<VwPalletLoaderDispatchOpen> VwPalletLoaderDispatchOpens { get; set; } // vwPalletLoaderDispatchOpen
        System.Data.Entity.DbSet<VwPalletsByItemConsignee> VwPalletsByItemConsignees { get; set; } // vwPalletsByItemConsignee
        System.Data.Entity.DbSet<VwSmartDriveSchedule> VwSmartDriveSchedules { get; set; } // vwSmartDriveSchedule
        System.Data.Entity.DbSet<VwSmartDriveScheduleArchive> VwSmartDriveScheduleArchives { get; set; } // vwSmartDriveScheduleArchive
        System.Data.Entity.DbSet<VwStartTime> VwStartTimes { get; set; } // vwStartTimes
        System.Data.Entity.DbSet<VwStop> VwStops { get; set; } // vwStops
        System.Data.Entity.DbSet<VwStopStatsId> VwStopStatsIds { get; set; } // vwStopStatsId
        System.Data.Entity.DbSet<VwStopSummary> VwStopSummaries { get; set; } // vwStopSummary
        System.Data.Entity.DbSet<VwTractorsOff> VwTractorsOffs { get; set; } // vwTractorsOff
        System.Data.Entity.DbSet<VwUnassignedOrder> VwUnassignedOrders { get; set; } // vwUnassignedOrders
        System.Data.Entity.DbSet<WorkAssignment> WorkAssignments { get; set; } // WorkAssignment
        System.Data.Entity.DbSet<XpObjectType> XpObjectTypes { get; set; } // XPObjectType
        System.Data.Entity.DbSet<Zip2Zip> Zip2Zip { get; set; } // Zip2Zip
        System.Data.Entity.DbSet<Zip2ZipHistory> Zip2ZipHistory { get; set; } // Zip2ZipHistory

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int CreateProductivityResourcesForNewDay(System.DateTime? theDate);
        // CreateProductivityResourcesForNewDayAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int CreateProformaFromDispatchDay(string proformaName, System.DateTime? theDate, string proformaNotes);
        // CreateProformaFromDispatchDayAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int CreateRunsAndRunStopsForNewDay(int? proformaId, System.DateTime? theDate, bool? includeProformaDrivers, bool? includeProformaTractors, bool? includeProformaTrailers, bool? includePlannedShippedDate, bool? includePickup);
        // CreateRunsAndRunStopsForNewDayAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteDispatchDay(System.DateTime? theDate);
        // DeleteDispatchDayAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteEmptyRunStopsForDispatchDay(System.DateTime? theDate);
        // DeleteEmptyRunStopsForDispatchDayAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteProforma(int? proformaId);
        // DeleteProformaAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int GetNewOrdersForThisFlagId(int? flagId, out string strAddEditDeleteCounts);
        // GetNewOrdersForThisFlagIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int GetPrimaryKeyFromLicense(string column);
        // GetPrimaryKeyFromLicenseAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date);
        System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<PmBarcodesReturnModel>> PmBarcodesAsync(System.DateTime? date);

        int ProcTest();
        // ProcTestAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int PutOrderInRunStop(System.DateTime? currentDispatchDate, System.DateTime? orderPlannedShipDate, int? orderId, int? orderConsigneeId, bool? forceDate);
        // PutOrderInRunStopAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int SpSendCdosysmail(string from, string to, string subject, string body);
        // SpSendCdosysmailAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int StkNewFlag(int? mobileDeviceId);
        // StkNewFlagAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int StkNewInfoFlag(int? mobileDeviceId);
        // StkNewInfoFlagAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppAddCompany(string name, out decimal? companyId);
        // UspMobileAppAddCompanyAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppGetActualRunId(decimal? runNumberId, out decimal? runId);
        // UspMobileAppGetActualRunIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppGetActualRunStopId(decimal? stopNumberId, out decimal? runStopId);
        // UspMobileAppGetActualRunStopIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppGetRunId(out decimal? runId);
        // UspMobileAppGetRunIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate);
        System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListReturnModel>> UspMobileAppGetRunListAsync(System.DateTime? runDate);

        System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId);
        System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel>> UspMobileAppGetRunListByEmployeeAsync(System.DateTime? runDate, decimal? employeeId);

        int UspMobileAppGetRunNumberId(out decimal? runNumberId);
        // UspMobileAppGetRunNumberIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppGetStopId(out decimal? runStopId);
        // UspMobileAppGetStopIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int UspMobileAppGetStopNumberId(out decimal? runStopNumberId);
        // UspMobileAppGetStopNumberIdAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PL_DbContext : System.Data.Entity.DbContext, IPL_DbContext
    {
        public System.Data.Entity.DbSet<AppLog> AppLogs { get; set; } // AppLog
        public System.Data.Entity.DbSet<AppSetting> AppSettings { get; set; } // AppSettings
        public System.Data.Entity.DbSet<ArchiveOrder> ArchiveOrders { get; set; } // ArchiveOrders
        public System.Data.Entity.DbSet<ArchiveOrderDetail> ArchiveOrderDetails { get; set; } // ArchiveOrderDetail
        public System.Data.Entity.DbSet<ArchiveRun> ArchiveRuns { get; set; } // ArchiveRun
        public System.Data.Entity.DbSet<ArchiveRunOrder> ArchiveRunOrders { get; set; } // ArchiveRunOrder
        public System.Data.Entity.DbSet<ArchiveRunResource> ArchiveRunResources { get; set; } // ArchiveRunResource
        public System.Data.Entity.DbSet<ArchiveRunStop> ArchiveRunStops { get; set; } // ArchiveRunStop
        public System.Data.Entity.DbSet<ChkCheckItem> ChkCheckItems { get; set; } // chkCheckItem
        public System.Data.Entity.DbSet<ChkCheckItemLog> ChkCheckItemLogs { get; set; } // chkCheckItemLog
        public System.Data.Entity.DbSet<ChkPallet> ChkPallets { get; set; } // chkPallet
        public System.Data.Entity.DbSet<ChkPalletLog> ChkPalletLogs { get; set; } // chkPalletLog
        public System.Data.Entity.DbSet<ChkStop> ChkStops { get; set; } // chkStop
        public System.Data.Entity.DbSet<ChkvwCheckSummary> ChkvwCheckSummaries { get; set; } // chkvwCheckSummary
        public System.Data.Entity.DbSet<ChkvwException> ChkvwExceptions { get; set; } // chkvwExceptions
        public System.Data.Entity.DbSet<ChkvwExceptionDetail> ChkvwExceptionDetails { get; set; } // chkvwExceptionDetail
        public System.Data.Entity.DbSet<ChkvwOrderDetail> ChkvwOrderDetails { get; set; } // chkvwOrderDetail
        public System.Data.Entity.DbSet<ChkvwPalletCount> ChkvwPalletCounts { get; set; } // chkvwPalletCount
        public System.Data.Entity.DbSet<ChkvwReconcile> ChkvwReconciles { get; set; } // chkvwReconcile
        public System.Data.Entity.DbSet<ChkvwStopsNotClosed> ChkvwStopsNotCloseds { get; set; } // chkvwStopsNotClosed
        public System.Data.Entity.DbSet<ClientBarcodeType> ClientBarcodeTypes { get; set; } // ClientBarcodeType
        public System.Data.Entity.DbSet<ClientBarcodeTypeSpec> ClientBarcodeTypeSpecs { get; set; } // ClientBarcodeTypeSpec
        public System.Data.Entity.DbSet<Company> Companies { get; set; } // Company
        public System.Data.Entity.DbSet<CompanyCarrier> CompanyCarriers { get; set; } // CompanyCarrier
        public System.Data.Entity.DbSet<CompanyContactInfo> CompanyContactInfoes { get; set; } // CompanyContactInfo
        public System.Data.Entity.DbSet<CompanyLocation> CompanyLocations { get; set; } // CompanyLocation
        public System.Data.Entity.DbSet<CompanyLocationAppointment> CompanyLocationAppointments { get; set; } // CompanyLocationAppointment
        public System.Data.Entity.DbSet<CompanyLocationGp> CompanyLocationGps { get; set; } // CompanyLocationGPS
        public System.Data.Entity.DbSet<CompanyMfCode> CompanyMfCodes { get; set; } // CompanyMfCode
        public System.Data.Entity.DbSet<CompanyOpenWindow> CompanyOpenWindows { get; set; } // CompanyOpenWindow
        public System.Data.Entity.DbSet<CompanyShipper> CompanyShippers { get; set; } // CompanyShipper
        public System.Data.Entity.DbSet<CompanyStandard> CompanyStandards { get; set; } // CompanyStandard
        public System.Data.Entity.DbSet<CompletedWork> CompletedWorks { get; set; } // CompletedWork
        public System.Data.Entity.DbSet<Condition> Conditions { get; set; } // Condition
        public System.Data.Entity.DbSet<ContactType> ContactTypes { get; set; } // ContactType
        public System.Data.Entity.DbSet<DeletedOrder> DeletedOrders { get; set; } // DeletedOrders
        public System.Data.Entity.DbSet<Department> Departments { get; set; } // Department
        public System.Data.Entity.DbSet<Dtproperty> Dtproperties { get; set; } // dtproperties
        public System.Data.Entity.DbSet<Edi214> Edi214 { get; set; } // edi214
        public System.Data.Entity.DbSet<EdiFa> EdiFas { get; set; } // ediFa
        public System.Data.Entity.DbSet<EdiGroup> EdiGroups { get; set; } // ediGroup
        public System.Data.Entity.DbSet<EdiTransaction> EdiTransactions { get; set; } // ediTransaction
        public System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employee
        public System.Data.Entity.DbSet<EmployeeCalendar> EmployeeCalendars { get; set; } // Employee_Calendar
        public System.Data.Entity.DbSet<EmployeeDepartment> EmployeeDepartments { get; set; } // Employee_Department
        public System.Data.Entity.DbSet<EmployeeInActiveReasonList> EmployeeInActiveReasonLists { get; set; } // Employee_InActive_Reason_List
        public System.Data.Entity.DbSet<EmployeeProductivity> EmployeeProductivities { get; set; } // Employee_Productivity
        public System.Data.Entity.DbSet<EmployeeTime> EmployeeTimes { get; set; } // EmployeeTime
        public System.Data.Entity.DbSet<EquipmentChecklistResponse> EquipmentChecklistResponses { get; set; } // EquipmentChecklistResponse
        public System.Data.Entity.DbSet<EquipmentClassHeader> EquipmentClassHeaders { get; set; } // EquipmentClassHeader
        public System.Data.Entity.DbSet<EquipmentDetail> EquipmentDetails { get; set; } // EquipmentDetail
        public System.Data.Entity.DbSet<ExceptionLog> ExceptionLogs { get; set; } // ExceptionLog
        public System.Data.Entity.DbSet<Flag> Flags { get; set; } // Flag
        public System.Data.Entity.DbSet<GpsLocation> GpsLocations { get; set; } // GPSLocation
        public System.Data.Entity.DbSet<IdList> IdLists { get; set; } // IdList
        public System.Data.Entity.DbSet<ImportedWarehouseWeight> ImportedWarehouseWeights { get; set; } // ImportedWarehouseWeight
        public System.Data.Entity.DbSet<InboundCondition> InboundConditions { get; set; } // InboundCondition
        public System.Data.Entity.DbSet<InboundException> InboundExceptions { get; set; } // InboundException
        public System.Data.Entity.DbSet<InboundExceptionBeta> InboundExceptionBetas { get; set; } // InboundException_Beta
        public System.Data.Entity.DbSet<InboundExceptionCondition> InboundExceptionConditions { get; set; } // InboundExceptionCondition
        public System.Data.Entity.DbSet<InboundExceptionConditionBeta> InboundExceptionConditionBetas { get; set; } // InboundExceptionCondition_Beta
        public System.Data.Entity.DbSet<InboundLocation> InboundLocations { get; set; } // InboundLocation
        public System.Data.Entity.DbSet<InboundLog> InboundLogs { get; set; } // InboundLog
        public System.Data.Entity.DbSet<InboundPallet> InboundPallets { get; set; } // InboundPallet
        public System.Data.Entity.DbSet<InboundPalletBeta> InboundPalletBetas { get; set; } // InboundPallet_Beta
        public System.Data.Entity.DbSet<InboundPalletDetailBeta> InboundPalletDetailBetas { get; set; } // InboundPalletDetail_Beta
        public System.Data.Entity.DbSet<InboundSealDisposition> InboundSealDispositions { get; set; } // InboundSealDisposition
        public System.Data.Entity.DbSet<InboundTrailer> InboundTrailers { get; set; } // InboundTrailer
        public System.Data.Entity.DbSet<InboundTrailerBeta> InboundTrailerBetas { get; set; } // InboundTrailer_Beta
        public System.Data.Entity.DbSet<Item> Items { get; set; } // Item
        public System.Data.Entity.DbSet<JobType> JobTypes { get; set; } // JobType
        public System.Data.Entity.DbSet<LFolino_VwAllRun> LFolino_VwAllRuns { get; set; } // vwAllRuns
        public System.Data.Entity.DbSet<LFolino_VwAllStop> LFolino_VwAllStops { get; set; } // vwAllStops
        public System.Data.Entity.DbSet<LFolino_VwProductivity> LFolino_VwProductivities { get; set; } // vwProductivity
        public System.Data.Entity.DbSet<License> Licenses { get; set; } // License
        public System.Data.Entity.DbSet<LocationImage> LocationImages { get; set; } // Location_Images
        public System.Data.Entity.DbSet<LocationImageRelationship> LocationImageRelationships { get; set; } // Location_ImageRelationship
        public System.Data.Entity.DbSet<LoggedInfo> LoggedInfoes { get; set; } // LoggedInfo
        public System.Data.Entity.DbSet<MobileAppConfig> MobileAppConfigs { get; set; } // MobileAppConfig
        public System.Data.Entity.DbSet<MobileAppEmployeeRequestsOthersRun> MobileAppEmployeeRequestsOthersRuns { get; set; } // MobileAppEmployeeRequestsOthersRun
        public System.Data.Entity.DbSet<MobileAppException> MobileAppExceptions { get; set; } // MobileAppExceptions
        public System.Data.Entity.DbSet<MobileAppProformaDateReleased> MobileAppProformaDateReleaseds { get; set; } // MobileAppProformaDateReleased
        public System.Data.Entity.DbSet<MobileUser> MobileUsers { get; set; } // MobileUser
        public System.Data.Entity.DbSet<ModuleInfo> ModuleInfoes { get; set; } // ModuleInfo
        public System.Data.Entity.DbSet<NewOrder> NewOrders { get; set; } // NewOrders
        public System.Data.Entity.DbSet<NewOrderDetail> NewOrderDetails { get; set; } // NewOrderDetail
        public System.Data.Entity.DbSet<NonDispatchedStop> NonDispatchedStops { get; set; } // NonDispatchedStop
        public System.Data.Entity.DbSet<NonDispatchedStopType> NonDispatchedStopTypes { get; set; } // NonDispatchedStopType
        public System.Data.Entity.DbSet<Order> Orders { get; set; } // Orders
        public System.Data.Entity.DbSet<OrderAction> OrderActions { get; set; } // OrderActions
        public System.Data.Entity.DbSet<OrderActivity> OrderActivities { get; set; } // OrderActivity
        public System.Data.Entity.DbSet<OrderAssignment> OrderAssignments { get; set; } // OrderAssignment
        public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // OrderDetail
        public System.Data.Entity.DbSet<OrderError> OrderErrors { get; set; } // OrderErrors
        public System.Data.Entity.DbSet<OrderItem> OrderItems { get; set; } // OrderItems
        public System.Data.Entity.DbSet<OrderJobCode> OrderJobCodes { get; set; } // OrderJobCode
        public System.Data.Entity.DbSet<OrderJobCodeMapping> OrderJobCodeMappings { get; set; } // OrderJobCodeMapping
        public System.Data.Entity.DbSet<OrderPick> OrderPicks { get; set; } // OrderPick
        public System.Data.Entity.DbSet<PalletTag> PalletTags { get; set; } // PalletTag
        public System.Data.Entity.DbSet<Proforma> Proformas { get; set; } // Proforma
        public System.Data.Entity.DbSet<ProformaRunMaster> ProformaRunMasters { get; set; } // ProformaRunMaster
        public System.Data.Entity.DbSet<ProformaRunResource> ProformaRunResources { get; set; } // ProformaRunResource
        public System.Data.Entity.DbSet<ProformaRunStop> ProformaRunStops { get; set; } // ProformaRunStops
        public System.Data.Entity.DbSet<Report> Reports { get; set; } // Report
        public System.Data.Entity.DbSet<ReportJob> ReportJobs { get; set; } // ReportJob
        public System.Data.Entity.DbSet<ResultsOld> ResultsOlds { get; set; } // Results_old
        public System.Data.Entity.DbSet<Run> Runs { get; set; } // Run
        public System.Data.Entity.DbSet<RunAssignment> RunAssignments { get; set; } // RunAssignment
        public System.Data.Entity.DbSet<RunDetail> RunDetails { get; set; } // RunDetails
        public System.Data.Entity.DbSet<RunOrder> RunOrders { get; set; } // RunOrder
        public System.Data.Entity.DbSet<RunResource> RunResources { get; set; } // RunResource
        public System.Data.Entity.DbSet<RunStop> RunStops { get; set; } // RunStop
        public System.Data.Entity.DbSet<RunStopDetail> RunStopDetails { get; set; } // RunStopDetail
        public System.Data.Entity.DbSet<RunStopDetailPhoto> RunStopDetailPhotoes { get; set; } // RunStopDetailPhoto
        public System.Data.Entity.DbSet<RunSub> RunSubs { get; set; } // RunSub
        public System.Data.Entity.DbSet<ScannedPalletConfirm> ScannedPalletConfirms { get; set; } // ScannedPalletConfirm
        public System.Data.Entity.DbSet<ScannedPalletLoad> ScannedPalletLoads { get; set; } // ScannedPalletLoad
        public System.Data.Entity.DbSet<Server> Servers { get; set; } // Server
        public System.Data.Entity.DbSet<ServiceLevel> ServiceLevels { get; set; } // Service_Level
        public System.Data.Entity.DbSet<StatusCode> StatusCodes { get; set; } // Status_Codes
        public System.Data.Entity.DbSet<StkBarcode> StkBarcodes { get; set; } // stkBarcode
        public System.Data.Entity.DbSet<StkBarcodeArchive> StkBarcodeArchives { get; set; } // stkBarcode_Archive
        public System.Data.Entity.DbSet<StkCodeDate> StkCodeDates { get; set; } // stkCodeDate
        public System.Data.Entity.DbSet<StkCust> StkCusts { get; set; } // stkCust
        public System.Data.Entity.DbSet<StkFlag> StkFlags { get; set; } // stkFlag
        public System.Data.Entity.DbSet<StkInfo> StkInfoes { get; set; } // stkInfo
        public System.Data.Entity.DbSet<StkInfoFlag> StkInfoFlags { get; set; } // stkInfoFlag
        public System.Data.Entity.DbSet<StkLocation> StkLocations { get; set; } // stkLocation
        public System.Data.Entity.DbSet<StkMobileDevice> StkMobileDevices { get; set; } // stkMobileDevice
        public System.Data.Entity.DbSet<StkSqlCeIdentityRange> StkSqlCeIdentityRanges { get; set; } // stkSqlCEIdentityRange
        public System.Data.Entity.DbSet<StkSqlCeIdentityRangeTable> StkSqlCeIdentityRangeTables { get; set; } // stkSqlCEIdentityRangeTable
        public System.Data.Entity.DbSet<StkStock> StkStocks { get; set; } // stkStock
        public System.Data.Entity.DbSet<StkUser> StkUsers { get; set; } // stkUser
        public System.Data.Entity.DbSet<StkvwLocation> StkvwLocations { get; set; } // stkvwLocation
        public System.Data.Entity.DbSet<StkvwStockCheck> StkvwStockChecks { get; set; } // stkvwStockChecks
        public System.Data.Entity.DbSet<StkvwStockDate> StkvwStockDates { get; set; } // stkvwStockDate
        public System.Data.Entity.DbSet<StkvwStockLd> StkvwStockLds { get; set; } // stkvwStock_ld
        public System.Data.Entity.DbSet<StkvwStockLdAll> StkvwStockLdAlls { get; set; } // stkvwStock_ldAll
        public System.Data.Entity.DbSet<StkvwStockLdOrig> StkvwStockLdOrigs { get; set; } // stkvwStock_ld_orig
        public System.Data.Entity.DbSet<StkvwTiHi> StkvwTiHis { get; set; } // stkvwTiHi
        public System.Data.Entity.DbSet<StopAssignment> StopAssignments { get; set; } // StopAssignment
        public System.Data.Entity.DbSet<StopPallet> StopPallets { get; set; } // StopPallet
        public System.Data.Entity.DbSet<SurName> SurNames { get; set; } // SurName
        public System.Data.Entity.DbSet<Tractor> Tractors { get; set; } // Tractor
        public System.Data.Entity.DbSet<TractorCalendar> TractorCalendars { get; set; } // Tractor_Calendar
        public System.Data.Entity.DbSet<TractorInActiveReasonList> TractorInActiveReasonLists { get; set; } // Tractor_InActive_Reason_List
        public System.Data.Entity.DbSet<TractorProductivity> TractorProductivities { get; set; } // Tractor_Productivity
        public System.Data.Entity.DbSet<Trailer> Trailers { get; set; } // Trailer
        public System.Data.Entity.DbSet<TrailerCalendar> TrailerCalendars { get; set; } // Trailer_Calendar
        public System.Data.Entity.DbSet<TrailerInactiveReasonList> TrailerInactiveReasonLists { get; set; } // Trailer_Inactive_Reason_List
        public System.Data.Entity.DbSet<TrailerProductivity> TrailerProductivities { get; set; } // Trailer_Productivity
        public System.Data.Entity.DbSet<VwAllOrder> VwAllOrders { get; set; } // vwAllOrders
        public System.Data.Entity.DbSet<VwCompanyLocation> VwCompanyLocations { get; set; } // vwCompanyLocation
        public System.Data.Entity.DbSet<VwConsigneeFax> VwConsigneeFaxes { get; set; } // vwConsigneeFax
        public System.Data.Entity.DbSet<VwContact> VwContacts { get; set; } // vwContacts
        public System.Data.Entity.DbSet<VwContactsLegacy> VwContactsLegacies { get; set; } // vwContactsLegacy
        public System.Data.Entity.DbSet<VwDispatch> VwDispatches { get; set; } // vwDispatch
        public System.Data.Entity.DbSet<VwDispatchApp> VwDispatchApps { get; set; } // vwDispatchApp
        public System.Data.Entity.DbSet<VwDispatchAppAll> VwDispatchAppAlls { get; set; } // vwDispatchAppAll
        public System.Data.Entity.DbSet<VwDispatchAppArchive> VwDispatchAppArchives { get; set; } // vwDispatchAppArchive
        public System.Data.Entity.DbSet<VwDispatchAppRun> VwDispatchAppRuns { get; set; } // vwDispatchAppRun
        public System.Data.Entity.DbSet<VwDispatchAppRunStop> VwDispatchAppRunStops { get; set; } // vwDispatchAppRunStop
        public System.Data.Entity.DbSet<VwDispatchAppUnplanned> VwDispatchAppUnplanneds { get; set; } // vwDispatchAppUnplanned
        public System.Data.Entity.DbSet<VwDispatchArchive> VwDispatchArchives { get; set; } // vwDispatchArchive
        public System.Data.Entity.DbSet<VwDispatchAudit> VwDispatchAudits { get; set; } // vwDispatchAudit
        public System.Data.Entity.DbSet<VwDispatchDetailOpen> VwDispatchDetailOpens { get; set; } // vwDispatchDetailOpen
        public System.Data.Entity.DbSet<VwDispatchOpen> VwDispatchOpens { get; set; } // vwDispatchOpen
        public System.Data.Entity.DbSet<VwDispatchOpenOld> VwDispatchOpenOlds { get; set; } // vwDispatchOpen_old
        public System.Data.Entity.DbSet<VwDispatchSheet2> VwDispatchSheet2 { get; set; } // vwDispatchSheet2
        public System.Data.Entity.DbSet<VwDispatchSheetOrig> VwDispatchSheetOrigs { get; set; } // vwDispatchSheet_orig
        public System.Data.Entity.DbSet<VwDriversOff> VwDriversOffs { get; set; } // vwDriversOff
        public System.Data.Entity.DbSet<VwInboundDamage> VwInboundDamages { get; set; } // vwInboundDamage
        public System.Data.Entity.DbSet<VwItemsPalletsConsignee> VwItemsPalletsConsignees { get; set; } // vwItemsPalletsConsignee
        public System.Data.Entity.DbSet<VwOrder> VwOrders { get; set; } // vwOrders
        public System.Data.Entity.DbSet<VwOrderLogin> VwOrderLogins { get; set; } // vwOrderLogins
        public System.Data.Entity.DbSet<VwOrderPalletCount> VwOrderPalletCounts { get; set; } // vwOrderPalletCounts
        public System.Data.Entity.DbSet<VwOrderPickListOpen> VwOrderPickListOpens { get; set; } // vwOrderPickListOpen
        public System.Data.Entity.DbSet<VwOrphanedOrder> VwOrphanedOrders { get; set; } // vwOrphanedOrders
        public System.Data.Entity.DbSet<VwPalletLoaderDispatchOpen> VwPalletLoaderDispatchOpens { get; set; } // vwPalletLoaderDispatchOpen
        public System.Data.Entity.DbSet<VwPalletsByItemConsignee> VwPalletsByItemConsignees { get; set; } // vwPalletsByItemConsignee
        public System.Data.Entity.DbSet<VwSmartDriveSchedule> VwSmartDriveSchedules { get; set; } // vwSmartDriveSchedule
        public System.Data.Entity.DbSet<VwSmartDriveScheduleArchive> VwSmartDriveScheduleArchives { get; set; } // vwSmartDriveScheduleArchive
        public System.Data.Entity.DbSet<VwStartTime> VwStartTimes { get; set; } // vwStartTimes
        public System.Data.Entity.DbSet<VwStop> VwStops { get; set; } // vwStops
        public System.Data.Entity.DbSet<VwStopStatsId> VwStopStatsIds { get; set; } // vwStopStatsId
        public System.Data.Entity.DbSet<VwStopSummary> VwStopSummaries { get; set; } // vwStopSummary
        public System.Data.Entity.DbSet<VwTractorsOff> VwTractorsOffs { get; set; } // vwTractorsOff
        public System.Data.Entity.DbSet<VwUnassignedOrder> VwUnassignedOrders { get; set; } // vwUnassignedOrders
        public System.Data.Entity.DbSet<WorkAssignment> WorkAssignments { get; set; } // WorkAssignment
        public System.Data.Entity.DbSet<XpObjectType> XpObjectTypes { get; set; } // XPObjectType
        public System.Data.Entity.DbSet<Zip2Zip> Zip2Zip { get; set; } // Zip2Zip
        public System.Data.Entity.DbSet<Zip2ZipHistory> Zip2ZipHistory { get; set; } // Zip2ZipHistory

        static PL_DbContext()
        {
            System.Data.Entity.Database.SetInitializer<PL_DbContext>(null);
        }

        public PL_DbContext()
            : base("Name=PL_DbConnection")
        {
        }

        public PL_DbContext(string connectionString)
            : base(connectionString)
        {
        }

        public PL_DbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public PL_DbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public PL_DbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AppLogConfiguration());
            modelBuilder.Configurations.Add(new AppSettingConfiguration());
            modelBuilder.Configurations.Add(new ArchiveOrderConfiguration());
            modelBuilder.Configurations.Add(new ArchiveOrderDetailConfiguration());
            modelBuilder.Configurations.Add(new ArchiveRunConfiguration());
            modelBuilder.Configurations.Add(new ArchiveRunOrderConfiguration());
            modelBuilder.Configurations.Add(new ArchiveRunResourceConfiguration());
            modelBuilder.Configurations.Add(new ArchiveRunStopConfiguration());
            modelBuilder.Configurations.Add(new ChkCheckItemConfiguration());
            modelBuilder.Configurations.Add(new ChkCheckItemLogConfiguration());
            modelBuilder.Configurations.Add(new ChkPalletConfiguration());
            modelBuilder.Configurations.Add(new ChkPalletLogConfiguration());
            modelBuilder.Configurations.Add(new ChkStopConfiguration());
            modelBuilder.Configurations.Add(new ChkvwCheckSummaryConfiguration());
            modelBuilder.Configurations.Add(new ChkvwExceptionConfiguration());
            modelBuilder.Configurations.Add(new ChkvwExceptionDetailConfiguration());
            modelBuilder.Configurations.Add(new ChkvwOrderDetailConfiguration());
            modelBuilder.Configurations.Add(new ChkvwPalletCountConfiguration());
            modelBuilder.Configurations.Add(new ChkvwReconcileConfiguration());
            modelBuilder.Configurations.Add(new ChkvwStopsNotClosedConfiguration());
            modelBuilder.Configurations.Add(new ClientBarcodeTypeConfiguration());
            modelBuilder.Configurations.Add(new ClientBarcodeTypeSpecConfiguration());
            modelBuilder.Configurations.Add(new CompanyConfiguration());
            modelBuilder.Configurations.Add(new CompanyCarrierConfiguration());
            modelBuilder.Configurations.Add(new CompanyContactInfoConfiguration());
            modelBuilder.Configurations.Add(new CompanyLocationConfiguration());
            modelBuilder.Configurations.Add(new CompanyLocationAppointmentConfiguration());
            modelBuilder.Configurations.Add(new CompanyLocationGpConfiguration());
            modelBuilder.Configurations.Add(new CompanyMfCodeConfiguration());
            modelBuilder.Configurations.Add(new CompanyOpenWindowConfiguration());
            modelBuilder.Configurations.Add(new CompanyShipperConfiguration());
            modelBuilder.Configurations.Add(new CompanyStandardConfiguration());
            modelBuilder.Configurations.Add(new CompletedWorkConfiguration());
            modelBuilder.Configurations.Add(new ConditionConfiguration());
            modelBuilder.Configurations.Add(new ContactTypeConfiguration());
            modelBuilder.Configurations.Add(new DeletedOrderConfiguration());
            modelBuilder.Configurations.Add(new DepartmentConfiguration());
            modelBuilder.Configurations.Add(new DtpropertyConfiguration());
            modelBuilder.Configurations.Add(new Edi214Configuration());
            modelBuilder.Configurations.Add(new EdiFaConfiguration());
            modelBuilder.Configurations.Add(new EdiGroupConfiguration());
            modelBuilder.Configurations.Add(new EdiTransactionConfiguration());
            modelBuilder.Configurations.Add(new EmployeeConfiguration());
            modelBuilder.Configurations.Add(new EmployeeCalendarConfiguration());
            modelBuilder.Configurations.Add(new EmployeeDepartmentConfiguration());
            modelBuilder.Configurations.Add(new EmployeeInActiveReasonListConfiguration());
            modelBuilder.Configurations.Add(new EmployeeProductivityConfiguration());
            modelBuilder.Configurations.Add(new EmployeeTimeConfiguration());
            modelBuilder.Configurations.Add(new EquipmentChecklistResponseConfiguration());
            modelBuilder.Configurations.Add(new EquipmentClassHeaderConfiguration());
            modelBuilder.Configurations.Add(new EquipmentDetailConfiguration());
            modelBuilder.Configurations.Add(new ExceptionLogConfiguration());
            modelBuilder.Configurations.Add(new FlagConfiguration());
            modelBuilder.Configurations.Add(new GpsLocationConfiguration());
            modelBuilder.Configurations.Add(new IdListConfiguration());
            modelBuilder.Configurations.Add(new ImportedWarehouseWeightConfiguration());
            modelBuilder.Configurations.Add(new InboundConditionConfiguration());
            modelBuilder.Configurations.Add(new InboundExceptionConfiguration());
            modelBuilder.Configurations.Add(new InboundExceptionBetaConfiguration());
            modelBuilder.Configurations.Add(new InboundExceptionConditionConfiguration());
            modelBuilder.Configurations.Add(new InboundExceptionConditionBetaConfiguration());
            modelBuilder.Configurations.Add(new InboundLocationConfiguration());
            modelBuilder.Configurations.Add(new InboundLogConfiguration());
            modelBuilder.Configurations.Add(new InboundPalletConfiguration());
            modelBuilder.Configurations.Add(new InboundPalletBetaConfiguration());
            modelBuilder.Configurations.Add(new InboundPalletDetailBetaConfiguration());
            modelBuilder.Configurations.Add(new InboundSealDispositionConfiguration());
            modelBuilder.Configurations.Add(new InboundTrailerConfiguration());
            modelBuilder.Configurations.Add(new InboundTrailerBetaConfiguration());
            modelBuilder.Configurations.Add(new ItemConfiguration());
            modelBuilder.Configurations.Add(new JobTypeConfiguration());
            modelBuilder.Configurations.Add(new LFolino_VwAllRunConfiguration());
            modelBuilder.Configurations.Add(new LFolino_VwAllStopConfiguration());
            modelBuilder.Configurations.Add(new LFolino_VwProductivityConfiguration());
            modelBuilder.Configurations.Add(new LicenseConfiguration());
            modelBuilder.Configurations.Add(new LocationImageConfiguration());
            modelBuilder.Configurations.Add(new LocationImageRelationshipConfiguration());
            modelBuilder.Configurations.Add(new LoggedInfoConfiguration());
            modelBuilder.Configurations.Add(new MobileAppConfigConfiguration());
            modelBuilder.Configurations.Add(new MobileAppEmployeeRequestsOthersRunConfiguration());
            modelBuilder.Configurations.Add(new MobileAppExceptionConfiguration());
            modelBuilder.Configurations.Add(new MobileAppProformaDateReleasedConfiguration());
            modelBuilder.Configurations.Add(new MobileUserConfiguration());
            modelBuilder.Configurations.Add(new ModuleInfoConfiguration());
            modelBuilder.Configurations.Add(new NewOrderConfiguration());
            modelBuilder.Configurations.Add(new NewOrderDetailConfiguration());
            modelBuilder.Configurations.Add(new NonDispatchedStopConfiguration());
            modelBuilder.Configurations.Add(new NonDispatchedStopTypeConfiguration());
            modelBuilder.Configurations.Add(new OrderConfiguration());
            modelBuilder.Configurations.Add(new OrderActionConfiguration());
            modelBuilder.Configurations.Add(new OrderActivityConfiguration());
            modelBuilder.Configurations.Add(new OrderAssignmentConfiguration());
            modelBuilder.Configurations.Add(new OrderDetailConfiguration());
            modelBuilder.Configurations.Add(new OrderErrorConfiguration());
            modelBuilder.Configurations.Add(new OrderItemConfiguration());
            modelBuilder.Configurations.Add(new OrderJobCodeConfiguration());
            modelBuilder.Configurations.Add(new OrderJobCodeMappingConfiguration());
            modelBuilder.Configurations.Add(new OrderPickConfiguration());
            modelBuilder.Configurations.Add(new PalletTagConfiguration());
            modelBuilder.Configurations.Add(new ProformaConfiguration());
            modelBuilder.Configurations.Add(new ProformaRunMasterConfiguration());
            modelBuilder.Configurations.Add(new ProformaRunResourceConfiguration());
            modelBuilder.Configurations.Add(new ProformaRunStopConfiguration());
            modelBuilder.Configurations.Add(new ReportConfiguration());
            modelBuilder.Configurations.Add(new ReportJobConfiguration());
            modelBuilder.Configurations.Add(new ResultsOldConfiguration());
            modelBuilder.Configurations.Add(new RunConfiguration());
            modelBuilder.Configurations.Add(new RunAssignmentConfiguration());
            modelBuilder.Configurations.Add(new RunDetailConfiguration());
            modelBuilder.Configurations.Add(new RunOrderConfiguration());
            modelBuilder.Configurations.Add(new RunResourceConfiguration());
            modelBuilder.Configurations.Add(new RunStopConfiguration());
            modelBuilder.Configurations.Add(new RunStopDetailConfiguration());
            modelBuilder.Configurations.Add(new RunStopDetailPhotoConfiguration());
            modelBuilder.Configurations.Add(new RunSubConfiguration());
            modelBuilder.Configurations.Add(new ScannedPalletConfirmConfiguration());
            modelBuilder.Configurations.Add(new ScannedPalletLoadConfiguration());
            modelBuilder.Configurations.Add(new ServerConfiguration());
            modelBuilder.Configurations.Add(new ServiceLevelConfiguration());
            modelBuilder.Configurations.Add(new StatusCodeConfiguration());
            modelBuilder.Configurations.Add(new StkBarcodeConfiguration());
            modelBuilder.Configurations.Add(new StkBarcodeArchiveConfiguration());
            modelBuilder.Configurations.Add(new StkCodeDateConfiguration());
            modelBuilder.Configurations.Add(new StkCustConfiguration());
            modelBuilder.Configurations.Add(new StkFlagConfiguration());
            modelBuilder.Configurations.Add(new StkInfoConfiguration());
            modelBuilder.Configurations.Add(new StkInfoFlagConfiguration());
            modelBuilder.Configurations.Add(new StkLocationConfiguration());
            modelBuilder.Configurations.Add(new StkMobileDeviceConfiguration());
            modelBuilder.Configurations.Add(new StkSqlCeIdentityRangeConfiguration());
            modelBuilder.Configurations.Add(new StkSqlCeIdentityRangeTableConfiguration());
            modelBuilder.Configurations.Add(new StkStockConfiguration());
            modelBuilder.Configurations.Add(new StkUserConfiguration());
            modelBuilder.Configurations.Add(new StkvwLocationConfiguration());
            modelBuilder.Configurations.Add(new StkvwStockCheckConfiguration());
            modelBuilder.Configurations.Add(new StkvwStockDateConfiguration());
            modelBuilder.Configurations.Add(new StkvwStockLdConfiguration());
            modelBuilder.Configurations.Add(new StkvwStockLdAllConfiguration());
            modelBuilder.Configurations.Add(new StkvwStockLdOrigConfiguration());
            modelBuilder.Configurations.Add(new StkvwTiHiConfiguration());
            modelBuilder.Configurations.Add(new StopAssignmentConfiguration());
            modelBuilder.Configurations.Add(new StopPalletConfiguration());
            modelBuilder.Configurations.Add(new SurNameConfiguration());
            modelBuilder.Configurations.Add(new TractorConfiguration());
            modelBuilder.Configurations.Add(new TractorCalendarConfiguration());
            modelBuilder.Configurations.Add(new TractorInActiveReasonListConfiguration());
            modelBuilder.Configurations.Add(new TractorProductivityConfiguration());
            modelBuilder.Configurations.Add(new TrailerConfiguration());
            modelBuilder.Configurations.Add(new TrailerCalendarConfiguration());
            modelBuilder.Configurations.Add(new TrailerInactiveReasonListConfiguration());
            modelBuilder.Configurations.Add(new TrailerProductivityConfiguration());
            modelBuilder.Configurations.Add(new VwAllOrderConfiguration());
            modelBuilder.Configurations.Add(new VwCompanyLocationConfiguration());
            modelBuilder.Configurations.Add(new VwConsigneeFaxConfiguration());
            modelBuilder.Configurations.Add(new VwContactConfiguration());
            modelBuilder.Configurations.Add(new VwContactsLegacyConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppAllConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppArchiveConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppRunConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppRunStopConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAppUnplannedConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchArchiveConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchAuditConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchDetailOpenConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchOpenConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchOpenOldConfiguration());
            modelBuilder.Configurations.Add(new VwDispatchSheet2Configuration());
            modelBuilder.Configurations.Add(new VwDispatchSheetOrigConfiguration());
            modelBuilder.Configurations.Add(new VwDriversOffConfiguration());
            modelBuilder.Configurations.Add(new VwInboundDamageConfiguration());
            modelBuilder.Configurations.Add(new VwItemsPalletsConsigneeConfiguration());
            modelBuilder.Configurations.Add(new VwOrderConfiguration());
            modelBuilder.Configurations.Add(new VwOrderLoginConfiguration());
            modelBuilder.Configurations.Add(new VwOrderPalletCountConfiguration());
            modelBuilder.Configurations.Add(new VwOrderPickListOpenConfiguration());
            modelBuilder.Configurations.Add(new VwOrphanedOrderConfiguration());
            modelBuilder.Configurations.Add(new VwPalletLoaderDispatchOpenConfiguration());
            modelBuilder.Configurations.Add(new VwPalletsByItemConsigneeConfiguration());
            modelBuilder.Configurations.Add(new VwSmartDriveScheduleConfiguration());
            modelBuilder.Configurations.Add(new VwSmartDriveScheduleArchiveConfiguration());
            modelBuilder.Configurations.Add(new VwStartTimeConfiguration());
            modelBuilder.Configurations.Add(new VwStopConfiguration());
            modelBuilder.Configurations.Add(new VwStopStatsIdConfiguration());
            modelBuilder.Configurations.Add(new VwStopSummaryConfiguration());
            modelBuilder.Configurations.Add(new VwTractorsOffConfiguration());
            modelBuilder.Configurations.Add(new VwUnassignedOrderConfiguration());
            modelBuilder.Configurations.Add(new WorkAssignmentConfiguration());
            modelBuilder.Configurations.Add(new XpObjectTypeConfiguration());
            modelBuilder.Configurations.Add(new Zip2ZipConfiguration());
            modelBuilder.Configurations.Add(new Zip2ZipHistoryConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AppLogConfiguration(schema));
            modelBuilder.Configurations.Add(new AppSettingConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveOrderDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveRunConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveRunOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveRunResourceConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchiveRunStopConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkCheckItemConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkCheckItemLogConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkPalletConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkPalletLogConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkStopConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwCheckSummaryConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwExceptionDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwOrderDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwPalletCountConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwReconcileConfiguration(schema));
            modelBuilder.Configurations.Add(new ChkvwStopsNotClosedConfiguration(schema));
            modelBuilder.Configurations.Add(new ClientBarcodeTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ClientBarcodeTypeSpecConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyCarrierConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyContactInfoConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyLocationAppointmentConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyLocationGpConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyMfCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyOpenWindowConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyShipperConfiguration(schema));
            modelBuilder.Configurations.Add(new CompanyStandardConfiguration(schema));
            modelBuilder.Configurations.Add(new CompletedWorkConfiguration(schema));
            modelBuilder.Configurations.Add(new ConditionConfiguration(schema));
            modelBuilder.Configurations.Add(new ContactTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new DeletedOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartmentConfiguration(schema));
            modelBuilder.Configurations.Add(new DtpropertyConfiguration(schema));
            modelBuilder.Configurations.Add(new Edi214Configuration(schema));
            modelBuilder.Configurations.Add(new EdiFaConfiguration(schema));
            modelBuilder.Configurations.Add(new EdiGroupConfiguration(schema));
            modelBuilder.Configurations.Add(new EdiTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeCalendarConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeDepartmentConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeInActiveReasonListConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeProductivityConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeTimeConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentChecklistResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentClassHeaderConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new ExceptionLogConfiguration(schema));
            modelBuilder.Configurations.Add(new FlagConfiguration(schema));
            modelBuilder.Configurations.Add(new GpsLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new IdListConfiguration(schema));
            modelBuilder.Configurations.Add(new ImportedWarehouseWeightConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundConditionConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundExceptionBetaConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundExceptionConditionConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundExceptionConditionBetaConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundLogConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundPalletConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundPalletBetaConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundPalletDetailBetaConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundSealDispositionConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundTrailerConfiguration(schema));
            modelBuilder.Configurations.Add(new InboundTrailerBetaConfiguration(schema));
            modelBuilder.Configurations.Add(new ItemConfiguration(schema));
            modelBuilder.Configurations.Add(new JobTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new LFolino_VwAllRunConfiguration(schema));
            modelBuilder.Configurations.Add(new LFolino_VwAllStopConfiguration(schema));
            modelBuilder.Configurations.Add(new LFolino_VwProductivityConfiguration(schema));
            modelBuilder.Configurations.Add(new LicenseConfiguration(schema));
            modelBuilder.Configurations.Add(new LocationImageConfiguration(schema));
            modelBuilder.Configurations.Add(new LocationImageRelationshipConfiguration(schema));
            modelBuilder.Configurations.Add(new LoggedInfoConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileAppConfigConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileAppEmployeeRequestsOthersRunConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileAppExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileAppProformaDateReleasedConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileUserConfiguration(schema));
            modelBuilder.Configurations.Add(new ModuleInfoConfiguration(schema));
            modelBuilder.Configurations.Add(new NewOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new NewOrderDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new NonDispatchedStopConfiguration(schema));
            modelBuilder.Configurations.Add(new NonDispatchedStopTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderActionConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderAssignmentConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderErrorConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderItemConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderJobCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderJobCodeMappingConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderPickConfiguration(schema));
            modelBuilder.Configurations.Add(new PalletTagConfiguration(schema));
            modelBuilder.Configurations.Add(new ProformaConfiguration(schema));
            modelBuilder.Configurations.Add(new ProformaRunMasterConfiguration(schema));
            modelBuilder.Configurations.Add(new ProformaRunResourceConfiguration(schema));
            modelBuilder.Configurations.Add(new ProformaRunStopConfiguration(schema));
            modelBuilder.Configurations.Add(new ReportConfiguration(schema));
            modelBuilder.Configurations.Add(new ReportJobConfiguration(schema));
            modelBuilder.Configurations.Add(new ResultsOldConfiguration(schema));
            modelBuilder.Configurations.Add(new RunConfiguration(schema));
            modelBuilder.Configurations.Add(new RunAssignmentConfiguration(schema));
            modelBuilder.Configurations.Add(new RunDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new RunOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new RunResourceConfiguration(schema));
            modelBuilder.Configurations.Add(new RunStopConfiguration(schema));
            modelBuilder.Configurations.Add(new RunStopDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new RunStopDetailPhotoConfiguration(schema));
            modelBuilder.Configurations.Add(new RunSubConfiguration(schema));
            modelBuilder.Configurations.Add(new ScannedPalletConfirmConfiguration(schema));
            modelBuilder.Configurations.Add(new ScannedPalletLoadConfiguration(schema));
            modelBuilder.Configurations.Add(new ServerConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiceLevelConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new StkBarcodeConfiguration(schema));
            modelBuilder.Configurations.Add(new StkBarcodeArchiveConfiguration(schema));
            modelBuilder.Configurations.Add(new StkCodeDateConfiguration(schema));
            modelBuilder.Configurations.Add(new StkCustConfiguration(schema));
            modelBuilder.Configurations.Add(new StkFlagConfiguration(schema));
            modelBuilder.Configurations.Add(new StkInfoConfiguration(schema));
            modelBuilder.Configurations.Add(new StkInfoFlagConfiguration(schema));
            modelBuilder.Configurations.Add(new StkLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new StkMobileDeviceConfiguration(schema));
            modelBuilder.Configurations.Add(new StkSqlCeIdentityRangeConfiguration(schema));
            modelBuilder.Configurations.Add(new StkSqlCeIdentityRangeTableConfiguration(schema));
            modelBuilder.Configurations.Add(new StkStockConfiguration(schema));
            modelBuilder.Configurations.Add(new StkUserConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwStockCheckConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwStockDateConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwStockLdConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwStockLdAllConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwStockLdOrigConfiguration(schema));
            modelBuilder.Configurations.Add(new StkvwTiHiConfiguration(schema));
            modelBuilder.Configurations.Add(new StopAssignmentConfiguration(schema));
            modelBuilder.Configurations.Add(new StopPalletConfiguration(schema));
            modelBuilder.Configurations.Add(new SurNameConfiguration(schema));
            modelBuilder.Configurations.Add(new TractorConfiguration(schema));
            modelBuilder.Configurations.Add(new TractorCalendarConfiguration(schema));
            modelBuilder.Configurations.Add(new TractorInActiveReasonListConfiguration(schema));
            modelBuilder.Configurations.Add(new TractorProductivityConfiguration(schema));
            modelBuilder.Configurations.Add(new TrailerConfiguration(schema));
            modelBuilder.Configurations.Add(new TrailerCalendarConfiguration(schema));
            modelBuilder.Configurations.Add(new TrailerInactiveReasonListConfiguration(schema));
            modelBuilder.Configurations.Add(new TrailerProductivityConfiguration(schema));
            modelBuilder.Configurations.Add(new VwAllOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new VwCompanyLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new VwConsigneeFaxConfiguration(schema));
            modelBuilder.Configurations.Add(new VwContactConfiguration(schema));
            modelBuilder.Configurations.Add(new VwContactsLegacyConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppAllConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppArchiveConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppRunConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppRunStopConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAppUnplannedConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchArchiveConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchAuditConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchDetailOpenConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchOpenConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchOpenOldConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDispatchSheet2Configuration(schema));
            modelBuilder.Configurations.Add(new VwDispatchSheetOrigConfiguration(schema));
            modelBuilder.Configurations.Add(new VwDriversOffConfiguration(schema));
            modelBuilder.Configurations.Add(new VwInboundDamageConfiguration(schema));
            modelBuilder.Configurations.Add(new VwItemsPalletsConsigneeConfiguration(schema));
            modelBuilder.Configurations.Add(new VwOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new VwOrderLoginConfiguration(schema));
            modelBuilder.Configurations.Add(new VwOrderPalletCountConfiguration(schema));
            modelBuilder.Configurations.Add(new VwOrderPickListOpenConfiguration(schema));
            modelBuilder.Configurations.Add(new VwOrphanedOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new VwPalletLoaderDispatchOpenConfiguration(schema));
            modelBuilder.Configurations.Add(new VwPalletsByItemConsigneeConfiguration(schema));
            modelBuilder.Configurations.Add(new VwSmartDriveScheduleConfiguration(schema));
            modelBuilder.Configurations.Add(new VwSmartDriveScheduleArchiveConfiguration(schema));
            modelBuilder.Configurations.Add(new VwStartTimeConfiguration(schema));
            modelBuilder.Configurations.Add(new VwStopConfiguration(schema));
            modelBuilder.Configurations.Add(new VwStopStatsIdConfiguration(schema));
            modelBuilder.Configurations.Add(new VwStopSummaryConfiguration(schema));
            modelBuilder.Configurations.Add(new VwTractorsOffConfiguration(schema));
            modelBuilder.Configurations.Add(new VwUnassignedOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new WorkAssignmentConfiguration(schema));
            modelBuilder.Configurations.Add(new XpObjectTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new Zip2ZipConfiguration(schema));
            modelBuilder.Configurations.Add(new Zip2ZipHistoryConfiguration(schema));
            return modelBuilder;
        }

        // Stored Procedures
        public int CreateProductivityResourcesForNewDay(System.DateTime? theDate)
        {
            var theDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@TheDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = theDate.GetValueOrDefault() };
            if (!theDate.HasValue)
                theDateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[CreateProductivityResourcesForNewDay] @TheDate", theDateParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int CreateProformaFromDispatchDay(string proformaName, System.DateTime? theDate, string proformaNotes)
        {
            var proformaNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ProformaName", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = proformaName, Size = 25 };
            if (proformaNameParam.Value == null)
                proformaNameParam.Value = System.DBNull.Value;

            var theDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@TheDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = theDate.GetValueOrDefault() };
            if (!theDate.HasValue)
                theDateParam.Value = System.DBNull.Value;

            var proformaNotesParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ProformaNotes", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = proformaNotes, Size = 200 };
            if (proformaNotesParam.Value == null)
                proformaNotesParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[CreateProformaFromDispatchDay] @ProformaName, @TheDate, @ProformaNotes", proformaNameParam, theDateParam, proformaNotesParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int CreateRunsAndRunStopsForNewDay(int? proformaId, System.DateTime? theDate, bool? includeProformaDrivers, bool? includeProformaTractors, bool? includeProformaTrailers, bool? includePlannedShippedDate, bool? includePickup)
        {
            var proformaIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ProformaID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = proformaId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!proformaId.HasValue)
                proformaIdParam.Value = System.DBNull.Value;

            var theDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@TheDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = theDate.GetValueOrDefault() };
            if (!theDate.HasValue)
                theDateParam.Value = System.DBNull.Value;

            var includeProformaDriversParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IncludeProformaDrivers", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = includeProformaDrivers.GetValueOrDefault() };
            if (!includeProformaDrivers.HasValue)
                includeProformaDriversParam.Value = System.DBNull.Value;

            var includeProformaTractorsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IncludeProformaTractors", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = includeProformaTractors.GetValueOrDefault() };
            if (!includeProformaTractors.HasValue)
                includeProformaTractorsParam.Value = System.DBNull.Value;

            var includeProformaTrailersParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IncludeProformaTrailers", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = includeProformaTrailers.GetValueOrDefault() };
            if (!includeProformaTrailers.HasValue)
                includeProformaTrailersParam.Value = System.DBNull.Value;

            var includePlannedShippedDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IncludePlannedShippedDate", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = includePlannedShippedDate.GetValueOrDefault() };
            if (!includePlannedShippedDate.HasValue)
                includePlannedShippedDateParam.Value = System.DBNull.Value;

            var includePickupParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IncludePickup", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = includePickup.GetValueOrDefault() };
            if (!includePickup.HasValue)
                includePickupParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[CreateRunsAndRunStopsForNewDay] @ProformaID, @TheDate, @IncludeProformaDrivers, @IncludeProformaTractors, @IncludeProformaTrailers, @IncludePlannedShippedDate, @IncludePickup", proformaIdParam, theDateParam, includeProformaDriversParam, includeProformaTractorsParam, includeProformaTrailersParam, includePlannedShippedDateParam, includePickupParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteDispatchDay(System.DateTime? theDate)
        {
            var theDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@TheDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = theDate.GetValueOrDefault() };
            if (!theDate.HasValue)
                theDateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteDispatchDay] @TheDate", theDateParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteEmptyRunStopsForDispatchDay(System.DateTime? theDate)
        {
            var theDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@TheDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = theDate.GetValueOrDefault() };
            if (!theDate.HasValue)
                theDateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteEmptyRunStopsForDispatchDay] @TheDate", theDateParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteProforma(int? proformaId)
        {
            var proformaIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@proformaId", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = proformaId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!proformaId.HasValue)
                proformaIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteProforma] @proformaId", proformaIdParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int GetNewOrdersForThisFlagId(int? flagId, out string strAddEditDeleteCounts)
        {
            var flagIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@FlagID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = flagId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!flagId.HasValue)
                flagIdParam.Value = System.DBNull.Value;

            var strAddEditDeleteCountsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@StrAddEditDeleteCounts", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Output, Size = 15 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[GetNewOrdersForThisFlagId] @FlagID, @StrAddEditDeleteCounts OUTPUT", flagIdParam, strAddEditDeleteCountsParam, procResultParam);
            if (IsSqlParameterNull(strAddEditDeleteCountsParam))
                strAddEditDeleteCounts = default(string);
            else
                strAddEditDeleteCounts = (string) strAddEditDeleteCountsParam.Value;

            return (int) procResultParam.Value;
        }

        public int GetPrimaryKeyFromLicense(string column)
        {
            var columnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Column", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = column, Size = 100 };
            if (columnParam.Value == null)
                columnParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[GetPrimaryKeyFromLicense] @Column", columnParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date)
        {
            int procResult;
            return PmBarcodes(date, out procResult);
        }

        public System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date, out int procResult)
        {
            var dateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Date", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = date.GetValueOrDefault() };
            if (!date.HasValue)
                dateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<PmBarcodesReturnModel>("EXEC @procResult = [dbo].[PMBarcodes] @Date", dateParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public async System.Threading.Tasks.Task<System.Collections.Generic.List<PmBarcodesReturnModel>> PmBarcodesAsync(System.DateTime? date)
        {
            var dateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Date", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = date.GetValueOrDefault() };
            if (!date.HasValue)
                dateParam.Value = System.DBNull.Value;

            var procResultData = await Database.SqlQuery<PmBarcodesReturnModel>("EXEC [dbo].[PMBarcodes] @Date", dateParam).ToListAsync();

            return procResultData;
        }

        public int ProcTest()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[procTest] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int PutOrderInRunStop(System.DateTime? currentDispatchDate, System.DateTime? orderPlannedShipDate, int? orderId, int? orderConsigneeId, bool? forceDate)
        {
            var currentDispatchDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@CurrentDispatchDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = currentDispatchDate.GetValueOrDefault() };
            if (!currentDispatchDate.HasValue)
                currentDispatchDateParam.Value = System.DBNull.Value;

            var orderPlannedShipDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@OrderPlannedShipDate", SqlDbType = System.Data.SqlDbType.Date, Direction = System.Data.ParameterDirection.Input, Value = orderPlannedShipDate.GetValueOrDefault() };
            if (!orderPlannedShipDate.HasValue)
                orderPlannedShipDateParam.Value = System.DBNull.Value;

            var orderIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@OrderId", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = orderId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!orderId.HasValue)
                orderIdParam.Value = System.DBNull.Value;

            var orderConsigneeIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@OrderConsigneeId", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = orderConsigneeId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!orderConsigneeId.HasValue)
                orderConsigneeIdParam.Value = System.DBNull.Value;

            var forceDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ForceDate", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = forceDate.GetValueOrDefault() };
            if (!forceDate.HasValue)
                forceDateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[PutOrderInRunStop] @CurrentDispatchDate, @OrderPlannedShipDate, @OrderId, @OrderConsigneeId, @ForceDate", currentDispatchDateParam, orderPlannedShipDateParam, orderIdParam, orderConsigneeIdParam, forceDateParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int SpSendCdosysmail(string from, string to, string subject, string body)
        {
            var fromParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@From", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = from, Size = 100 };
            if (fromParam.Value == null)
                fromParam.Value = System.DBNull.Value;

            var toParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@To", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = to, Size = 100 };
            if (toParam.Value == null)
                toParam.Value = System.DBNull.Value;

            var subjectParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Subject", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = subject, Size = 100 };
            if (subjectParam.Value == null)
                subjectParam.Value = System.DBNull.Value;

            var bodyParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Body", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = body, Size = 4000 };
            if (bodyParam.Value == null)
                bodyParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[sp_send_cdosysmail] @From, @To, @Subject, @Body", fromParam, toParam, subjectParam, bodyParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int StkNewFlag(int? mobileDeviceId)
        {
            var mobileDeviceIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@MobileDeviceID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mobileDeviceId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!mobileDeviceId.HasValue)
                mobileDeviceIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[stkNewFlag] @MobileDeviceID", mobileDeviceIdParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int StkNewInfoFlag(int? mobileDeviceId)
        {
            var mobileDeviceIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@MobileDeviceID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mobileDeviceId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!mobileDeviceId.HasValue)
                mobileDeviceIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[stkNewInfoFlag] @MobileDeviceID", mobileDeviceIdParam, procResultParam);

            return (int) procResultParam.Value;
        }

        public int UspMobileAppAddCompany(string name, out decimal? companyId)
        {
            var nameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Name", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name, Size = 30 };
            if (nameParam.Value == null)
                nameParam.Value = System.DBNull.Value;

            var companyIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@CompanyID", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_AddCompany] @Name, @CompanyID OUTPUT", nameParam, companyIdParam, procResultParam);
            if (IsSqlParameterNull(companyIdParam))
                companyId = null;
            else
                companyId = (decimal) companyIdParam.Value;

            return (int) procResultParam.Value;
        }

        public int UspMobileAppGetActualRunId(decimal? runNumberId, out decimal? runId)
        {
            var runNumberIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunNumberId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = runNumberId.GetValueOrDefault(), Precision = 18, Scale = 0 };
            if (!runNumberId.HasValue)
                runNumberIdParam.Value = System.DBNull.Value;

            var runIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunID", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetActualRunId] @RunNumberId, @RunID OUTPUT", runNumberIdParam, runIdParam, procResultParam);
            if (IsSqlParameterNull(runIdParam))
                runId = null;
            else
                runId = (decimal) runIdParam.Value;

            return (int) procResultParam.Value;
        }

        public int UspMobileAppGetActualRunStopId(decimal? stopNumberId, out decimal? runStopId)
        {
            var stopNumberIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@StopNumberId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = stopNumberId.GetValueOrDefault(), Precision = 18, Scale = 0 };
            if (!stopNumberId.HasValue)
                stopNumberIdParam.Value = System.DBNull.Value;

            var runStopIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunStopID", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetActualRunStopId] @StopNumberId, @RunStopID OUTPUT", stopNumberIdParam, runStopIdParam, procResultParam);
            if (IsSqlParameterNull(runStopIdParam))
                runStopId = null;
            else
                runStopId = (decimal) runStopIdParam.Value;

            return (int) procResultParam.Value;
        }

        public int UspMobileAppGetRunId(out decimal? runId)
        {
            var runIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetRunId] @RunId OUTPUT", runIdParam, procResultParam);
            if (IsSqlParameterNull(runIdParam))
                runId = null;
            else
                runId = (decimal) runIdParam.Value;

            return (int) procResultParam.Value;
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate)
        {
            int procResult;
            return UspMobileAppGetRunList(runDate, out procResult);
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate, out int procResult)
        {
            var runDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = runDate.GetValueOrDefault() };
            if (!runDate.HasValue)
                runDateParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<UspMobileAppGetRunListReturnModel>("EXEC @procResult = [dbo].[usp_MobileApp_GetRunList] @RunDate", runDateParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public async System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListReturnModel>> UspMobileAppGetRunListAsync(System.DateTime? runDate)
        {
            var runDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = runDate.GetValueOrDefault() };
            if (!runDate.HasValue)
                runDateParam.Value = System.DBNull.Value;

            var procResultData = await Database.SqlQuery<UspMobileAppGetRunListReturnModel>("EXEC [dbo].[usp_MobileApp_GetRunList] @RunDate", runDateParam).ToListAsync();

            return procResultData;
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId)
        {
            int procResult;
            return UspMobileAppGetRunListByEmployee(runDate, employeeId, out procResult);
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId, out int procResult)
        {
            var runDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = runDate.GetValueOrDefault() };
            if (!runDate.HasValue)
                runDateParam.Value = System.DBNull.Value;

            var employeeIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@EmployeeID", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = employeeId.GetValueOrDefault(), Precision = 18, Scale = 0 };
            if (!employeeId.HasValue)
                employeeIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<UspMobileAppGetRunListByEmployeeReturnModel>("EXEC @procResult = [dbo].[usp_MobileApp_GetRunListByEmployee] @RunDate, @EmployeeID", runDateParam, employeeIdParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public async System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel>> UspMobileAppGetRunListByEmployeeAsync(System.DateTime? runDate, decimal? employeeId)
        {
            var runDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = runDate.GetValueOrDefault() };
            if (!runDate.HasValue)
                runDateParam.Value = System.DBNull.Value;

            var employeeIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@EmployeeID", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = employeeId.GetValueOrDefault(), Precision = 18, Scale = 0 };
            if (!employeeId.HasValue)
                employeeIdParam.Value = System.DBNull.Value;

            var procResultData = await Database.SqlQuery<UspMobileAppGetRunListByEmployeeReturnModel>("EXEC [dbo].[usp_MobileApp_GetRunListByEmployee] @RunDate, @EmployeeID", runDateParam, employeeIdParam).ToListAsync();

            return procResultData;
        }

        public int UspMobileAppGetRunNumberId(out decimal? runNumberId)
        {
            var runNumberIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunNumberId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetRunNumberId] @RunNumberId OUTPUT", runNumberIdParam, procResultParam);
            if (IsSqlParameterNull(runNumberIdParam))
                runNumberId = null;
            else
                runNumberId = (decimal) runNumberIdParam.Value;

            return (int) procResultParam.Value;
        }

        public int UspMobileAppGetStopId(out decimal? runStopId)
        {
            var runStopIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunStopId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetStopId] @RunStopId OUTPUT", runStopIdParam, procResultParam);
            if (IsSqlParameterNull(runStopIdParam))
                runStopId = null;
            else
                runStopId = (decimal) runStopIdParam.Value;

            return (int) procResultParam.Value;
        }

        public int UspMobileAppGetStopNumberId(out decimal? runStopNumberId)
        {
            var runStopNumberIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@RunStopNumberId", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Output, Precision = 18, Scale = 0 };
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[usp_MobileApp_GetStopNumberId] @RunStopNumberId OUTPUT", runStopNumberIdParam, procResultParam);
            if (IsSqlParameterNull(runStopNumberIdParam))
                runStopNumberId = null;
            else
                runStopNumberId = (decimal) runStopNumberIdParam.Value;

            return (int) procResultParam.Value;
        }

    }
    #endregion

    #region Database context factory

    public class PL_DbContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<PL_DbContext>
    {
        public PL_DbContext Create()
        {
            return new PL_DbContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakePL_DbContext : IPL_DbContext
    {
        public System.Data.Entity.DbSet<AppLog> AppLogs { get; set; }
        public System.Data.Entity.DbSet<AppSetting> AppSettings { get; set; }
        public System.Data.Entity.DbSet<ArchiveOrder> ArchiveOrders { get; set; }
        public System.Data.Entity.DbSet<ArchiveOrderDetail> ArchiveOrderDetails { get; set; }
        public System.Data.Entity.DbSet<ArchiveRun> ArchiveRuns { get; set; }
        public System.Data.Entity.DbSet<ArchiveRunOrder> ArchiveRunOrders { get; set; }
        public System.Data.Entity.DbSet<ArchiveRunResource> ArchiveRunResources { get; set; }
        public System.Data.Entity.DbSet<ArchiveRunStop> ArchiveRunStops { get; set; }
        public System.Data.Entity.DbSet<ChkCheckItem> ChkCheckItems { get; set; }
        public System.Data.Entity.DbSet<ChkCheckItemLog> ChkCheckItemLogs { get; set; }
        public System.Data.Entity.DbSet<ChkPallet> ChkPallets { get; set; }
        public System.Data.Entity.DbSet<ChkPalletLog> ChkPalletLogs { get; set; }
        public System.Data.Entity.DbSet<ChkStop> ChkStops { get; set; }
        public System.Data.Entity.DbSet<ChkvwCheckSummary> ChkvwCheckSummaries { get; set; }
        public System.Data.Entity.DbSet<ChkvwException> ChkvwExceptions { get; set; }
        public System.Data.Entity.DbSet<ChkvwExceptionDetail> ChkvwExceptionDetails { get; set; }
        public System.Data.Entity.DbSet<ChkvwOrderDetail> ChkvwOrderDetails { get; set; }
        public System.Data.Entity.DbSet<ChkvwPalletCount> ChkvwPalletCounts { get; set; }
        public System.Data.Entity.DbSet<ChkvwReconcile> ChkvwReconciles { get; set; }
        public System.Data.Entity.DbSet<ChkvwStopsNotClosed> ChkvwStopsNotCloseds { get; set; }
        public System.Data.Entity.DbSet<ClientBarcodeType> ClientBarcodeTypes { get; set; }
        public System.Data.Entity.DbSet<ClientBarcodeTypeSpec> ClientBarcodeTypeSpecs { get; set; }
        public System.Data.Entity.DbSet<Company> Companies { get; set; }
        public System.Data.Entity.DbSet<CompanyCarrier> CompanyCarriers { get; set; }
        public System.Data.Entity.DbSet<CompanyContactInfo> CompanyContactInfoes { get; set; }
        public System.Data.Entity.DbSet<CompanyLocation> CompanyLocations { get; set; }
        public System.Data.Entity.DbSet<CompanyLocationAppointment> CompanyLocationAppointments { get; set; }
        public System.Data.Entity.DbSet<CompanyLocationGp> CompanyLocationGps { get; set; }
        public System.Data.Entity.DbSet<CompanyMfCode> CompanyMfCodes { get; set; }
        public System.Data.Entity.DbSet<CompanyOpenWindow> CompanyOpenWindows { get; set; }
        public System.Data.Entity.DbSet<CompanyShipper> CompanyShippers { get; set; }
        public System.Data.Entity.DbSet<CompanyStandard> CompanyStandards { get; set; }
        public System.Data.Entity.DbSet<CompletedWork> CompletedWorks { get; set; }
        public System.Data.Entity.DbSet<Condition> Conditions { get; set; }
        public System.Data.Entity.DbSet<ContactType> ContactTypes { get; set; }
        public System.Data.Entity.DbSet<DeletedOrder> DeletedOrders { get; set; }
        public System.Data.Entity.DbSet<Department> Departments { get; set; }
        public System.Data.Entity.DbSet<Dtproperty> Dtproperties { get; set; }
        public System.Data.Entity.DbSet<Edi214> Edi214 { get; set; }
        public System.Data.Entity.DbSet<EdiFa> EdiFas { get; set; }
        public System.Data.Entity.DbSet<EdiGroup> EdiGroups { get; set; }
        public System.Data.Entity.DbSet<EdiTransaction> EdiTransactions { get; set; }
        public System.Data.Entity.DbSet<Employee> Employees { get; set; }
        public System.Data.Entity.DbSet<EmployeeCalendar> EmployeeCalendars { get; set; }
        public System.Data.Entity.DbSet<EmployeeDepartment> EmployeeDepartments { get; set; }
        public System.Data.Entity.DbSet<EmployeeInActiveReasonList> EmployeeInActiveReasonLists { get; set; }
        public System.Data.Entity.DbSet<EmployeeProductivity> EmployeeProductivities { get; set; }
        public System.Data.Entity.DbSet<EmployeeTime> EmployeeTimes { get; set; }
        public System.Data.Entity.DbSet<EquipmentChecklistResponse> EquipmentChecklistResponses { get; set; }
        public System.Data.Entity.DbSet<EquipmentClassHeader> EquipmentClassHeaders { get; set; }
        public System.Data.Entity.DbSet<EquipmentDetail> EquipmentDetails { get; set; }
        public System.Data.Entity.DbSet<ExceptionLog> ExceptionLogs { get; set; }
        public System.Data.Entity.DbSet<Flag> Flags { get; set; }
        public System.Data.Entity.DbSet<GpsLocation> GpsLocations { get; set; }
        public System.Data.Entity.DbSet<IdList> IdLists { get; set; }
        public System.Data.Entity.DbSet<ImportedWarehouseWeight> ImportedWarehouseWeights { get; set; }
        public System.Data.Entity.DbSet<InboundCondition> InboundConditions { get; set; }
        public System.Data.Entity.DbSet<InboundException> InboundExceptions { get; set; }
        public System.Data.Entity.DbSet<InboundExceptionBeta> InboundExceptionBetas { get; set; }
        public System.Data.Entity.DbSet<InboundExceptionCondition> InboundExceptionConditions { get; set; }
        public System.Data.Entity.DbSet<InboundExceptionConditionBeta> InboundExceptionConditionBetas { get; set; }
        public System.Data.Entity.DbSet<InboundLocation> InboundLocations { get; set; }
        public System.Data.Entity.DbSet<InboundLog> InboundLogs { get; set; }
        public System.Data.Entity.DbSet<InboundPallet> InboundPallets { get; set; }
        public System.Data.Entity.DbSet<InboundPalletBeta> InboundPalletBetas { get; set; }
        public System.Data.Entity.DbSet<InboundPalletDetailBeta> InboundPalletDetailBetas { get; set; }
        public System.Data.Entity.DbSet<InboundSealDisposition> InboundSealDispositions { get; set; }
        public System.Data.Entity.DbSet<InboundTrailer> InboundTrailers { get; set; }
        public System.Data.Entity.DbSet<InboundTrailerBeta> InboundTrailerBetas { get; set; }
        public System.Data.Entity.DbSet<Item> Items { get; set; }
        public System.Data.Entity.DbSet<JobType> JobTypes { get; set; }
        public System.Data.Entity.DbSet<LFolino_VwAllRun> LFolino_VwAllRuns { get; set; }
        public System.Data.Entity.DbSet<LFolino_VwAllStop> LFolino_VwAllStops { get; set; }
        public System.Data.Entity.DbSet<LFolino_VwProductivity> LFolino_VwProductivities { get; set; }
        public System.Data.Entity.DbSet<License> Licenses { get; set; }
        public System.Data.Entity.DbSet<LocationImage> LocationImages { get; set; }
        public System.Data.Entity.DbSet<LocationImageRelationship> LocationImageRelationships { get; set; }
        public System.Data.Entity.DbSet<LoggedInfo> LoggedInfoes { get; set; }
        public System.Data.Entity.DbSet<MobileAppConfig> MobileAppConfigs { get; set; }
        public System.Data.Entity.DbSet<MobileAppEmployeeRequestsOthersRun> MobileAppEmployeeRequestsOthersRuns { get; set; }
        public System.Data.Entity.DbSet<MobileAppException> MobileAppExceptions { get; set; }
        public System.Data.Entity.DbSet<MobileAppProformaDateReleased> MobileAppProformaDateReleaseds { get; set; }
        public System.Data.Entity.DbSet<MobileUser> MobileUsers { get; set; }
        public System.Data.Entity.DbSet<ModuleInfo> ModuleInfoes { get; set; }
        public System.Data.Entity.DbSet<NewOrder> NewOrders { get; set; }
        public System.Data.Entity.DbSet<NewOrderDetail> NewOrderDetails { get; set; }
        public System.Data.Entity.DbSet<NonDispatchedStop> NonDispatchedStops { get; set; }
        public System.Data.Entity.DbSet<NonDispatchedStopType> NonDispatchedStopTypes { get; set; }
        public System.Data.Entity.DbSet<Order> Orders { get; set; }
        public System.Data.Entity.DbSet<OrderAction> OrderActions { get; set; }
        public System.Data.Entity.DbSet<OrderActivity> OrderActivities { get; set; }
        public System.Data.Entity.DbSet<OrderAssignment> OrderAssignments { get; set; }
        public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; }
        public System.Data.Entity.DbSet<OrderError> OrderErrors { get; set; }
        public System.Data.Entity.DbSet<OrderItem> OrderItems { get; set; }
        public System.Data.Entity.DbSet<OrderJobCode> OrderJobCodes { get; set; }
        public System.Data.Entity.DbSet<OrderJobCodeMapping> OrderJobCodeMappings { get; set; }
        public System.Data.Entity.DbSet<OrderPick> OrderPicks { get; set; }
        public System.Data.Entity.DbSet<PalletTag> PalletTags { get; set; }
        public System.Data.Entity.DbSet<Proforma> Proformas { get; set; }
        public System.Data.Entity.DbSet<ProformaRunMaster> ProformaRunMasters { get; set; }
        public System.Data.Entity.DbSet<ProformaRunResource> ProformaRunResources { get; set; }
        public System.Data.Entity.DbSet<ProformaRunStop> ProformaRunStops { get; set; }
        public System.Data.Entity.DbSet<Report> Reports { get; set; }
        public System.Data.Entity.DbSet<ReportJob> ReportJobs { get; set; }
        public System.Data.Entity.DbSet<ResultsOld> ResultsOlds { get; set; }
        public System.Data.Entity.DbSet<Run> Runs { get; set; }
        public System.Data.Entity.DbSet<RunAssignment> RunAssignments { get; set; }
        public System.Data.Entity.DbSet<RunDetail> RunDetails { get; set; }
        public System.Data.Entity.DbSet<RunOrder> RunOrders { get; set; }
        public System.Data.Entity.DbSet<RunResource> RunResources { get; set; }
        public System.Data.Entity.DbSet<RunStop> RunStops { get; set; }
        public System.Data.Entity.DbSet<RunStopDetail> RunStopDetails { get; set; }
        public System.Data.Entity.DbSet<RunStopDetailPhoto> RunStopDetailPhotoes { get; set; }
        public System.Data.Entity.DbSet<RunSub> RunSubs { get; set; }
        public System.Data.Entity.DbSet<ScannedPalletConfirm> ScannedPalletConfirms { get; set; }
        public System.Data.Entity.DbSet<ScannedPalletLoad> ScannedPalletLoads { get; set; }
        public System.Data.Entity.DbSet<Server> Servers { get; set; }
        public System.Data.Entity.DbSet<ServiceLevel> ServiceLevels { get; set; }
        public System.Data.Entity.DbSet<StatusCode> StatusCodes { get; set; }
        public System.Data.Entity.DbSet<StkBarcode> StkBarcodes { get; set; }
        public System.Data.Entity.DbSet<StkBarcodeArchive> StkBarcodeArchives { get; set; }
        public System.Data.Entity.DbSet<StkCodeDate> StkCodeDates { get; set; }
        public System.Data.Entity.DbSet<StkCust> StkCusts { get; set; }
        public System.Data.Entity.DbSet<StkFlag> StkFlags { get; set; }
        public System.Data.Entity.DbSet<StkInfo> StkInfoes { get; set; }
        public System.Data.Entity.DbSet<StkInfoFlag> StkInfoFlags { get; set; }
        public System.Data.Entity.DbSet<StkLocation> StkLocations { get; set; }
        public System.Data.Entity.DbSet<StkMobileDevice> StkMobileDevices { get; set; }
        public System.Data.Entity.DbSet<StkSqlCeIdentityRange> StkSqlCeIdentityRanges { get; set; }
        public System.Data.Entity.DbSet<StkSqlCeIdentityRangeTable> StkSqlCeIdentityRangeTables { get; set; }
        public System.Data.Entity.DbSet<StkStock> StkStocks { get; set; }
        public System.Data.Entity.DbSet<StkUser> StkUsers { get; set; }
        public System.Data.Entity.DbSet<StkvwLocation> StkvwLocations { get; set; }
        public System.Data.Entity.DbSet<StkvwStockCheck> StkvwStockChecks { get; set; }
        public System.Data.Entity.DbSet<StkvwStockDate> StkvwStockDates { get; set; }
        public System.Data.Entity.DbSet<StkvwStockLd> StkvwStockLds { get; set; }
        public System.Data.Entity.DbSet<StkvwStockLdAll> StkvwStockLdAlls { get; set; }
        public System.Data.Entity.DbSet<StkvwStockLdOrig> StkvwStockLdOrigs { get; set; }
        public System.Data.Entity.DbSet<StkvwTiHi> StkvwTiHis { get; set; }
        public System.Data.Entity.DbSet<StopAssignment> StopAssignments { get; set; }
        public System.Data.Entity.DbSet<StopPallet> StopPallets { get; set; }
        public System.Data.Entity.DbSet<SurName> SurNames { get; set; }
        public System.Data.Entity.DbSet<Tractor> Tractors { get; set; }
        public System.Data.Entity.DbSet<TractorCalendar> TractorCalendars { get; set; }
        public System.Data.Entity.DbSet<TractorInActiveReasonList> TractorInActiveReasonLists { get; set; }
        public System.Data.Entity.DbSet<TractorProductivity> TractorProductivities { get; set; }
        public System.Data.Entity.DbSet<Trailer> Trailers { get; set; }
        public System.Data.Entity.DbSet<TrailerCalendar> TrailerCalendars { get; set; }
        public System.Data.Entity.DbSet<TrailerInactiveReasonList> TrailerInactiveReasonLists { get; set; }
        public System.Data.Entity.DbSet<TrailerProductivity> TrailerProductivities { get; set; }
        public System.Data.Entity.DbSet<VwAllOrder> VwAllOrders { get; set; }
        public System.Data.Entity.DbSet<VwCompanyLocation> VwCompanyLocations { get; set; }
        public System.Data.Entity.DbSet<VwConsigneeFax> VwConsigneeFaxes { get; set; }
        public System.Data.Entity.DbSet<VwContact> VwContacts { get; set; }
        public System.Data.Entity.DbSet<VwContactsLegacy> VwContactsLegacies { get; set; }
        public System.Data.Entity.DbSet<VwDispatch> VwDispatches { get; set; }
        public System.Data.Entity.DbSet<VwDispatchApp> VwDispatchApps { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAppAll> VwDispatchAppAlls { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAppArchive> VwDispatchAppArchives { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAppRun> VwDispatchAppRuns { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAppRunStop> VwDispatchAppRunStops { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAppUnplanned> VwDispatchAppUnplanneds { get; set; }
        public System.Data.Entity.DbSet<VwDispatchArchive> VwDispatchArchives { get; set; }
        public System.Data.Entity.DbSet<VwDispatchAudit> VwDispatchAudits { get; set; }
        public System.Data.Entity.DbSet<VwDispatchDetailOpen> VwDispatchDetailOpens { get; set; }
        public System.Data.Entity.DbSet<VwDispatchOpen> VwDispatchOpens { get; set; }
        public System.Data.Entity.DbSet<VwDispatchOpenOld> VwDispatchOpenOlds { get; set; }
        public System.Data.Entity.DbSet<VwDispatchSheet2> VwDispatchSheet2 { get; set; }
        public System.Data.Entity.DbSet<VwDispatchSheetOrig> VwDispatchSheetOrigs { get; set; }
        public System.Data.Entity.DbSet<VwDriversOff> VwDriversOffs { get; set; }
        public System.Data.Entity.DbSet<VwInboundDamage> VwInboundDamages { get; set; }
        public System.Data.Entity.DbSet<VwItemsPalletsConsignee> VwItemsPalletsConsignees { get; set; }
        public System.Data.Entity.DbSet<VwOrder> VwOrders { get; set; }
        public System.Data.Entity.DbSet<VwOrderLogin> VwOrderLogins { get; set; }
        public System.Data.Entity.DbSet<VwOrderPalletCount> VwOrderPalletCounts { get; set; }
        public System.Data.Entity.DbSet<VwOrderPickListOpen> VwOrderPickListOpens { get; set; }
        public System.Data.Entity.DbSet<VwOrphanedOrder> VwOrphanedOrders { get; set; }
        public System.Data.Entity.DbSet<VwPalletLoaderDispatchOpen> VwPalletLoaderDispatchOpens { get; set; }
        public System.Data.Entity.DbSet<VwPalletsByItemConsignee> VwPalletsByItemConsignees { get; set; }
        public System.Data.Entity.DbSet<VwSmartDriveSchedule> VwSmartDriveSchedules { get; set; }
        public System.Data.Entity.DbSet<VwSmartDriveScheduleArchive> VwSmartDriveScheduleArchives { get; set; }
        public System.Data.Entity.DbSet<VwStartTime> VwStartTimes { get; set; }
        public System.Data.Entity.DbSet<VwStop> VwStops { get; set; }
        public System.Data.Entity.DbSet<VwStopStatsId> VwStopStatsIds { get; set; }
        public System.Data.Entity.DbSet<VwStopSummary> VwStopSummaries { get; set; }
        public System.Data.Entity.DbSet<VwTractorsOff> VwTractorsOffs { get; set; }
        public System.Data.Entity.DbSet<VwUnassignedOrder> VwUnassignedOrders { get; set; }
        public System.Data.Entity.DbSet<WorkAssignment> WorkAssignments { get; set; }
        public System.Data.Entity.DbSet<XpObjectType> XpObjectTypes { get; set; }
        public System.Data.Entity.DbSet<Zip2Zip> Zip2Zip { get; set; }
        public System.Data.Entity.DbSet<Zip2ZipHistory> Zip2ZipHistory { get; set; }

        public FakePL_DbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            AppLogs = new FakeDbSet<AppLog>("AppLogId");
            AppSettings = new FakeDbSet<AppSetting>("SettingId");
            ArchiveOrders = new FakeDbSet<ArchiveOrder>("OrderId", "ShipperId", "TotalOrderWeight", "TotalOrderCube", "TotalOrderPieces", "TotalOrderPallets");
            ArchiveOrderDetails = new FakeDbSet<ArchiveOrderDetail>("ArchiveOrderDetail_", "OrderId");
            ArchiveRuns = new FakeDbSet<ArchiveRun>("RunId", "RunName", "RunSequence");
            ArchiveRunOrders = new FakeDbSet<ArchiveRunOrder>("RunOrderId", "RunStopId");
            ArchiveRunResources = new FakeDbSet<ArchiveRunResource>("RunResourceId", "RunId");
            ArchiveRunStops = new FakeDbSet<ArchiveRunStop>("RunStopId", "RunId", "StopSequence");
            ChkCheckItems = new FakeDbSet<ChkCheckItem>("CheckItemId");
            ChkCheckItemLogs = new FakeDbSet<ChkCheckItemLog>("CheckItemId", "Action", "ActionDate", "ActionUser", "NewStopNumberId");
            ChkPallets = new FakeDbSet<ChkPallet>("PalletId");
            ChkPalletLogs = new FakeDbSet<ChkPalletLog>("PalletId", "Action", "ActionDate", "ActionUser");
            ChkStops = new FakeDbSet<ChkStop>("StopId");
            ChkvwCheckSummaries = new FakeDbSet<ChkvwCheckSummary>("Promo");
            ChkvwExceptions = new FakeDbSet<ChkvwException>("RunName", "Name", "StopSequence");
            ChkvwExceptionDetails = new FakeDbSet<ChkvwExceptionDetail>("RunName", "Name", "StopSequence");
            ChkvwOrderDetails = new FakeDbSet<ChkvwOrderDetail>("Promo");
            ChkvwPalletCounts = new FakeDbSet<ChkvwPalletCount>("OrderItemId", "NumCases", "EntryDateTime", "OrderId", "OrderPickId", "PalletId");
            ChkvwReconciles = new FakeDbSet<ChkvwReconcile>("Promo");
            ChkvwStopsNotCloseds = new FakeDbSet<ChkvwStopsNotClosed>("Name", "StopSequence", "RunName");
            ClientBarcodeTypes = new FakeDbSet<ClientBarcodeType>("ClientBarcodeTypeId");
            ClientBarcodeTypeSpecs = new FakeDbSet<ClientBarcodeTypeSpec>("ClientBarcodeTypeSpecId");
            Companies = new FakeDbSet<Company>("CompanyId");
            CompanyCarriers = new FakeDbSet<CompanyCarrier>("CompanyCarrierId");
            CompanyContactInfoes = new FakeDbSet<CompanyContactInfo>("CompanyContactInfoId");
            CompanyLocations = new FakeDbSet<CompanyLocation>("CompanyLocationId");
            CompanyLocationAppointments = new FakeDbSet<CompanyLocationAppointment>("CompanyLocationAppointmentId");
            CompanyLocationGps = new FakeDbSet<CompanyLocationGp>("CompanyLocationId");
            CompanyMfCodes = new FakeDbSet<CompanyMfCode>("CompanyMfCodeId");
            CompanyOpenWindows = new FakeDbSet<CompanyOpenWindow>("CompanyOpenWindowId");
            CompanyShippers = new FakeDbSet<CompanyShipper>("CompanyShipperId");
            CompanyStandards = new FakeDbSet<CompanyStandard>("CompanyStandardId");
            CompletedWorks = new FakeDbSet<CompletedWork>("EmployeeId", "WorkDate", "JobId");
            Conditions = new FakeDbSet<Condition>("ConditionId");
            ContactTypes = new FakeDbSet<ContactType>("ContactTypeId");
            DeletedOrders = new FakeDbSet<DeletedOrder>("DeletedOrdersId");
            Departments = new FakeDbSet<Department>("DepartmentId");
            Dtproperties = new FakeDbSet<Dtproperty>("Id", "Property");
            Edi214 = new FakeDbSet<Edi214>("C214Id");
            EdiFas = new FakeDbSet<EdiFa>("FaId");
            EdiGroups = new FakeDbSet<EdiGroup>("GroupId");
            EdiTransactions = new FakeDbSet<EdiTransaction>("TransactionId");
            Employees = new FakeDbSet<Employee>("EmployeeId");
            EmployeeCalendars = new FakeDbSet<EmployeeCalendar>("EmployeeCalendarId");
            EmployeeDepartments = new FakeDbSet<EmployeeDepartment>("EmployeeDepartmentId");
            EmployeeInActiveReasonLists = new FakeDbSet<EmployeeInActiveReasonList>("EmployeeInactiveReasonListId");
            EmployeeProductivities = new FakeDbSet<EmployeeProductivity>("EmployeeProductivityId");
            EmployeeTimes = new FakeDbSet<EmployeeTime>("TimeId");
            EquipmentChecklistResponses = new FakeDbSet<EquipmentChecklistResponse>("EquipmentChecklistResponseId");
            EquipmentClassHeaders = new FakeDbSet<EquipmentClassHeader>("EquipmentClassHeaderId");
            EquipmentDetails = new FakeDbSet<EquipmentDetail>("EquipmentDetailId");
            ExceptionLogs = new FakeDbSet<ExceptionLog>("ExceptionLogId");
            Flags = new FakeDbSet<Flag>("FlagId");
            GpsLocations = new FakeDbSet<GpsLocation>("GpsLocationId");
            IdLists = new FakeDbSet<IdList>("Id");
            ImportedWarehouseWeights = new FakeDbSet<ImportedWarehouseWeight>("Id");
            InboundConditions = new FakeDbSet<InboundCondition>("ConditionId");
            InboundExceptions = new FakeDbSet<InboundException>("PalletId");
            InboundExceptionBetas = new FakeDbSet<InboundExceptionBeta>("PalletDetailId");
            InboundExceptionConditions = new FakeDbSet<InboundExceptionCondition>("ExceptionId", "ConditionId");
            InboundExceptionConditionBetas = new FakeDbSet<InboundExceptionConditionBeta>("ExceptionId", "ConditionId");
            InboundLocations = new FakeDbSet<InboundLocation>("LocationId");
            InboundLogs = new FakeDbSet<InboundLog>("InboundLogId");
            InboundPallets = new FakeDbSet<InboundPallet>("TrailerId", "PalletSeqNum");
            InboundPalletBetas = new FakeDbSet<InboundPalletBeta>("TrailerId", "PalletSeqNum");
            InboundPalletDetailBetas = new FakeDbSet<InboundPalletDetailBeta>("PalletId", "ItemSeqNum");
            InboundSealDispositions = new FakeDbSet<InboundSealDisposition>("SealDispositionId");
            InboundTrailers = new FakeDbSet<InboundTrailer>("UrNumber");
            InboundTrailerBetas = new FakeDbSet<InboundTrailerBeta>("UrNumber");
            Items = new FakeDbSet<Item>("ItemId");
            JobTypes = new FakeDbSet<JobType>("JobId");
            LFolino_VwAllRuns = new FakeDbSet<LFolino_VwAllRun>("RunId", "RunName", "RunSequence");
            LFolino_VwAllStops = new FakeDbSet<LFolino_VwAllStop>("RunStopId", "RunId", "StopSequence");
            LFolino_VwProductivities = new FakeDbSet<LFolino_VwProductivity>("FirstName", "LastName");
            Licenses = new FakeDbSet<License>("LicenseId");
            LocationImages = new FakeDbSet<LocationImage>("ImageId");
            LocationImageRelationships = new FakeDbSet<LocationImageRelationship>("ImageRelationId");
            LoggedInfoes = new FakeDbSet<LoggedInfo>("LoggedInfoId");
            MobileAppConfigs = new FakeDbSet<MobileAppConfig>("ConfigurationDataId");
            MobileAppEmployeeRequestsOthersRuns = new FakeDbSet<MobileAppEmployeeRequestsOthersRun>("EmployeeRequestsOthersRunId");
            MobileAppExceptions = new FakeDbSet<MobileAppException>("MobileAppExceptionId");
            MobileAppProformaDateReleaseds = new FakeDbSet<MobileAppProformaDateReleased>("ProformaDateId");
            MobileUsers = new FakeDbSet<MobileUser>("MobileUserId");
            ModuleInfoes = new FakeDbSet<ModuleInfo>("Id");
            NewOrders = new FakeDbSet<NewOrder>("NewOrdersId");
            NewOrderDetails = new FakeDbSet<NewOrderDetail>("OrderNumber", "FlagId");
            NonDispatchedStops = new FakeDbSet<NonDispatchedStop>("NonDispatchedStopId");
            NonDispatchedStopTypes = new FakeDbSet<NonDispatchedStopType>("TypeId");
            Orders = new FakeDbSet<Order>("OrderId");
            OrderActions = new FakeDbSet<OrderAction>("OrderActionId");
            OrderActivities = new FakeDbSet<OrderActivity>("OrderActivityId");
            OrderAssignments = new FakeDbSet<OrderAssignment>("OrderId", "EmployeeId", "WorkType");
            OrderDetails = new FakeDbSet<OrderDetail>("OrderDetailId");
            OrderErrors = new FakeDbSet<OrderError>("OrderErrorId");
            OrderItems = new FakeDbSet<OrderItem>("OrderItemId");
            OrderJobCodes = new FakeDbSet<OrderJobCode>("OrderId", "WorkType");
            OrderJobCodeMappings = new FakeDbSet<OrderJobCodeMapping>("OrderJobCodeMappingId");
            OrderPicks = new FakeDbSet<OrderPick>("OrderPickId");
            PalletTags = new FakeDbSet<PalletTag>("PalletTagId");
            Proformas = new FakeDbSet<Proforma>("ProformaId");
            ProformaRunMasters = new FakeDbSet<ProformaRunMaster>("ProformaRunMasterId");
            ProformaRunResources = new FakeDbSet<ProformaRunResource>("ProformaRunResourceId");
            ProformaRunStops = new FakeDbSet<ProformaRunStop>("ProformaRunStopsId");
            Reports = new FakeDbSet<Report>("ReportId");
            ReportJobs = new FakeDbSet<ReportJob>("ReportJobId");
            ResultsOlds = new FakeDbSet<ResultsOld>("Runname", "CompanyLocationId", "StopSequence");
            Runs = new FakeDbSet<Run>("RunId");
            RunAssignments = new FakeDbSet<RunAssignment>("RunNumberId", "EmployeeId", "WorkType");
            RunDetails = new FakeDbSet<RunDetail>("RunNumberId");
            RunOrders = new FakeDbSet<RunOrder>("RunOrderId");
            RunResources = new FakeDbSet<RunResource>("RunResourceId");
            RunStops = new FakeDbSet<RunStop>("RunStopId");
            RunStopDetails = new FakeDbSet<RunStopDetail>("StopNumberId");
            RunStopDetailPhotoes = new FakeDbSet<RunStopDetailPhoto>("RunStopPhotoId");
            RunSubs = new FakeDbSet<RunSub>("RunSubId");
            ScannedPalletConfirms = new FakeDbSet<ScannedPalletConfirm>("ScannedPalletLoadConfirmId");
            ScannedPalletLoads = new FakeDbSet<ScannedPalletLoad>("ScannedPalletLoadId");
            Servers = new FakeDbSet<Server>("UserId");
            ServiceLevels = new FakeDbSet<ServiceLevel>("ServiceLevelId", "ServiceLevel_");
            StatusCodes = new FakeDbSet<StatusCode>("StatusCodeId");
            StkBarcodes = new FakeDbSet<StkBarcode>("BarcodeId");
            StkBarcodeArchives = new FakeDbSet<StkBarcodeArchive>("BarcodeId", "Count");
            StkCodeDates = new FakeDbSet<StkCodeDate>("CodeDateId");
            StkCusts = new FakeDbSet<StkCust>("CustId");
            StkFlags = new FakeDbSet<StkFlag>("FlagId");
            StkInfoes = new FakeDbSet<StkInfo>("InfoId");
            StkInfoFlags = new FakeDbSet<StkInfoFlag>("FlagId");
            StkLocations = new FakeDbSet<StkLocation>("LocationId");
            StkMobileDevices = new FakeDbSet<StkMobileDevice>("MobileDeviceId");
            StkSqlCeIdentityRanges = new FakeDbSet<StkSqlCeIdentityRange>("SqlCeIdentityRangeId");
            StkSqlCeIdentityRangeTables = new FakeDbSet<StkSqlCeIdentityRangeTable>("SqlCeIdentityRangeTableId");
            StkStocks = new FakeDbSet<StkStock>("StockId");
            StkUsers = new FakeDbSet<StkUser>("UserId", "Initials");
            StkvwLocations = new FakeDbSet<StkvwLocation>("Tie", "High", "ItemLenId", "ItemPackId", "InfoId");
            StkvwStockChecks = new FakeDbSet<StkvwStockCheck>("FlagId");
            StkvwStockDates = new FakeDbSet<StkvwStockDate>("StockId");
            StkvwStockLds = new FakeDbSet<StkvwStockLd>("Scancode", "Date1", "Date1Act", "Date2", "Date2Act", "Date3", "Date3Act", "Date4", "Date4Act", "BitDamaged", "BitHold", "BitWet");
            StkvwStockLdAlls = new FakeDbSet<StkvwStockLdAll>("Scancode", "Date1", "Date1Act", "Date2", "Date2Act", "Date3", "Date3Act", "Date4", "Date4Act", "BitDamaged", "BitHold", "BitWet");
            StkvwStockLdOrigs = new FakeDbSet<StkvwStockLdOrig>("Scancode", "Date1", "Date1Act", "Date2", "Date2Act", "Date3", "Date3Act", "Date4", "Date4Act", "BitDamaged", "BitHold", "BitWet");
            StkvwTiHis = new FakeDbSet<StkvwTiHi>("Tie", "High", "InfoId");
            StopAssignments = new FakeDbSet<StopAssignment>("StopNumberId", "EmployeeId", "WorkType");
            StopPallets = new FakeDbSet<StopPallet>("StopPalletId", "StopNumberId");
            SurNames = new FakeDbSet<SurName>("SurNameId");
            Tractors = new FakeDbSet<Tractor>("TractorId");
            TractorCalendars = new FakeDbSet<TractorCalendar>("TractorCalendarId");
            TractorInActiveReasonLists = new FakeDbSet<TractorInActiveReasonList>("TractorInactiveReasonListId");
            TractorProductivities = new FakeDbSet<TractorProductivity>("TractorProductivityId");
            Trailers = new FakeDbSet<Trailer>("TrailerId");
            TrailerCalendars = new FakeDbSet<TrailerCalendar>("TrailerCalendarId");
            TrailerInactiveReasonLists = new FakeDbSet<TrailerInactiveReasonList>("TrailerInactiveReasonListId");
            TrailerProductivities = new FakeDbSet<TrailerProductivity>("TrailerProductivityId");
            VwAllOrders = new FakeDbSet<VwAllOrder>("TotalOrderPieces", "TotalOrderWeight", "ShipperId", "Source");
            VwCompanyLocations = new FakeDbSet<VwCompanyLocation>("Name", "WmsCode", "Type", "Type1", "CompanyLocationId");
            VwConsigneeFaxes = new FakeDbSet<VwConsigneeFax>("CompanyLocationId", "Name", "ShipperId", "TotalOrderWeight", "TotalOrderPieces", "ContactBlnk", "Shipper");
            VwContacts = new FakeDbSet<VwContact>("WmsCode", "Name", "CompanyId");
            VwContactsLegacies = new FakeDbSet<VwContactsLegacy>("Name", "CompanyId");
            VwDispatches = new FakeDbSet<VwDispatch>("ShipperType", "DayStatus", "LineItems");
            VwDispatchApps = new FakeDbSet<VwDispatchApp>("RunName", "RunSequence");
            VwDispatchAppAlls = new FakeDbSet<VwDispatchAppAll>("RunSequence");
            VwDispatchAppArchives = new FakeDbSet<VwDispatchAppArchive>("RunName", "RunSequence");
            VwDispatchAppRuns = new FakeDbSet<VwDispatchAppRun>("RunId", "RunSequence", "RunName");
            VwDispatchAppRunStops = new FakeDbSet<VwDispatchAppRunStop>("RunStopId", "RunId", "StopSequence");
            VwDispatchAppUnplanneds = new FakeDbSet<VwDispatchAppUnplanned>("City", "State", "Longitude", "Latitude", "LocationDescription", "PostalCode", "CallInStop", "CallInDepart", "Comments");
            VwDispatchArchives = new FakeDbSet<VwDispatchArchive>("ShipperType", "DayStatus", "LineItems");
            VwDispatchAudits = new FakeDbSet<VwDispatchAudit>("RunName", "Consignee", "TotalOrderPieces", "TotalOrderWeight", "ConsCode", "RunId", "RunSequence", "StopSequence");
            VwDispatchDetailOpens = new FakeDbSet<VwDispatchDetailOpen>("ShipperType", "DayStatus");
            VwDispatchOpens = new FakeDbSet<VwDispatchOpen>("ShipperType", "DayStatus", "LineItems");
            VwDispatchOpenOlds = new FakeDbSet<VwDispatchOpenOld>("RunName", "RunId", "RunSequence", "ShipperType", "DayStatus");
            VwDispatchSheet2 = new FakeDbSet<VwDispatchSheet2>("RunId", "RunName", "RunSequence");
            VwDispatchSheetOrigs = new FakeDbSet<VwDispatchSheetOrig>("RunId", "RunName", "RunSequence");
            VwDriversOffs = new FakeDbSet<VwDriversOff>("LastName", "FirstName", "InActiveReason");
            VwInboundDamages = new FakeDbSet<VwInboundDamage>("UnloadDate", "UrNumber", "ItemCode", "ConditionDescription", "VerticalLocation", "HorizontalLocation");
            VwItemsPalletsConsignees = new FakeDbSet<VwItemsPalletsConsignee>("WmsCode", "RunId", "RunName", "PalletId");
            VwOrders = new FakeDbSet<VwOrder>("TotalOrderWeight", "TotalOrderPieces", "OrderId");
            VwOrderLogins = new FakeDbSet<VwOrderLogin>("OrderActivityId", "OrderPickId", "ActivityDateTime", "OrderActionId", "Description");
            VwOrderPalletCounts = new FakeDbSet<VwOrderPalletCount>("OrderActivityId", "OrderPickId", "ActivityDateTime", "OrderActionId", "Description");
            VwOrderPickListOpens = new FakeDbSet<VwOrderPickListOpen>("OrderActivityId", "OrderPickId", "ActivityDateTime", "OrderActionId", "Description");
            VwOrphanedOrders = new FakeDbSet<VwOrphanedOrder>("TotalOrderWeight", "TotalOrderPieces");
            VwPalletLoaderDispatchOpens = new FakeDbSet<VwPalletLoaderDispatchOpen>("RunStopId", "RunNo", "RunName", "TractorName", "TrailerName", "TrailerId", "Consignee", "City", "State", "PostalCode", "PostalCode5", "TotalOrderPieces", "TotalOrderWeight", "ShipperNumber", "ShipCode", "Shipper", "ConsCode", "OrderNotes", "OrderNumber", "RunSequence", "StopSequence", "RunDate", "StopNotes", "RunNotes", "ConsigneeNotes", "ProformaDate", "StopNumberId", "RunNumberId", "TractorId", "TractorName1", "IsStraightTruck");
            VwPalletsByItemConsignees = new FakeDbSet<VwPalletsByItemConsignee>("WmsCode", "RunId", "RunName", "PalletId");
            VwSmartDriveSchedules = new FakeDbSet<VwSmartDriveSchedule>("CompanyId");
            VwSmartDriveScheduleArchives = new FakeDbSet<VwSmartDriveScheduleArchive>("CompanyId");
            VwStartTimes = new FakeDbSet<VwStartTime>("Source");
            VwStops = new FakeDbSet<VwStop>("RunStopId", "Name", "StopSequence", "RunName", "WmsCode");
            VwStopStatsIds = new FakeDbSet<VwStopStatsId>("RowId");
            VwStopSummaries = new FakeDbSet<VwStopSummary>("RunStopId");
            VwTractorsOffs = new FakeDbSet<VwTractorsOff>("TractorName");
            VwUnassignedOrders = new FakeDbSet<VwUnassignedOrder>("TotalOrderPieces", "TotalOrderWeight", "Shipperid", "Processed");
            WorkAssignments = new FakeDbSet<WorkAssignment>("WorkAssignmentId");
            XpObjectTypes = new FakeDbSet<XpObjectType>("Oid");
            Zip2Zip = new FakeDbSet<Zip2Zip>("Origin", "Dest");
            Zip2ZipHistory = new FakeDbSet<Zip2ZipHistory>("Origin", "Dest", "OriginalMiles", "OriginDriveTime", "Miles", "DriveTime");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public int CreateProductivityResourcesForNewDay(System.DateTime? theDate)
        {

            return 0;
        }

        public int CreateProformaFromDispatchDay(string proformaName, System.DateTime? theDate, string proformaNotes)
        {

            return 0;
        }

        public int CreateRunsAndRunStopsForNewDay(int? proformaId, System.DateTime? theDate, bool? includeProformaDrivers, bool? includeProformaTractors, bool? includeProformaTrailers, bool? includePlannedShippedDate, bool? includePickup)
        {

            return 0;
        }

        public int DeleteDispatchDay(System.DateTime? theDate)
        {

            return 0;
        }

        public int DeleteEmptyRunStopsForDispatchDay(System.DateTime? theDate)
        {

            return 0;
        }

        public int DeleteProforma(int? proformaId)
        {

            return 0;
        }

        public int GetNewOrdersForThisFlagId(int? flagId, out string strAddEditDeleteCounts)
        {
            strAddEditDeleteCounts = default(string);

            return 0;
        }

        public int GetPrimaryKeyFromLicense(string column)
        {

            return 0;
        }

        public System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date)
        {
            int procResult;
            return PmBarcodes(date, out procResult);
        }

        public System.Collections.Generic.List<PmBarcodesReturnModel> PmBarcodes(System.DateTime? date, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<PmBarcodesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<PmBarcodesReturnModel>> PmBarcodesAsync(System.DateTime? date)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(PmBarcodes(date, out procResult));
        }

        public int ProcTest()
        {

            return 0;
        }

        public int PutOrderInRunStop(System.DateTime? currentDispatchDate, System.DateTime? orderPlannedShipDate, int? orderId, int? orderConsigneeId, bool? forceDate)
        {

            return 0;
        }

        public int SpSendCdosysmail(string from, string to, string subject, string body)
        {

            return 0;
        }

        public int StkNewFlag(int? mobileDeviceId)
        {

            return 0;
        }

        public int StkNewInfoFlag(int? mobileDeviceId)
        {

            return 0;
        }

        public int UspMobileAppAddCompany(string name, out decimal? companyId)
        {
            companyId = default(decimal);

            return 0;
        }

        public int UspMobileAppGetActualRunId(decimal? runNumberId, out decimal? runId)
        {
            runId = default(decimal);

            return 0;
        }

        public int UspMobileAppGetActualRunStopId(decimal? stopNumberId, out decimal? runStopId)
        {
            runStopId = default(decimal);

            return 0;
        }

        public int UspMobileAppGetRunId(out decimal? runId)
        {
            runId = default(decimal);

            return 0;
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate)
        {
            int procResult;
            return UspMobileAppGetRunList(runDate, out procResult);
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListReturnModel> UspMobileAppGetRunList(System.DateTime? runDate, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<UspMobileAppGetRunListReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListReturnModel>> UspMobileAppGetRunListAsync(System.DateTime? runDate)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(UspMobileAppGetRunList(runDate, out procResult));
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId)
        {
            int procResult;
            return UspMobileAppGetRunListByEmployee(runDate, employeeId, out procResult);
        }

        public System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel> UspMobileAppGetRunListByEmployee(System.DateTime? runDate, decimal? employeeId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<UspMobileAppGetRunListByEmployeeReturnModel>> UspMobileAppGetRunListByEmployeeAsync(System.DateTime? runDate, decimal? employeeId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(UspMobileAppGetRunListByEmployee(runDate, employeeId, out procResult));
        }

        public int UspMobileAppGetRunNumberId(out decimal? runNumberId)
        {
            runNumberId = default(decimal);

            return 0;
        }

        public int UspMobileAppGetStopId(out decimal? runStopId)
        {
            runStopId = default(decimal);

            return 0;
        }

        public int UspMobileAppGetStopNumberId(out decimal? runStopNumberId)
        {
            runStopNumberId = default(decimal);

            return 0;
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // The table 'ActionLog' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // ActionLog
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActionLog
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "smalldatetime")]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Runs", Order = 2, TypeName = "smallint")]
        [Display(Name = "Runs")]
        public short? Runs { get; set; } // Runs

        [Column(@"Stops", Order = 3, TypeName = "smallint")]
        [Display(Name = "Stops")]
        public short? Stops { get; set; } // Stops

        [Column(@"Action", Order = 4, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Action")]
        public string Action { get; set; } // Action (length: 25)

        [Column(@"ActionDate", Order = 5, TypeName = "smalldatetime")]
        [Display(Name = "Action date")]
        public System.DateTime? ActionDate { get; set; } // ActionDate

        [Column(@"ActionUser", Order = 6, TypeName = "varchar")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Action user")]
        public string ActionUser { get; set; } // ActionUser (length: 35)
    }

    // AppLog
    [Table("AppLog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AppLog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"AppLogId", Order = 1, TypeName = "int")]
        [Index(@"PK_AppLog", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "App log ID")]
        public int AppLogId { get; set; } // AppLogId (Primary key)

        [Column(@"LogEntryTime", Order = 2, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Log entry time")]
        public System.DateTime LogEntryTime { get; set; } // LogEntryTime

        [Column(@"TraceType", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trace type")]
        public string TraceType { get; set; } // TraceType (length: 50)

        [Column(@"AppName", Order = 4, TypeName = "varchar")]
        [Index(@"AppNameStartIndex", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "App name")]
        public string AppName { get; set; } // AppName (length: 200)

        [Column(@"Context", Order = 5, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5000)]
        [StringLength(5000)]
        [Display(Name = "Context")]
        public string Context { get; set; } // Context (length: 5000)

        [Column(@"SQLStmt", Order = 6, TypeName = "text")]
        [MaxLength(2147483647)]
        [StringLength(2147483647)]
        [Display(Name = "Sqls tmt")]
        public string SqlStmt { get; set; } // SQLStmt (length: 2147483647)

        [Column(@"ExecuteStartTime", Order = 7, TypeName = "datetime")]
        [Index(@"AppNameStartIndex", 2, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Execute start time")]
        public System.DateTime? ExecuteStartTime { get; set; } // ExecuteStartTime

        [Column(@"ExecuteEndTime", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Execute end time")]
        public System.DateTime? ExecuteEndTime { get; set; } // ExecuteEndTime

        [Column(@"ExecuteAsHours", Order = 9, TypeName = "decimal")]
        [Display(Name = "Execute as hours")]
        public decimal? ExecuteAsHours { get; set; } // ExecuteAsHours

        [Column(@"ExecuteAsMinutes", Order = 10, TypeName = "decimal")]
        [Display(Name = "Execute as minutes")]
        public decimal? ExecuteAsMinutes { get; set; } // ExecuteAsMinutes

        [Column(@"ExecuteAsSeconds", Order = 11, TypeName = "decimal")]
        [Display(Name = "Execute as seconds")]
        public decimal? ExecuteAsSeconds { get; set; } // ExecuteAsSeconds

        [Column(@"ExecuteAsMilliseconds", Order = 12, TypeName = "decimal")]
        [Display(Name = "Execute as milliseconds")]
        public decimal? ExecuteAsMilliseconds { get; set; } // ExecuteAsMilliseconds
    }

    // AppSettings
    [Table("AppSettings", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AppSetting
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SettingId", Order = 1, TypeName = "int")]
        [Index(@"PK_AppSettings", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Setting ID")]
        public int SettingId { get; set; } // SettingId (Primary key)

        [Column(@"SettingName", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Setting name")]
        public string SettingName { get; set; } // SettingName (length: 50)

        [Column(@"SettingValue", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Setting value")]
        public string SettingValue { get; set; } // SettingValue (length: 50)
    }

    // ArchiveOrders
    [Table("ArchiveOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveOrder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderID", Order = 1, TypeName = "numeric")]
        [Index(@"IX_ArchiveOrders_OrderID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderID (Primary key)

        [Column(@"OrderNumber", Order = 2, TypeName = "numeric")]
        [Index(@"ArchiveOrdersOrderNumberIdx", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 3, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperID", Order = 4, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Shipper ID")]
        public decimal ShipperId { get; set; } // ShipperID (Primary key)

        [Column(@"Consignor", Order = 5, TypeName = "numeric")]
        [Display(Name = "Consignor")]
        public decimal? Consignor { get; set; } // Consignor

        [Column(@"Consignee", Order = 6, TypeName = "numeric")]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // Consignee

        [Column(@"ShipperShipDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"ShipperDeliveryDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper delivery date")]
        public System.DateTime? ShipperDeliveryDate { get; set; } // ShipperDeliveryDate

        [Column(@"PlannedShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [Column(@"PlannedDeliveryDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"ActualDeliveryDate", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual delivery date")]
        public System.DateTime? ActualDeliveryDate { get; set; } // ActualDeliveryDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderCube", Order = 14, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order cube")]
        public decimal TotalOrderCube { get; set; } // TotalOrderCube (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 15, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPallets", Order = 16, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pallets")]
        public decimal TotalOrderPallets { get; set; } // TotalOrderPallets (Primary key)

        [Column(@"Status", Order = 17, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 18, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"PO_Number", Order = 19, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"CreateDate", Order = 20, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"UpdateOrderDate", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update order date")]
        public System.DateTime? UpdateOrderDate { get; set; } // UpdateOrderDate

        [Column(@"Notes", Order = 22, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [Column(@"Condition", Order = 23, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"ServiceLevel", Order = 24, TypeName = "int")]
        [Display(Name = "Service level")]
        public int? ServiceLevel { get; set; } // ServiceLevel

        [Column(@"SameDay", Order = 25, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 26, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl
    }

    // ArchiveOrderDetail
    [Table("ArchiveOrderDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveOrderDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ArchiveOrderDetail", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Archive order detail")]
        public decimal ArchiveOrderDetail_ { get; set; } // ArchiveOrderDetail (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderID", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderID (Primary key)

        [Column(@"LineSeqNo", Order = 3, TypeName = "smallint")]
        [Display(Name = "Line seq no")]
        public short? LineSeqNo { get; set; } // LineSeqNo

        [Column(@"ItemID", Order = 4, TypeName = "int")]
        [Display(Name = "Item ID")]
        public int? ItemId { get; set; } // ItemID

        [Column(@"Pieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Weight", Order = 6, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 7, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"LisTempControlled", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis temp controlled")]
        public bool? LisTempControlled { get; set; } // LisTempControlled

        [Column(@"ItemCode", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 10)

        [Column(@"CustCode", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)
    }

    // ArchiveRun
    [Table("ArchiveRun", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRun
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Index(@"IX_ArchiveRun_RunID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"ProformaDate_RunID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"Weight", Order = 3, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 4, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"Pallets", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pallets")]
        public decimal? Pallets { get; set; } // Pallets

        [Column(@"Pieces", Order = 6, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Status", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"PlannedShipDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 10, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"ActualReturnDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual return date")]
        public System.DateTime? ActualReturnDate { get; set; } // ActualReturnDate

        [Column(@"StandardMiles", Order = 12, TypeName = "numeric")]
        [Display(Name = "Standard miles")]
        public decimal? StandardMiles { get; set; } // StandardMiles

        [Column(@"ActualMiles", Order = 13, TypeName = "numeric")]
        [Display(Name = "Actual miles")]
        public decimal? ActualMiles { get; set; } // ActualMiles

        [Column(@"ProformaDate", Order = 14, TypeName = "datetime")]
        [Index(@"Proformadate", 1, IsUnique = false, IsClustered = false)]
        [Index(@"ProformaDate_RunID", 1, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Comments", Order = 15, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 800)

        [Column(@"ReportDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Report date")]
        public System.DateTime? ReportDate { get; set; } // ReportDate

        [Column(@"UpdateDate", Order = 17, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        [Column(@"RunNo", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PickUp", Order = 19, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"RunNumberID", Order = 20, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID
    }

    // ArchiveRunOrder
    [Table("ArchiveRunOrder", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunOrder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunOrderID", Order = 1, TypeName = "numeric")]
        [Index(@"IX_ArchiveRunOrder_RunOrderID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run order ID")]
        public decimal RunOrderId { get; set; } // RunOrderID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunStopID", Order = 2, TypeName = "numeric")]
        [Index(@"C_ArchiveRunOrder_RunStopID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [Column(@"OrderID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [Column(@"RunOrderSequence", Order = 4, TypeName = "numeric")]
        [Display(Name = "Run order sequence")]
        public decimal? RunOrderSequence { get; set; } // RunOrderSequence
    }

    // ArchiveRunResource
    [Table("ArchiveRunResource", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunResource
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunResourceID", Order = 1, TypeName = "numeric")]
        [Index(@"IX_ArchiveRunResource_RunResourceID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run resource ID")]
        public decimal RunResourceId { get; set; } // RunResourceID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Index(@"C_ArchiveRunResource_RunID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"RunID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [Column(@"CarrierID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Carrier ID")]
        public decimal? CarrierId { get; set; } // CarrierID

        [Column(@"TractorID", Order = 4, TypeName = "numeric")]
        [Display(Name = "Tractor ID")]
        public decimal? TractorId { get; set; } // TractorID

        [Column(@"TrailerID1", Order = 5, TypeName = "numeric")]
        [Display(Name = "Trailer ID 1")]
        public decimal? TrailerId1 { get; set; } // TrailerID1

        [Column(@"TrailerID2", Order = 6, TypeName = "numeric")]
        [Display(Name = "Trailer ID 2")]
        public decimal? TrailerId2 { get; set; } // TrailerID2

        [Column(@"TrailerID3", Order = 7, TypeName = "numeric")]
        [Display(Name = "Trailer ID 3")]
        public decimal? TrailerId3 { get; set; } // TrailerID3

        [Column(@"Driver1", Order = 8, TypeName = "numeric")]
        [Display(Name = "Driver 1")]
        public decimal? Driver1 { get; set; } // Driver1

        [Column(@"Driver2", Order = 9, TypeName = "numeric")]
        [Display(Name = "Driver 2")]
        public decimal? Driver2 { get; set; } // Driver2

        [Column(@"SecondRun", Order = 10, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun
    }

    // ArchiveRunStop
    [Table("ArchiveRunStop", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Index(@"IX_ArchiveRunStop_RunStopID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Index(@"C_ArchiveRunStop_RunID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"PlannedArrivalDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"PlannedDepartDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"ActualDepartDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"lisSubRun", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis sub run")]
        public bool? LisSubRun { get; set; } // lisSubRun

        [Column(@"RunSubID", Order = 9, TypeName = "numeric")]
        [Display(Name = "Run sub ID")]
        public decimal? RunSubId { get; set; } // RunSubID

        [Column(@"CompanyLocationID", Order = 10, TypeName = "numeric")]
        [Display(Name = "Company location ID")]
        public decimal? CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"StandardMilesTo", Order = 11, TypeName = "numeric")]
        [Display(Name = "Standard miles to")]
        public decimal? StandardMilesTo { get; set; } // StandardMilesTo

        [Column(@"ActualMilesTo", Order = 12, TypeName = "numeric")]
        [Display(Name = "Actual miles to")]
        public decimal? ActualMilesTo { get; set; } // ActualMilesTo

        [Column(@"Notes", Order = 13, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [Column(@"PO_Fax", Order = 14, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"Require_Audit", Order = 15, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 16, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 17, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"StopNumberID", Order = 18, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"DelayStopTime", Order = 19, TypeName = "numeric")]
        [Display(Name = "Delay stop time")]
        public decimal? DelayStopTime { get; set; } // DelayStopTime
    }

    // The table 'chkArchiveCheckItem' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkArchiveCheckItem
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkArchiveCheckItem
    {
        [Column(@"CheckItemID", Order = 1, TypeName = "int")]
        [Display(Name = "Check item ID")]
        public int? CheckItemId { get; set; } // CheckItemID

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(14)]
        [StringLength(14)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 14)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"Custcode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"PalletID", Order = 5, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"StopNumberID", Order = 6, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Pieces", Order = 7, TypeName = "smallint")]
        [Display(Name = "Pieces")]
        public short? Pieces { get; set; } // Pieces

        [Column(@"ScanTime", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"ScanSequence", Order = 9, TypeName = "tinyint")]
        [Display(Name = "Scan sequence")]
        public byte? ScanSequence { get; set; } // ScanSequence

        [Column(@"PalletStopSequence", Order = 10, TypeName = "tinyint")]
        [Display(Name = "Pallet stop sequence")]
        public byte? PalletStopSequence { get; set; } // PalletStopSequence

        [Column(@"NewItem", Order = 11, TypeName = "bit")]
        [Display(Name = "New item")]
        public bool? NewItem { get; set; } // NewItem

        [Column(@"Promo", Order = 12, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo
    }

    // The table 'chkArchivePallet' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkArchivePallet
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkArchivePallet
    {
        [Column(@"PalletID", Order = 1, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"ItemCount", Order = 2, TypeName = "int")]
        [Display(Name = "Item count")]
        public int? ItemCount { get; set; } // ItemCount

        [Column(@"UserID", Order = 3, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 4, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt
    }

    // The table 'chkArchiveStop' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkArchiveStop
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkArchiveStop
    {
        [Column(@"StopID", Order = 1, TypeName = "int")]
        [Display(Name = "Stop ID")]
        public int? StopId { get; set; } // StopID

        [Column(@"StopNumberID", Order = 2, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Exceptions", Order = 3, TypeName = "bit")]
        [Display(Name = "Exceptions")]
        public bool? Exceptions { get; set; } // Exceptions

        [Column(@"ClosedAt", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Closed at")]
        public System.DateTime? ClosedAt { get; set; } // ClosedAt

        [Column(@"UserID", Order = 5, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 6, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"PrintedAt", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Printed at")]
        public System.DateTime? PrintedAt { get; set; } // PrintedAt

        [Column(@"Cust", Order = 8, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust")]
        public string Cust { get; set; } // Cust (length: 2)
    }

    // chkCheckItem
    [Table("chkCheckItem", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkCheckItem
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CheckItemID", Order = 1, TypeName = "int")]
        [Index(@"PK_chkCheckItem", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Check item ID")]
        public int CheckItemId { get; set; } // CheckItemID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(14)]
        [StringLength(14)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 14)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"Custcode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"PalletID", Order = 5, TypeName = "int")]
        [Index(@"indexPalletID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"StopNumberID", Order = 6, TypeName = "int")]
        [Index(@"indexStopNumberID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Pieces", Order = 7, TypeName = "smallint")]
        [Display(Name = "Pieces")]
        public short? Pieces { get; set; } // Pieces

        [Column(@"ScanTime", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"ScanSequence", Order = 9, TypeName = "tinyint")]
        [Display(Name = "Scan sequence")]
        public byte? ScanSequence { get; set; } // ScanSequence

        [Column(@"PalletStopSequence", Order = 10, TypeName = "tinyint")]
        [Display(Name = "Pallet stop sequence")]
        public byte? PalletStopSequence { get; set; } // PalletStopSequence

        [Column(@"NewItem", Order = 11, TypeName = "bit")]
        [Display(Name = "New item")]
        public bool? NewItem { get; set; } // NewItem

        [Column(@"Promo", Order = 12, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo
    }

    // chkCheckItemLog
    [Table("chkCheckItemLog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkCheckItemLog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CheckItemID", Order = 1, TypeName = "int")]
        [Index(@"PK_chkCheckItemLog", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Check item ID")]
        public int CheckItemId { get; set; } // CheckItemID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(14)]
        [StringLength(14)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 14)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"Custcode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"PalletID", Order = 5, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"StopNumberID", Order = 6, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Pieces", Order = 7, TypeName = "smallint")]
        [Display(Name = "Pieces")]
        public short? Pieces { get; set; } // Pieces

        [Column(@"ScanTime", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"ScanSequence", Order = 9, TypeName = "tinyint")]
        [Display(Name = "Scan sequence")]
        public byte? ScanSequence { get; set; } // ScanSequence

        [Column(@"PalletStopSequence", Order = 10, TypeName = "tinyint")]
        [Display(Name = "Pallet stop sequence")]
        public byte? PalletStopSequence { get; set; } // PalletStopSequence

        [Column(@"NewItem", Order = 11, TypeName = "bit")]
        [Display(Name = "New item")]
        public bool? NewItem { get; set; } // NewItem

        [Column(@"Promo", Order = 12, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Action", Order = 13, TypeName = "varchar")]
        [Index(@"PK_chkCheckItemLog", 2, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Action")]
        public string Action { get; set; } // Action (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActionDate", Order = 14, TypeName = "datetime")]
        [Index(@"PK_chkCheckItemLog", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Action date")]
        public System.DateTime ActionDate { get; set; } // ActionDate (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActionUser", Order = 15, TypeName = "varchar")]
        [Index(@"PK_chkCheckItemLog", 4, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(35)]
        [StringLength(35)]
        [Key]
        [Display(Name = "Action user")]
        public string ActionUser { get; set; } // ActionUser (Primary key) (length: 35)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"NewStopNumberId", Order = 16, TypeName = "int")]
        [Index(@"PK_chkCheckItemLog", 5, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "New stop number ID")]
        public int NewStopNumberId { get; set; } // NewStopNumberId (Primary key)
    }

    // chkPallet
    [Table("chkPallet", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkPallet
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PalletID", Order = 1, TypeName = "int")]
        [Index(@"PK_chkPallet", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletID (Primary key)

        [Column(@"ItemCount", Order = 2, TypeName = "int")]
        [Display(Name = "Item count")]
        public int? ItemCount { get; set; } // ItemCount

        [Column(@"UserID", Order = 3, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 4, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt
    }

    // chkPalletLog
    [Table("chkPalletLog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkPalletLog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletID", Order = 1, TypeName = "int")]
        [Index(@"PK_chkPalletLog", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletID (Primary key)

        [Column(@"ItemCount", Order = 2, TypeName = "int")]
        [Display(Name = "Item count")]
        public int? ItemCount { get; set; } // ItemCount

        [Column(@"UserID", Order = 3, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 4, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Action", Order = 6, TypeName = "varchar")]
        [Index(@"PK_chkPalletLog", 2, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Action")]
        public string Action { get; set; } // Action (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActionDate", Order = 7, TypeName = "datetime")]
        [Index(@"PK_chkPalletLog", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Action date")]
        public System.DateTime ActionDate { get; set; } // ActionDate (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActionUser", Order = 8, TypeName = "varchar")]
        [Index(@"PK_chkPalletLog", 4, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(35)]
        [StringLength(35)]
        [Key]
        [Display(Name = "Action user")]
        public string ActionUser { get; set; } // ActionUser (Primary key) (length: 35)
    }

    // chkStop
    [Table("chkStop", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StopID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Stop ID")]
        public int StopId { get; set; } // StopID (Primary key)

        [Column(@"StopNumberID", Order = 2, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Exceptions", Order = 3, TypeName = "bit")]
        [Display(Name = "Exceptions")]
        public bool? Exceptions { get; set; } // Exceptions

        [Column(@"ClosedAt", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Closed at")]
        public System.DateTime? ClosedAt { get; set; } // ClosedAt

        [Column(@"UserID", Order = 5, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 6, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"PrintedAt", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Printed at")]
        public System.DateTime? PrintedAt { get; set; } // PrintedAt

        [Column(@"Cust", Order = 8, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust")]
        public string Cust { get; set; } // Cust (length: 2)
    }

    // The table 'chkStopsClosed' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkStopsClosed
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkStopsClosed
    {
        [Column(@"RunName", Order = 1, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"ProformaDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Name", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"City", Order = 4, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 5, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"StopNumberID", Order = 6, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"Exceptions", Order = 7, TypeName = "bit")]
        [Display(Name = "Exceptions")]
        public bool? Exceptions { get; set; } // Exceptions

        [Column(@"ClosedAt", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Closed at")]
        public System.DateTime? ClosedAt { get; set; } // ClosedAt

        [Column(@"UserID", Order = 9, TypeName = "smallint")]
        [Display(Name = "User ID")]
        public short? UserId { get; set; } // UserID

        [Column(@"Initials", Order = 10, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"PrintedAt", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Printed at")]
        public System.DateTime? PrintedAt { get; set; } // PrintedAt

        [Column(@"Cust", Order = 12, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust")]
        public string Cust { get; set; } // Cust (length: 2)

        [Column(@"RunNo", Order = 13, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"StopSequence", Order = 14, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"Expr1", Order = 15, TypeName = "char")]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Expr 1")]
        public string Expr1 { get; set; } // Expr1 (length: 32)
    }

    // chkvwCheckSummary
    [Table("chkvwCheckSummary", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwCheckSummary
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"PalletID", Order = 2, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"Itemcode", Order = 4, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"Pieces", Order = 5, TypeName = "int")]
        [Display(Name = "Pieces")]
        public int? Pieces { get; set; } // Pieces

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Promo", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Promo")]
        public int Promo { get; set; } // Promo (Primary key)
    }

    // chkvwExceptions
    [Table("chkvwExceptions", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwException
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 4, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"Custcode", Order = 5, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 6, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"OrderPieces", Order = 7, TypeName = "numeric")]
        [Display(Name = "Order pieces")]
        public decimal? OrderPieces { get; set; } // OrderPieces

        [Column(@"CheckPieces", Order = 8, TypeName = "int")]
        [Display(Name = "Check pieces")]
        public int? CheckPieces { get; set; } // CheckPieces

        [Column(@"OverShort", Order = 9, TypeName = "numeric")]
        [Display(Name = "Over short")]
        public decimal? OverShort { get; set; } // OverShort

        [Column(@"ItemDesc", Order = 10, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 11, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"Promo", Order = 12, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [Column(@"Lip", Order = 13, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"RunNumberID", Order = 14, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopNumberID", Order = 15, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Orders", Order = 16, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"RunNo", Order = 17, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)
    }

    // chkvwExceptionDetail
    [Table("chkvwExceptionDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwExceptionDetail
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 5, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"Custcode", Order = 6, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 7, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"OrderPieces", Order = 8, TypeName = "numeric")]
        [Display(Name = "Order pieces")]
        public decimal? OrderPieces { get; set; } // OrderPieces

        [Column(@"CheckPieces", Order = 9, TypeName = "int")]
        [Display(Name = "Check pieces")]
        public int? CheckPieces { get; set; } // CheckPieces

        [Column(@"OverShort", Order = 10, TypeName = "numeric")]
        [Display(Name = "Over short")]
        public decimal? OverShort { get; set; } // OverShort

        [Column(@"ItemDesc", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 12, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"Promo", Order = 13, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [Column(@"Lip", Order = 14, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"RunNumberID", Order = 15, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopNumberID", Order = 16, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Orders", Order = 17, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"palletid", Order = 18, TypeName = "int")]
        [Display(Name = "Palletid")]
        public int? Palletid { get; set; } // palletid

        [Column(@"CheckPalletPieces", Order = 19, TypeName = "int")]
        [Display(Name = "Check pallet pieces")]
        public int? CheckPalletPieces { get; set; } // CheckPalletPieces

        [Column(@"Initials", Order = 20, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt
    }

    // The table 'chkvwItems' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwItems
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwItem
    {
        [Column(@"Barcode", Order = 1, TypeName = "char")]
        [MaxLength(14)]
        [StringLength(14)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 14)

        [Column(@"Custcode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"ScanTime", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"PalletID", Order = 5, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"Pieces", Order = 6, TypeName = "smallint")]
        [Display(Name = "Pieces")]
        public short? Pieces { get; set; } // Pieces

        [Column(@"ScanSequence", Order = 7, TypeName = "tinyint")]
        [Display(Name = "Scan sequence")]
        public byte? ScanSequence { get; set; } // ScanSequence

        [Column(@"StopSequence", Order = 8, TypeName = "tinyint")]
        [Display(Name = "Stop sequence")]
        public byte? StopSequence { get; set; } // StopSequence

        [Column(@"ItemDesc", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 10, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"Lip", Order = 11, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"StopName", Order = 12, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Stop name")]
        public string StopName { get; set; } // StopName (length: 30)

        [Column(@"RunName", Order = 13, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunDate", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run date")]
        public System.DateTime? RunDate { get; set; } // RunDate

        [Column(@"StopNumberID", Order = 15, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID
    }

    // chkvwOrderDetail
    [Table("chkvwOrderDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwOrderDetail
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"OrderNumber", Order = 2, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"custcode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // custcode (length: 2)

        [Column(@"pieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // pieces

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Promo", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Promo")]
        public int Promo { get; set; } // Promo (Primary key)
    }

    // chkvwPalletCount
    [Table("chkvwPalletCount", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwPalletCount
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderItemId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order item ID")]
        public int OrderItemId { get; set; } // OrderItemId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"NumCases", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Num cases")]
        public int NumCases { get; set; } // NumCases (Primary key)

        [Column(@"CustCode", Order = 3, TypeName = "varchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 4, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"ItemSize", Order = 5, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"ItemDesc", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EntryDateTime", Order = 7, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Entry date time")]
        public System.DateTime EntryDateTime { get; set; } // EntryDateTime (Primary key)

        [Column(@"ShipNo", Order = 8, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Ship no")]
        public string ShipNo { get; set; } // ShipNo (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderId", Order = 9, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public int OrderId { get; set; } // OrderId (Primary key)

        [Column(@"UserCount1", Order = 10, TypeName = "int")]
        [Display(Name = "User count 1")]
        public int? UserCount1 { get; set; } // UserCount1

        [Column(@"ScannerCount1", Order = 11, TypeName = "int")]
        [Display(Name = "Scanner count 1")]
        public int? ScannerCount1 { get; set; } // ScannerCount1

        [Column(@"UserCount2", Order = 12, TypeName = "int")]
        [Display(Name = "User count 2")]
        public int? UserCount2 { get; set; } // UserCount2

        [Column(@"ScannerCount2", Order = 13, TypeName = "int")]
        [Display(Name = "Scanner count 2")]
        public int? ScannerCount2 { get; set; } // ScannerCount2

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderPickId", Order = 14, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletId", Order = 15, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId (Primary key)

        [Column(@"Initials", Order = 16, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 5)

        [Column(@"FirstName", Order = 17, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 25)

        [Column(@"LastName", Order = 18, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 30)
    }

    // chkvwReconcile
    [Table("chkvwReconcile", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwReconcile
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Custcode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Promo", Order = 4, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Promo")]
        public int Promo { get; set; } // Promo (Primary key)

        [Column(@"OrderPieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Order pieces")]
        public decimal? OrderPieces { get; set; } // OrderPieces

        [Column(@"CheckPieces", Order = 6, TypeName = "int")]
        [Display(Name = "Check pieces")]
        public int? CheckPieces { get; set; } // CheckPieces

        [Column(@"OverShort", Order = 7, TypeName = "numeric")]
        [Display(Name = "Over short")]
        public decimal? OverShort { get; set; } // OverShort

        [Column(@"Orders", Order = 8, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders
    }

    // The table 'chkvwReconcileDetail_old' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwReconcileDetail_old
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwReconcileDetailOld
    {
        [Column(@"Stopnumberid", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stopnumberid")]
        public decimal? Stopnumberid { get; set; } // Stopnumberid

        [Column(@"palletid", Order = 2, TypeName = "int")]
        [Display(Name = "Palletid")]
        public int? Palletid { get; set; } // palletid

        [Column(@"custcode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // custcode (length: 2)

        [Column(@"itemcode", Order = 4, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // itemcode (length: 12)

        [Column(@"OrderPieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Order pieces")]
        public decimal? OrderPieces { get; set; } // OrderPieces

        [Column(@"CheckPieces", Order = 6, TypeName = "int")]
        [Display(Name = "Check pieces")]
        public int? CheckPieces { get; set; } // CheckPieces

        [Column(@"Promo", Order = 7, TypeName = "int")]
        [Display(Name = "Promo")]
        public int? Promo { get; set; } // Promo

        [Column(@"OrderNumber", Order = 8, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"Initials", Order = 9, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt
    }

    // The table 'chkvwScanStats' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwScanStats
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwScanStat
    {
        [Column(@"Initials", Order = 1, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"palletid", Order = 2, TypeName = "int")]
        [Display(Name = "Palletid")]
        public int? Palletid { get; set; } // palletid

        [Column(@"Scans", Order = 3, TypeName = "int")]
        [Display(Name = "Scans")]
        public int? Scans { get; set; } // Scans

        [Column(@"MinScan", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Min scan")]
        public System.DateTime? MinScan { get; set; } // MinScan

        [Column(@"secs", Order = 5, TypeName = "int")]
        [Display(Name = "Secs")]
        public int? Secs { get; set; } // secs

        [Column(@"ScanPerMinute", Order = 6, TypeName = "numeric")]
        [Display(Name = "Scan per minute")]
        public decimal? ScanPerMinute { get; set; } // ScanPerMinute
    }

    // The table 'chkvwStopExceptions' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwStopExceptions
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopException
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"NoException", Order = 2, TypeName = "bit")]
        [Display(Name = "No exception")]
        public bool? NoException { get; set; } // NoException
    }

    // The table 'chkvwStopPallet' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwStopPallet
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopPallet
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "int")]
        [Display(Name = "Stop number ID")]
        public int? StopNumberId { get; set; } // StopNumberID

        [Column(@"PalletID", Order = 2, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletID

        [Column(@"Initials", Order = 3, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"FinishedAt", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt

        [Column(@"PiecesThisStop", Order = 5, TypeName = "int")]
        [Display(Name = "Pieces this stop")]
        public int? PiecesThisStop { get; set; } // PiecesThisStop

        [Column(@"PalletCount", Order = 6, TypeName = "int")]
        [Display(Name = "Pallet count")]
        public int? PalletCount { get; set; } // PalletCount

        [Column(@"SumPallet", Order = 7, TypeName = "int")]
        [Display(Name = "Sum pallet")]
        public int? SumPallet { get; set; } // SumPallet
    }

    // The table 'chkvwStopShipperExceptions' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwStopShipperExceptions
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopShipperException
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Custcode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"NoException", Order = 3, TypeName = "bit")]
        [Display(Name = "No exception")]
        public bool? NoException { get; set; } // NoException
    }

    // chkvwStopsNotClosed
    [Table("chkvwStopsNotClosed", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopsNotClosed
    {
        [Column(@"StopNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"RunNo", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"ProformaDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"CustCode", Order = 7, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"OrderCount", Order = 8, TypeName = "int")]
        [Display(Name = "Order count")]
        public int? OrderCount { get; set; } // OrderCount

        [Column(@"TotalPieces", Order = 9, TypeName = "numeric")]
        [Display(Name = "Total pieces")]
        public decimal? TotalPieces { get; set; } // TotalPieces

        [Column(@"Scan_Count", Order = 10, TypeName = "int")]
        [Display(Name = "Scan count")]
        public int? ScanCount { get; set; } // Scan_Count

        [Column(@"StopClosedAt", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Stop closed at")]
        public System.DateTime? StopClosedAt { get; set; } // StopClosedAt

        [Column(@"ShipperClosedAt", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper closed at")]
        public System.DateTime? ShipperClosedAt { get; set; } // ShipperClosedAt

        [Column(@"Closed", Order = 13, TypeName = "bit")]
        [Display(Name = "Closed")]
        public bool? Closed { get; set; } // Closed
    }

    // The table 'chkvwStopSummary' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // chkvwStopSummary
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopSummary
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"StopNumberID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"OrderCount", Order = 4, TypeName = "int")]
        [Display(Name = "Order count")]
        public int? OrderCount { get; set; } // OrderCount

        [Column(@"TotalPieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Total pieces")]
        public decimal? TotalPieces { get; set; } // TotalPieces
    }

    // ClientBarcodeType
    [Table("ClientBarcodeType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClientBarcodeType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ClientBarcodeTypeID", Order = 1, TypeName = "int")]
        [Index(@"PK_ClientBarcode", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Client barcode type ID")]
        public int ClientBarcodeTypeId { get; set; } // ClientBarcodeTypeID (Primary key)

        [Column(@"ClientName", Order = 2, TypeName = "varchar")]
        [Index(@"IX_ClientBarcodeType_UniqueClientName", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Client name")]
        public string ClientName { get; set; } // ClientName (length: 50)

        [Column(@"Prefix", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(16)]
        [StringLength(16)]
        [Display(Name = "Prefix")]
        public string Prefix { get; set; } // Prefix (length: 16)

        [Column(@"Reviewed", Order = 4, TypeName = "bit")]
        [Required]
        [Display(Name = "Reviewed")]
        public bool Reviewed { get; set; } // Reviewed

        [Column(@"ClientDesc", Order = 5, TypeName = "varchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Client desc")]
        public string ClientDesc { get; set; } // ClientDesc (length: 128)

        [Column(@"Deleted", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } // Deleted

        [Column(@"CreatedDatetime", Order = 7, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 8, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime ModifiedDatetime { get; set; } // ModifiedDatetime

        // Reverse navigation

        /// <summary>
        /// Child ClientBarcodeTypeSpecs where [ClientBarcodeTypeSpec].[ClientBarcodeTypeID] point to this entity (FK_ClientBarcodeTypeSpec_ClientBarcodeType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ClientBarcodeTypeSpec> ClientBarcodeTypeSpecs { get; set; } // ClientBarcodeTypeSpec.FK_ClientBarcodeTypeSpec_ClientBarcodeType

        public ClientBarcodeType()
        {
            Reviewed = true;
            Deleted = false;
            CreatedDatetime = System.DateTime.Now;
            ModifiedDatetime = System.DateTime.Now;
            ClientBarcodeTypeSpecs = new ObservableCollection<ClientBarcodeTypeSpec>();
        }
    }

    // ClientBarcodeTypeSpec
    [Table("ClientBarcodeTypeSpec", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClientBarcodeTypeSpec
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ClientBarcodeTypeSpecID", Order = 1, TypeName = "int")]
        [Index(@"PK_ClientBarcodeType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Client barcode type spec ID")]
        public int ClientBarcodeTypeSpecId { get; set; } // ClientBarcodeTypeSpecID (Primary key)

        [Column(@"ClientBarcodeTypeID", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Client barcode type ID")]
        public int ClientBarcodeTypeId { get; set; } // ClientBarcodeTypeID

        [Column(@"BarcodeTypeName", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Barcode type name")]
        public string BarcodeTypeName { get; set; } // BarcodeTypeName (length: 32)

        [Column(@"Required", Order = 4, TypeName = "bit")]
        [Required]
        [Display(Name = "Required")]
        public bool Required { get; set; } // Required

        [Column(@"ContainsStore", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Contains store")]
        public bool ContainsStore { get; set; } // ContainsStore

        [Column(@"RegexIdentExtract", Order = 6, TypeName = "varchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Regex ident extract")]
        public string RegexIdentExtract { get; set; } // RegexIdentExtract (length: 128)

        [Column(@"Length", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Length")]
        public int Length { get; set; } // Length

        [Column(@"ndxStore1Start", Order = 8, TypeName = "int")]
        [Display(Name = "Ndx store 1 start")]
        public int? NdxStore1Start { get; set; } // ndxStore1Start

        [Column(@"ndxStore1End", Order = 9, TypeName = "int")]
        [Display(Name = "Ndx store 1 end")]
        public int? NdxStore1End { get; set; } // ndxStore1End

        [Column(@"ndxStore2Start", Order = 10, TypeName = "int")]
        [Display(Name = "Ndx store 2 start")]
        public int? NdxStore2Start { get; set; } // ndxStore2Start

        [Column(@"ndxStore2End", Order = 11, TypeName = "int")]
        [Display(Name = "Ndx store 2 end")]
        public int? NdxStore2End { get; set; } // ndxStore2End

        [Column(@"StoreConcatChar", Order = 12, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Store concat char")]
        public string StoreConcatChar { get; set; } // StoreConcatChar (length: 1)

        [Column(@"ZeroPadLeft", Order = 13, TypeName = "int")]
        [Required]
        [Display(Name = "Zero pad left")]
        public int ZeroPadLeft { get; set; } // ZeroPadLeft

        [Column(@"ZeroPadRight", Order = 14, TypeName = "int")]
        [Required]
        [Display(Name = "Zero pad right")]
        public int ZeroPadRight { get; set; } // ZeroPadRight

        [Column(@"Reviewed", Order = 15, TypeName = "bit")]
        [Required]
        [Display(Name = "Reviewed")]
        public bool Reviewed { get; set; } // Reviewed

        [Column(@"Deleted", Order = 16, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } // Deleted

        [Column(@"CreatedDatetime", Order = 17, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 18, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime ModifiedDatetime { get; set; } // ModifiedDatetime

        // Foreign keys

        /// <summary>
        /// Parent ClientBarcodeType pointed by [ClientBarcodeTypeSpec].([ClientBarcodeTypeId]) (FK_ClientBarcodeTypeSpec_ClientBarcodeType)
        /// </summary>
        [ForeignKey("ClientBarcodeTypeId"), Required] public virtual ClientBarcodeType ClientBarcodeType { get; set; } // FK_ClientBarcodeTypeSpec_ClientBarcodeType

        public ClientBarcodeTypeSpec()
        {
            Required = true;
            ContainsStore = true;
            Length = 0;
            NdxStore1Start = 0;
            NdxStore1End = 0;
            ZeroPadLeft = 0;
            ZeroPadRight = 0;
            Reviewed = true;
            Deleted = false;
            CreatedDatetime = System.DateTime.Now;
            ModifiedDatetime = System.DateTime.Now;
        }
    }

    // Company
    [Table("Company", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Company
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Company", 1, IsUnique = true, IsClustered = true)]
        [Index(@"IX_CID_WMS_Name", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Company ID")]
        public decimal CompanyId { get; set; } // CompanyID (Primary key)

        [Column(@"WMSCode", Order = 2, TypeName = "char")]
        [Index(@"IX_CID_WMS_Name", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (length: 18)

        [Column(@"Name", Order = 3, TypeName = "char")]
        [Index(@"IX_CID_WMS_Name", 3, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"ParentCompany", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Parent company")]
        public string ParentCompany { get; set; } // ParentCompany (length: 10)

        [Column(@"Notes", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child CompanyLocations where [CompanyLocation].[CompanyID] point to this entity (FK_CompanyLocation_Company)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyLocation> CompanyLocations { get; set; } // CompanyLocation.FK_CompanyLocation_Company

        public Company()
        {
            CompanyLocations = new ObservableCollection<CompanyLocation>();
        }
    }

    // CompanyCarrier
    [Table("CompanyCarrier", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyCarrier
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyCarrierID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_CompanyCarrier", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company carrier ID")]
        public decimal CompanyCarrierId { get; set; } // CompanyCarrierID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"lisPreferred", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis preferred")]
        public bool LisPreferred { get; set; } // lisPreferred

        [Column(@"Rank", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Rank")]
        public string Rank { get; set; } // Rank (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyCarrier].([CompanyLocationId]) (FK_CompanyCarrier_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyCarrier_CompanyLocation
    }

    // CompanyContactInfo
    [Table("CompanyContactInfo", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyContactInfo
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyContactInfoID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Company_ContactInfo", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company contact info ID")]
        public decimal CompanyContactInfoId { get; set; } // CompanyContactInfoID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"ContactType", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Contact type")]
        public string ContactType { get; set; } // ContactType (length: 10)

        [Column(@"ContactBlnk", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Contact blnk")]
        public string ContactBlnk { get; set; } // ContactBlnk (length: 50)

        [Column(@"Notes", Order = 5, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [Column(@"PhoneNumber", Order = 6, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"Email", Order = 7, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 50)

        [Column(@"ContactTypeID", Order = 8, TypeName = "numeric")]
        [Display(Name = "Contact type ID")]
        public decimal? ContactTypeId { get; set; } // ContactTypeID

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyContactInfo].([CompanyLocationId]) (FK_CompanyContactInfo_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyContactInfo_CompanyLocation

        /// <summary>
        /// Parent ContactType pointed by [CompanyContactInfo].([ContactTypeId]) (FK_CompanyContact_ContactType)
        /// </summary>
        [ForeignKey("ContactTypeId")] public virtual ContactType ContactType_ContactTypeId { get; set; } // FK_CompanyContact_ContactType
    }

    // CompanyLocation
    [Table("CompanyLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocation
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyLocationID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_CompanyLocation", 1, IsUnique = true, IsClustered = true)]
        [Index(@"IX_CLID_CID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID (Primary key)

        [Column(@"CompanyID", Order = 2, TypeName = "numeric")]
        [Index(@"IX_CompanyLocation_CompanyID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IX_CLID_CID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Company ID")]
        public decimal CompanyId { get; set; } // CompanyID

        [Column(@"Type", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 10)

        [Column(@"Type1", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Type 1")]
        public string Type1 { get; set; } // Type1 (length: 10)

        [Column(@"AlternateName", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Alternate name")]
        public string AlternateName { get; set; } // AlternateName (length: 10)

        [Column(@"Street1", Order = 6, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 7, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"Street3", Order = 8, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 3")]
        public string Street3 { get; set; } // Street3 (length: 25)

        [Column(@"City", Order = 9, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 11, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"Appointment", Order = 12, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Appointment")]
        public string Appointment { get; set; } // Appointment (length: 10)

        [Column(@"Notes", Order = 13, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 2000)

        [Column(@"PhoneNumber", Order = 14, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"PO_Fax", Order = 15, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"FaxNumber", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Fax number")]
        public string FaxNumber { get; set; } // FaxNumber (length: 30)

        [Column(@"SpecialInstructions", Order = 17, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Special instructions")]
        public string SpecialInstructions { get; set; } // SpecialInstructions (length: 2000)

        [Column(@"Directions", Order = 18, TypeName = "varchar")]
        [MaxLength(3000)]
        [StringLength(3000)]
        [Display(Name = "Directions")]
        public string Directions { get; set; } // Directions (length: 3000)

        [Column(@"Require_Audit", Order = 19, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintDirections", Order = 20, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"PrintNotes", Order = 21, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PMCustNo", Order = 22, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Pmc ust no")]
        public string PmCustNo { get; set; } // PMCustNo (length: 5)

        [Column(@"Lane", Order = 23, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Lane")]
        public string Lane { get; set; } // Lane (length: 1)

        // Reverse navigation

        /// <summary>
        /// Child CompanyCarriers where [CompanyCarrier].[CompanyLocationID] point to this entity (FK_CompanyCarrier_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyCarrier> CompanyCarriers { get; set; } // CompanyCarrier.FK_CompanyCarrier_CompanyLocation
        /// <summary>
        /// Child CompanyContactInfoes where [CompanyContactInfo].[CompanyLocationID] point to this entity (FK_CompanyContactInfo_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyContactInfo> CompanyContactInfoes { get; set; } // CompanyContactInfo.FK_CompanyContactInfo_CompanyLocation
        /// <summary>
        /// Child CompanyLocationAppointments where [CompanyLocationAppointment].[CompanyLocationID] point to this entity (FK_CompanyLocationAppointment_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyLocationAppointment> CompanyLocationAppointments { get; set; } // CompanyLocationAppointment.FK_CompanyLocationAppointment_CompanyLocation
        /// <summary>
        /// Child CompanyOpenWindows where [CompanyOpenWindow].[CompanyLocationID] point to this entity (FK_CompanyOpenWindow_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyOpenWindow> CompanyOpenWindows { get; set; } // CompanyOpenWindow.FK_CompanyOpenWindow_CompanyLocation
        /// <summary>
        /// Child CompanyShippers where [CompanyShipper].[CompanyLocationID] point to this entity (FK_CompanyShipper_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyShipper> CompanyShippers { get; set; } // CompanyShipper.FK_CompanyShipper_CompanyLocation
        /// <summary>
        /// Child CompanyStandards where [CompanyStandard].[CompanyLocationID] point to this entity (FK_CompanyStandard_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyStandard> CompanyStandards { get; set; } // CompanyStandard.FK_CompanyStandard_CompanyLocation
        /// <summary>
        /// Child Orders where [Orders].[Consignee] point to this entity (FK_Orders_CompanyLocation_Consignee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders_Consignee { get; set; } // Orders.FK_Orders_CompanyLocation_Consignee
        /// <summary>
        /// Child Orders where [Orders].[Consignor] point to this entity (FK_Orders_CompanyLocation_Consignor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders_Consignor { get; set; } // Orders.FK_Orders_CompanyLocation_Consignor
        /// <summary>
        /// Child Orders where [Orders].[ShipperID] point to this entity (FK_Orders_CompanyLocation_Shipper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders_ShipperId { get; set; } // Orders.FK_Orders_CompanyLocation_Shipper
        /// <summary>
        /// Child ProformaRunStops where [ProformaRunStops].[CompanyLocationID] point to this entity (FK_ProformaRunStops_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProformaRunStop> ProformaRunStops { get; set; } // ProformaRunStops.FK_ProformaRunStops_CompanyLocation
        /// <summary>
        /// Child RunStops where [RunStop].[CompanyLocationID] point to this entity (FK_RunStop_CompanyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunStop> RunStops { get; set; } // RunStop.FK_RunStop_CompanyLocation

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [CompanyLocation].([CompanyId]) (FK_CompanyLocation_Company)
        /// </summary>
        [ForeignKey("CompanyId"), Required] public virtual Company Company { get; set; } // FK_CompanyLocation_Company

        public CompanyLocation()
        {
            CompanyCarriers = new ObservableCollection<CompanyCarrier>();
            CompanyContactInfoes = new ObservableCollection<CompanyContactInfo>();
            CompanyLocationAppointments = new ObservableCollection<CompanyLocationAppointment>();
            CompanyOpenWindows = new ObservableCollection<CompanyOpenWindow>();
            CompanyShippers = new ObservableCollection<CompanyShipper>();
            CompanyStandards = new ObservableCollection<CompanyStandard>();
            Orders_Consignee = new ObservableCollection<Order>();
            Orders_Consignor = new ObservableCollection<Order>();
            Orders_ShipperId = new ObservableCollection<Order>();
            ProformaRunStops = new ObservableCollection<ProformaRunStop>();
            RunStops = new ObservableCollection<RunStop>();
        }
    }

    // CompanyLocationAppointment
    [Table("CompanyLocationAppointment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocationAppointment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyLocationAppointmentID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_CompanyLocationAppointment", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company location appointment ID")]
        public decimal CompanyLocationAppointmentId { get; set; } // CompanyLocationAppointmentID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"NegativeStartOffset", Order = 3, TypeName = "bit")]
        [Display(Name = "Negative start offset")]
        public bool? NegativeStartOffset { get; set; } // NegativeStartOffset

        [Column(@"StartOffset", Order = 4, TypeName = "smalldatetime")]
        [Display(Name = "Start offset")]
        public System.DateTime? StartOffset { get; set; } // StartOffset

        [Column(@"EndOffset", Order = 5, TypeName = "smalldatetime")]
        [Display(Name = "End offset")]
        public System.DateTime? EndOffset { get; set; } // EndOffset

        [Column(@"StartOffsetInMin", Order = 6, TypeName = "int")]
        [Display(Name = "Start offset in min")]
        public int? StartOffsetInMin { get; set; } // StartOffsetInMin

        [Column(@"EndOffsetInMin", Order = 7, TypeName = "int")]
        [Display(Name = "End offset in min")]
        public int? EndOffsetInMin { get; set; } // EndOffsetInMin

        [Column(@"MustFinishWithinWindow", Order = 8, TypeName = "bit")]
        [Display(Name = "Must finish within window")]
        public bool? MustFinishWithinWindow { get; set; } // MustFinishWithinWindow

        [Column(@"MustStartWithinWindow", Order = 9, TypeName = "bit")]
        [Display(Name = "Must start within window")]
        public bool? MustStartWithinWindow { get; set; } // MustStartWithinWindow

        [Column(@"weekday", Order = 10, TypeName = "int")]
        [Display(Name = "Weekday")]
        public int? Weekday { get; set; } // weekday

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyLocationAppointment].([CompanyLocationId]) (FK_CompanyLocationAppointment_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyLocationAppointment_CompanyLocation
    }

    // CompanyLocationGPS
    [Table("CompanyLocationGPS", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocationGp
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyLocationId", Order = 1, TypeName = "decimal")]
        [Index(@"PK_CompanyLocationGPS", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationId (Primary key)

        [Column(@"Longitude", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Longitude")]
        public decimal Longitude { get; set; } // Longitude

        [Column(@"Latitude", Order = 3, TypeName = "decimal")]
        [Required]
        [Display(Name = "Latitude")]
        public decimal Latitude { get; set; } // Latitude
    }

    // CompanyMfCode
    [Table("CompanyMfCode", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyMfCode
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyMfCodeID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Company mf code ID")]
        public int CompanyMfCodeId { get; set; } // CompanyMfCodeID (Primary key)

        [Column(@"CompanyID", Order = 2, TypeName = "int")]
        [Display(Name = "Company ID")]
        public int? CompanyId { get; set; } // CompanyID

        [Column(@"MfCode", Order = 3, TypeName = "char")]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "Mf code")]
        public string MfCode { get; set; } // MfCode (length: 7)
    }

    // CompanyOpenWindow
    [Table("CompanyOpenWindow", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyOpenWindow
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyOpenWindowID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_CompanyOpenWindow", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company open window ID")]
        public decimal CompanyOpenWindowId { get; set; } // CompanyOpenWindowID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"DayofWeek", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Dayof week")]
        public string DayofWeek { get; set; } // DayofWeek (length: 10)

        [Column(@"OpenTime", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Open time")]
        public System.DateTime? OpenTime { get; set; } // OpenTime

        [Column(@"CloseTime", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Close time")]
        public System.DateTime? CloseTime { get; set; } // CloseTime

        [Column(@"AppointmentTime", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appointment time")]
        public System.DateTime? AppointmentTime { get; set; } // AppointmentTime

        [Column(@"LunchTime", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Lunch time")]
        public System.DateTime? LunchTime { get; set; } // LunchTime

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyOpenWindow].([CompanyLocationId]) (FK_CompanyOpenWindow_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyOpenWindow_CompanyLocation
    }

    // CompanyShipper
    [Table("CompanyShipper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyShipper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyShipperID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Company shipper ID")]
        public int CompanyShipperId { get; set; } // CompanyShipperID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Company location ID")]
        public decimal? CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"Type", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 10)

        [Column(@"CustCode", Order = 4, TypeName = "char")]
        [Index(@"I_CustCheckLookup", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"NotChecked", Order = 5, TypeName = "bit")]
        [Index(@"I_CustCheckLookup", 2, IsUnique = false, IsClustered = false)]
        [Display(Name = "Not checked")]
        public bool? NotChecked { get; set; } // NotChecked

        [Column(@"DetailNotChecked", Order = 6, TypeName = "bit")]
        [Index(@"I_CustCheckLookup", 3, IsUnique = false, IsClustered = false)]
        [Display(Name = "Detail not checked")]
        public bool? DetailNotChecked { get; set; } // DetailNotChecked

        [Column(@"DetailPromoNotChecked", Order = 7, TypeName = "bit")]
        [Index(@"I_CustCheckLookup", 4, IsUnique = false, IsClustered = false)]
        [Display(Name = "Detail promo not checked")]
        public bool? DetailPromoNotChecked { get; set; } // DetailPromoNotChecked

        [Column(@"HotButton", Order = 8, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Hot button")]
        public string HotButton { get; set; } // HotButton (length: 3)

        [Column(@"MfgDateType", Order = 9, TypeName = "varchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Mfg date type")]
        public string MfgDateType { get; set; } // MfgDateType (length: 3)

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyShipper].([CompanyLocationId]) (FK_CompanyShipper_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId")] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyShipper_CompanyLocation
    }

    // CompanyStandard
    [Table("CompanyStandard", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyStandard
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyStandardID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_CompanyStandard", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Company standard ID")]
        public decimal CompanyStandardId { get; set; } // CompanyStandardID (Primary key)

        [Column(@"CompanyLocationID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"MinTime", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Min time")]
        public string MinTime { get; set; } // MinTime (length: 10)

        [Column(@"PoundsPerHour", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pounds per hour")]
        public string PoundsPerHour { get; set; } // PoundsPerHour (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [CompanyStandard].([CompanyLocationId]) (FK_CompanyStandard_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_CompanyStandard_CompanyLocation
    }

    // CompletedWork
    [Table("CompletedWork", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompletedWork
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeId", Order = 1, TypeName = "decimal")]
        [Index(@"PK_CompletedWork", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"JobId", Order = 2, TypeName = "int")]
        [Index(@"PK_CompletedWork", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Job ID")]
        public int JobId { get; set; } // JobId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkDate", Order = 3, TypeName = "datetime")]
        [Index(@"IX_WorkDate", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_CompletedWork", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime WorkDate { get; set; } // WorkDate (Primary key)

        [Column(@"Hours", Order = 4, TypeName = "decimal")]
        [Display(Name = "Hours")]
        public decimal? Hours { get; set; } // Hours

        [Column(@"UnitType", Order = 5, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Unit type")]
        public string UnitType { get; set; } // UnitType (length: 5)

        [Column(@"Units", Order = 6, TypeName = "decimal")]
        [Display(Name = "Units")]
        public decimal? Units { get; set; } // Units

        [Column(@"Source", Order = 7, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Source")]
        public string Source { get; set; } // Source (length: 10)

        [Column(@"Created", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Modified", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; } // Modified
    }

    // Condition
    [Table("Condition", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Condition
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ConditionID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Condition", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Condition ID")]
        public decimal ConditionId { get; set; } // ConditionID (Primary key)

        [Column(@"Condition", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition_ { get; set; } // Condition (length: 5)
    }

    // ContactType
    [Table("ContactType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ContactType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ContactTypeID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_ContactType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Contact type ID")]
        public decimal ContactTypeId { get; set; } // ContactTypeID (Primary key)

        [Column(@"ContactType", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Contact type")]
        public string ContactType_ { get; set; } // ContactType (length: 30)

        // Reverse navigation

        /// <summary>
        /// Child CompanyContactInfoes where [CompanyContactInfo].[ContactTypeID] point to this entity (FK_CompanyContact_ContactType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CompanyContactInfo> CompanyContactInfoes { get; set; } // CompanyContactInfo.FK_CompanyContact_ContactType

        public ContactType()
        {
            CompanyContactInfoes = new ObservableCollection<CompanyContactInfo>();
        }
    }

    // DeletedOrders
    [Table("DeletedOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeletedOrder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"DeletedOrdersID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_DeletedOrders", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Deleted orders ID")]
        public decimal DeletedOrdersId { get; set; } // DeletedOrdersID (Primary key)

        [Column(@"OrderID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [Column(@"OrderNumber", Order = 3, TypeName = "numeric")]
        [Index(@"DeletedOrdersOrderNumberIdx", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 4, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipperID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Shipper ID")]
        public decimal? ShipperId { get; set; } // ShipperID

        [Column(@"Consignor", Order = 6, TypeName = "numeric")]
        [Display(Name = "Consignor")]
        public decimal? Consignor { get; set; } // Consignor

        [Column(@"Consignee", Order = 7, TypeName = "numeric")]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // Consignee

        [Column(@"ShipperShipDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"ShipperDeliveryDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper delivery date")]
        public System.DateTime? ShipperDeliveryDate { get; set; } // ShipperDeliveryDate

        [Column(@"PlannedShipDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [Column(@"PlannedDeliveryDate", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"ActualDeliveryDate", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual delivery date")]
        public System.DateTime? ActualDeliveryDate { get; set; } // ActualDeliveryDate

        [Column(@"TotalOrderWeight", Order = 14, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"TotalOrderCube", Order = 15, TypeName = "numeric")]
        [Display(Name = "Total order cube")]
        public decimal? TotalOrderCube { get; set; } // TotalOrderCube

        [Column(@"TotalOrderPieces", Order = 16, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderPallets", Order = 17, TypeName = "numeric")]
        [Display(Name = "Total order pallets")]
        public decimal? TotalOrderPallets { get; set; } // TotalOrderPallets

        [Column(@"Status", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 19, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 10)

        [Column(@"PO_Number", Order = 20, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"CreateDate", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"UpdateOrderDate", Order = 22, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update order date")]
        public System.DateTime? UpdateOrderDate { get; set; } // UpdateOrderDate

        [Column(@"Notes", Order = 23, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 24, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"ServiceLevel", Order = 25, TypeName = "int")]
        [Display(Name = "Service level")]
        public int? ServiceLevel { get; set; } // ServiceLevel

        [Column(@"DeletedByUser", Order = 26, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted by user")]
        public bool DeletedByUser { get; set; } // DeletedByUser

        [Column(@"Batch_No", Order = 27, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Batch no")]
        public string BatchNo { get; set; } // Batch_No (length: 10)

        public DeletedOrder()
        {
            DeletedByUser = false;
        }
    }

    // Department
    [Table("Department", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Department
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"DepartmentID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Department", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Department ID")]
        public decimal DepartmentId { get; set; } // DepartmentID (Primary key)

        [Column(@"Department", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Department")]
        public string Department_ { get; set; } // Department (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeDepartments where [Employee_Department].[DepartmentID] point to this entity (FK_Employee_Department_Department)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeeDepartment> EmployeeDepartments { get; set; } // Employee_Department.FK_Employee_Department_Department

        public Department()
        {
            EmployeeDepartments = new ObservableCollection<EmployeeDepartment>();
        }
    }

    // dtproperties
    [Table("dtproperties", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Dtproperty
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"id", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // id (Primary key)

        [Column(@"objectid", Order = 2, TypeName = "int")]
        [Display(Name = "Objectid")]
        public int? Objectid { get; set; } // objectid

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"property", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(64)]
        [StringLength(64)]
        [Key]
        [Display(Name = "Property")]
        public string Property { get; set; } // property (Primary key) (length: 64)

        [Column(@"value", Order = 4, TypeName = "varchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Value")]
        public string Value { get; set; } // value (length: 255)

        [Column(@"uvalue", Order = 5, TypeName = "nvarchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Uvalue")]
        public string Uvalue { get; set; } // uvalue (length: 255)

        [Column(@"lvalue", Order = 6, TypeName = "image")]
        [MaxLength(2147483647)]
        [Display(Name = "Lvalue")]
        public byte[] Lvalue { get; set; } // lvalue (length: 2147483647)

        [Column(@"version", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Version")]
        public int Version { get; set; } // version

        public Dtproperty()
        {
            Version = 0;
        }
    }

    // edi214
    [Table("edi214", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Edi214
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"214ID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "214 Id")]
        public int C214Id { get; set; } // 214ID (Primary key)

        [Column(@"TransactionID", Order = 2, TypeName = "int")]
        [Display(Name = "Transaction ID")]
        public int? TransactionId { get; set; } // TransactionID

        [Column(@"B10_Ref", Order = 3, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "B 10 ref")]
        public string B10Ref { get; set; } // B10_Ref (length: 20)

        [Column(@"B10_ShipId", Order = 4, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "B 10 ship ID")]
        public string B10ShipId { get; set; } // B10_ShipId (length: 20)

        [Column(@"B10_Scac", Order = 5, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "B 10 scac")]
        public string B10Scac { get; set; } // B10_Scac (length: 4)

        [Column(@"L11_Po", Order = 6, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "L 11 po")]
        public string L11Po { get; set; } // L11_Po (length: 30)

        [Column(@"L11_Ma", Order = 7, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "L 11 ma")]
        public string L11Ma { get; set; } // L11_Ma (length: 30)

        [Column(@"N1_Sf_Name", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "N 1 sf name")]
        public string N1SfName { get; set; } // N1_Sf_Name (length: 50)

        [Column(@"N1_Sf_Qual", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "N 1 sf qual")]
        public string N1SfQual { get; set; } // N1_Sf_Qual (length: 2)

        [Column(@"N1_Sf_Ref", Order = 10, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "N 1 sf ref")]
        public string N1SfRef { get; set; } // N1_Sf_Ref (length: 20)

        [Column(@"N1_Sh_Name", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "N 1 sh name")]
        public string N1ShName { get; set; } // N1_Sh_Name (length: 50)

        [Column(@"N3_Sh_Addr1", Order = 12, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "N 3 sh addr 1")]
        public string N3ShAddr1 { get; set; } // N3_Sh_Addr1 (length: 50)

        [Column(@"N4_Sh_City", Order = 13, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "N 4 sh city")]
        public string N4ShCity { get; set; } // N4_Sh_City (length: 30)

        [Column(@"N4_Sh_St", Order = 14, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "N 4 sh st")]
        public string N4ShSt { get; set; } // N4_Sh_St (length: 2)

        [Column(@"N4_Sh_Zip", Order = 15, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "N 4 sh zip")]
        public string N4ShZip { get; set; } // N4_Sh_Zip (length: 10)

        [Column(@"N1_Cn_Name", Order = 16, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "N 1 cn name")]
        public string N1CnName { get; set; } // N1_Cn_Name (length: 50)

        [Column(@"At7_Xa_Date", Order = 17, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 xa date")]
        public string At7XaDate { get; set; } // At7_Xa_Date (length: 8)

        [Column(@"At7_Xa_Time", Order = 18, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 xa time")]
        public string At7XaTime { get; set; } // At7_Xa_Time (length: 4)

        [Column(@"At7_Aa_Date", Order = 19, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 aa date")]
        public string At7AaDate { get; set; } // At7_Aa_Date (length: 8)

        [Column(@"At7_Aa_Time", Order = 20, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 aa time")]
        public string At7AaTime { get; set; } // At7_Aa_Time (length: 4)

        [Column(@"At7_X9_Date", Order = 21, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 x 9 date")]
        public string At7X9Date { get; set; } // At7_X9_Date (length: 8)

        [Column(@"At7_X9_Time", Order = 22, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 x 9 time")]
        public string At7X9Time { get; set; } // At7_X9_Time (length: 4)

        [Column(@"At7_Ab_Date", Order = 23, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 ab date")]
        public string At7AbDate { get; set; } // At7_Ab_Date (length: 8)

        [Column(@"At7_Ab_Time", Order = 24, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 ab time")]
        public string At7AbTime { get; set; } // At7_Ab_Time (length: 4)

        [Column(@"At7_X3_Date", Order = 25, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 x 3 date")]
        public string At7X3Date { get; set; } // At7_X3_Date (length: 8)

        [Column(@"At7_X3_Time", Order = 26, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 x 3 time")]
        public string At7X3Time { get; set; } // At7_X3_Time (length: 4)

        [Column(@"At7_Af_Date", Order = 27, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 af date")]
        public string At7AfDate { get; set; } // At7_Af_Date (length: 8)

        [Column(@"At7_Af_Time", Order = 28, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 af time")]
        public string At7AfTime { get; set; } // At7_Af_Time (length: 4)

        [Column(@"At7_X1_Date", Order = 29, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 x 1 date")]
        public string At7X1Date { get; set; } // At7_X1_Date (length: 8)

        [Column(@"At7_X1_Time", Order = 30, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 x 1 time")]
        public string At7X1Time { get; set; } // At7_X1_Time (length: 4)

        [Column(@"At7_D1_Date", Order = 31, TypeName = "char")]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "At 7 d 1 date")]
        public string At7D1Date { get; set; } // At7_D1_Date (length: 8)

        [Column(@"At7_D1_Time", Order = 32, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "At 7 d 1 time")]
        public string At7D1Time { get; set; } // At7_D1_Time (length: 4)
    }

    // ediFa
    [Table("ediFa", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiFa
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FaID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Fa ID")]
        public int FaId { get; set; } // FaID (Primary key)

        [Column(@"GroupID", Order = 2, TypeName = "int")]
        [Display(Name = "Group ID")]
        public int? GroupId { get; set; } // GroupID

        [Column(@"IsaControl", Order = 3, TypeName = "int")]
        [Display(Name = "Isa control")]
        public int? IsaControl { get; set; } // IsaControl

        [Column(@"GsControl", Order = 4, TypeName = "int")]
        [Display(Name = "Gs control")]
        public int? GsControl { get; set; } // GsControl

        [Column(@"DirectionIn", Order = 5, TypeName = "bit")]
        [Display(Name = "Direction in")]
        public bool? DirectionIn { get; set; } // DirectionIn

        [Column(@"EnterDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Enter date")]
        public System.DateTime? EnterDate { get; set; } // EnterDate

        public EdiFa()
        {
            EnterDate = System.DateTime.Now;
        }
    }

    // ediGroup
    [Table("ediGroup", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiGroup
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"GroupID", Order = 1, TypeName = "int")]
        [Index(@"PK_ediGroup", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Group ID")]
        public int GroupId { get; set; } // GroupID (Primary key)

        [Column(@"IsaSendQual", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Isa send qual")]
        public string IsaSendQual { get; set; } // IsaSendQual (length: 2)

        [Column(@"IsaSendID", Order = 3, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Isa send ID")]
        public string IsaSendId { get; set; } // IsaSendID (length: 15)

        [Column(@"IsaRecvQual", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Isa recv qual")]
        public string IsaRecvQual { get; set; } // IsaRecvQual (length: 2)

        [Column(@"IsaRecvID", Order = 5, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Isa recv ID")]
        public string IsaRecvId { get; set; } // IsaRecvID (length: 15)

        [Column(@"IsaDate", Order = 6, TypeName = "smalldatetime")]
        [Display(Name = "Isa date")]
        public System.DateTime? IsaDate { get; set; } // IsaDate

        [Column(@"IsaControl", Order = 7, TypeName = "int")]
        [Display(Name = "Isa control")]
        public int? IsaControl { get; set; } // IsaControl

        [Column(@"IsaAck", Order = 8, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Isa ack")]
        public string IsaAck { get; set; } // IsaAck (length: 1)

        [Column(@"IsaUsage", Order = 9, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Isa usage")]
        public string IsaUsage { get; set; } // IsaUsage (length: 1)

        [Column(@"GsCode", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Gs code")]
        public string GsCode { get; set; } // GsCode (length: 2)

        [Column(@"GsSendID", Order = 11, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Gs send ID")]
        public string GsSendId { get; set; } // GsSendID (length: 15)

        [Column(@"GsRecvID", Order = 12, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Gs recv ID")]
        public string GsRecvId { get; set; } // GsRecvID (length: 15)

        [Column(@"GsDate", Order = 13, TypeName = "smalldatetime")]
        [Display(Name = "Gs date")]
        public System.DateTime? GsDate { get; set; } // GsDate

        [Column(@"GsControl", Order = 14, TypeName = "int")]
        [Display(Name = "Gs control")]
        public int? GsControl { get; set; } // GsControl

        [Column(@"TsCountGe", Order = 15, TypeName = "int")]
        [Display(Name = "Ts count ge")]
        public int? TsCountGe { get; set; } // TsCountGe

        [Column(@"TsCountActual", Order = 16, TypeName = "int")]
        [Display(Name = "Ts count actual")]
        public int? TsCountActual { get; set; } // TsCountActual

        [Column(@"TsCountAck", Order = 17, TypeName = "int")]
        [Display(Name = "Ts count ack")]
        public int? TsCountAck { get; set; } // TsCountAck

        [Column(@"AckCode", Order = 18, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Ack code")]
        public string AckCode { get; set; } // AckCode (length: 1)

        [Column(@"DirectionIn", Order = 19, TypeName = "bit")]
        [Display(Name = "Direction in")]
        public bool? DirectionIn { get; set; } // DirectionIn

        [Column(@"EnterDate", Order = 20, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Enter date")]
        public System.DateTime? EnterDate { get; set; } // EnterDate

        // Reverse navigation

        /// <summary>
        /// Child EdiTransactions where [ediTransaction].[GroupID] point to this entity (FK_ediTransaction_ediGroup)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EdiTransaction> EdiTransactions { get; set; } // ediTransaction.FK_ediTransaction_ediGroup

        public EdiGroup()
        {
            EnterDate = System.DateTime.Now;
            EdiTransactions = new ObservableCollection<EdiTransaction>();
        }
    }

    // ediTransaction
    [Table("ediTransaction", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiTransaction
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TransactionID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Transaction ID")]
        public int TransactionId { get; set; } // TransactionID (Primary key)

        [Column(@"GroupID", Order = 2, TypeName = "int")]
        [Display(Name = "Group ID")]
        public int? GroupId { get; set; } // GroupID

        [Column(@"StCode", Order = 3, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "St code")]
        public string StCode { get; set; } // StCode (length: 3)

        [Column(@"StControl", Order = 4, TypeName = "int")]
        [Display(Name = "St control")]
        public int? StControl { get; set; } // StControl

        [Column(@"SegCountSe", Order = 5, TypeName = "int")]
        [Display(Name = "Seg count se")]
        public int? SegCountSe { get; set; } // SegCountSe

        [Column(@"SegCountActual", Order = 6, TypeName = "int")]
        [Display(Name = "Seg count actual")]
        public int? SegCountActual { get; set; } // SegCountActual

        [Column(@"AckCode", Order = 7, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Ack code")]
        public string AckCode { get; set; } // AckCode (length: 1)

        [Column(@"EnterDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Enter date")]
        public System.DateTime? EnterDate { get; set; } // EnterDate

        [Column(@"Ref1", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Ref 1")]
        public string Ref1 { get; set; } // Ref1 (length: 10)

        [Column(@"Ref2", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Ref 2")]
        public string Ref2 { get; set; } // Ref2 (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent EdiGroup pointed by [ediTransaction].([GroupId]) (FK_ediTransaction_ediGroup)
        /// </summary>
        [ForeignKey("GroupId")] public virtual EdiGroup EdiGroup { get; set; } // FK_ediTransaction_ediGroup

        public EdiTransaction()
        {
            EnterDate = System.DateTime.Now;
        }
    }

    // The table 'ELparts' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // ELparts
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ELpart
    {
        [Column(@"barcode", Order = 1, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // barcode (length: 15)

        [Column(@"itemcode", Order = 2, TypeName = "char")]
        [MaxLength(11)]
        [StringLength(11)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // itemcode (length: 11)
    }

    // Employee
    [Table("Employee", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Employee", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID (Primary key)

        [Column(@"SurName", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Sur name")]
        public string SurName { get; set; } // SurName (length: 10)

        [Column(@"FirstName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 50)

        [Column(@"MiddleName", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // MiddleName (length: 50)

        [Column(@"LastName", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 50)

        [Column(@"SuffixName", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Suffix name")]
        public string SuffixName { get; set; } // SuffixName (length: 50)

        [Column(@"LisActive", Order = 7, TypeName = "bit")]
        [Display(Name = "Lis active")]
        public bool? LisActive { get; set; } // LisActive

        [Column(@"HireDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Hire date")]
        public System.DateTime? HireDate { get; set; } // HireDate

        [Column(@"Email", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 50)

        [Column(@"Ref1", Order = 10, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ref 1")]
        public string Ref1 { get; set; } // Ref1 (length: 50)

        [Column(@"Ref2", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ref 2")]
        public string Ref2 { get; set; } // Ref2 (length: 50)

        [Column(@"Active", Order = 12, TypeName = "bit")]
        [Display(Name = "Active")]
        public bool? Active { get; set; } // Active

        [Column(@"Ref3", Order = 13, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ref 3")]
        public string Ref3 { get; set; } // Ref3 (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child EmployeeDepartments where [Employee_Department].[EmployeeID] point to this entity (FK_Employee_Department_Employee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeeDepartment> EmployeeDepartments { get; set; } // Employee_Department.FK_Employee_Department_Employee
        /// <summary>
        /// Child EmployeeProductivities where [Employee_Productivity].[EmployeeID] point to this entity (FK_Employee_Productivity_Employee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeeProductivity> EmployeeProductivities { get; set; } // Employee_Productivity.FK_Employee_Productivity_Employee
        /// <summary>
        /// Child RunResources where [RunResource].[Driver1] point to this entity (FK_RunResource_Employee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources_Driver1 { get; set; } // RunResource.FK_RunResource_Employee
        /// <summary>
        /// Child RunResources where [RunResource].[Driver2] point to this entity (FK_RunResource_Employee1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources_Driver2 { get; set; } // RunResource.FK_RunResource_Employee1
        /// <summary>
        /// Child WorkAssignments where [WorkAssignment].[EmployeeId] point to this entity (FK_WorkAssignment_WorkAssignment)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<WorkAssignment> WorkAssignments { get; set; } // WorkAssignment.FK_WorkAssignment_WorkAssignment

        public Employee()
        {
            EmployeeDepartments = new ObservableCollection<EmployeeDepartment>();
            EmployeeProductivities = new ObservableCollection<EmployeeProductivity>();
            RunResources_Driver1 = new ObservableCollection<RunResource>();
            RunResources_Driver2 = new ObservableCollection<RunResource>();
            WorkAssignments = new ObservableCollection<WorkAssignment>();
        }
    }

    // Employee_Calendar
    [Table("Employee_Calendar", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeCalendar
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Employee_CalendarID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Employee_Off", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee calendar ID")]
        public decimal EmployeeCalendarId { get; set; } // Employee_CalendarID (Primary key)

        [Column(@"EmployeeID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"DateFrom", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date from")]
        public System.DateTime? DateFrom { get; set; } // DateFrom

        [Column(@"DateTo", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date to")]
        public System.DateTime? DateTo { get; set; } // DateTo

        [Column(@"Employee_InActive_Reason_ListID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Employee in active reason list ID")]
        public decimal? EmployeeInActiveReasonListId { get; set; } // Employee_InActive_Reason_ListID
    }

    // Employee_Department
    [Table("Employee_Department", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeDepartment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Employee_DepartmentID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Employee_Department", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee department ID")]
        public decimal EmployeeDepartmentId { get; set; } // Employee_DepartmentID (Primary key)

        [Column(@"EmployeeID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"DepartmentID", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Department ID")]
        public decimal DepartmentId { get; set; } // DepartmentID

        // Foreign keys

        /// <summary>
        /// Parent Department pointed by [Employee_Department].([DepartmentId]) (FK_Employee_Department_Department)
        /// </summary>
        [ForeignKey("DepartmentId"), Required] public virtual Department Department { get; set; } // FK_Employee_Department_Department

        /// <summary>
        /// Parent Employee pointed by [Employee_Department].([EmployeeId]) (FK_Employee_Department_Employee)
        /// </summary>
        [ForeignKey("EmployeeId"), Required] public virtual Employee Employee { get; set; } // FK_Employee_Department_Employee
    }

    // Employee_InActive_Reason_List
    [Table("Employee_InActive_Reason_List", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeInActiveReasonList
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Employee_Inactive_Reason_ListID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Off_Reason", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee inactive reason list ID")]
        public decimal EmployeeInactiveReasonListId { get; set; } // Employee_Inactive_Reason_ListID (Primary key)

        [Column(@"InActive_Reason", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "In active reason")]
        public string InActiveReason { get; set; } // InActive_Reason (length: 50)

        [Column(@"lisNotActive", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis not active")]
        public bool LisNotActive { get; set; } // lisNotActive

        // Reverse navigation

        /// <summary>
        /// Child EmployeeProductivities where [Employee_Productivity].[Employee_Inactive_ReasonID] point to this entity (FK_Employee_Productivity_Employee_InActive_Reason_List)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeeProductivity> EmployeeProductivities { get; set; } // Employee_Productivity.FK_Employee_Productivity_Employee_InActive_Reason_List

        public EmployeeInActiveReasonList()
        {
            LisNotActive = false;
            EmployeeProductivities = new ObservableCollection<EmployeeProductivity>();
        }
    }

    // Employee_Productivity
    [Table("Employee_Productivity", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeProductivity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Employee_ProductivityID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Employee_Productivity", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee productivity ID")]
        public decimal EmployeeProductivityId { get; set; } // Employee_ProductivityID (Primary key)

        [Column(@"EmployeeID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"Employee_Date", Order = 3, TypeName = "datetime")]
        [Index(@"IX_Employee_Date", 1, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Employee date")]
        public System.DateTime? EmployeeDate { get; set; } // Employee_Date

        [Column(@"Status", Order = 4, TypeName = "numeric")]
        [Display(Name = "Status")]
        public decimal? Status { get; set; } // Status

        [Column(@"Employee_Inactive_ReasonID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Employee inactive reason ID")]
        public decimal? EmployeeInactiveReasonId { get; set; } // Employee_Inactive_ReasonID

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Employee_Productivity].([EmployeeId]) (FK_Employee_Productivity_Employee)
        /// </summary>
        [ForeignKey("EmployeeId"), Required] public virtual Employee Employee { get; set; } // FK_Employee_Productivity_Employee

        /// <summary>
        /// Parent EmployeeInActiveReasonList pointed by [Employee_Productivity].([EmployeeInactiveReasonId]) (FK_Employee_Productivity_Employee_InActive_Reason_List)
        /// </summary>
        [ForeignKey("EmployeeInactiveReasonId")] public virtual EmployeeInActiveReasonList EmployeeInActiveReasonList { get; set; } // FK_Employee_Productivity_Employee_InActive_Reason_List
    }

    // EmployeeTime
    [Table("EmployeeTime", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeTime
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TimeId", Order = 1, TypeName = "int")]
        [Index(@"PK_EmployeeTime", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Time ID")]
        public int TimeId { get; set; } // TimeId (Primary key)

        [Column(@"EmployeeId", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Employee ID")]
        public string EmployeeId { get; set; } // EmployeeId (length: 50)

        [Column(@"WorkDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [Column(@"InTime", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "In time")]
        public string InTime { get; set; } // InTime (length: 50)

        [Column(@"OutTime", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Out time")]
        public string OutTime { get; set; } // OutTime (length: 50)

        [Column(@"InCode", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "In code")]
        public string InCode { get; set; } // InCode (length: 50)

        [Column(@"OutCode", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Out code")]
        public string OutCode { get; set; } // OutCode (length: 50)

        [Column(@"InMod", Order = 8, TypeName = "bit")]
        [Display(Name = "In mod")]
        public bool? InMod { get; set; } // InMod

        [Column(@"OutMod", Order = 9, TypeName = "bit")]
        [Display(Name = "Out mod")]
        public bool? OutMod { get; set; } // OutMod

        [Column(@"RegHour", Order = 10, TypeName = "decimal")]
        [Display(Name = "Reg hour")]
        public decimal? RegHour { get; set; } // RegHour

        [Column(@"OverTime1", Order = 11, TypeName = "decimal")]
        [Display(Name = "Over time 1")]
        public decimal? OverTime1 { get; set; } // OverTime1

        [Column(@"OverTime2", Order = 12, TypeName = "decimal")]
        [Display(Name = "Over time 2")]
        public decimal? OverTime2 { get; set; } // OverTime2

        [Column(@"JobId", Order = 13, TypeName = "int")]
        [Display(Name = "Job ID")]
        public int? JobId { get; set; } // JobId

        [Column(@"Deleted", Order = 14, TypeName = "bit")]
        [Display(Name = "Deleted")]
        public bool? Deleted { get; set; } // Deleted

        [Column(@"Shift", Order = 15, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Shift")]
        public string Shift { get; set; } // Shift (length: 50)

        [Column(@"EventDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Event date")]
        public System.DateTime? EventDate { get; set; } // EventDate
    }

    // EquipmentChecklistResponse
    [Table("EquipmentChecklistResponse", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentChecklistResponse
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EquipmentChecklistResponseId", Order = 1, TypeName = "int")]
        [Index(@"PK_EquipmentChecklistResponse", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Equipment checklist response ID")]
        public int EquipmentChecklistResponseId { get; set; } // EquipmentChecklistResponseId (Primary key)

        [Column(@"EquipmentClassHeaderId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Equipment class header ID")]
        public int EquipmentClassHeaderId { get; set; } // EquipmentClassHeaderId

        [Column(@"RunNumberId", Order = 3, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberId

        [Column(@"EmployeeId", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId

        [Column(@"EquipmentDetailId", Order = 5, TypeName = "int")]
        [Display(Name = "Equipment detail ID")]
        public int? EquipmentDetailId { get; set; } // EquipmentDetailId

        [Column(@"Comment", Order = 6, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Comment")]
        public string Comment { get; set; } // Comment (length: 500)

        [Column(@"CreateOnDate", Order = 7, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create on date")]
        public System.DateTime CreateOnDate { get; set; } // CreateOnDate

        [Column(@"IsDeleted", Order = 8, TypeName = "bit")]
        [Required]
        [Display(Name = "Is deleted")]
        public bool IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent EquipmentClassHeader pointed by [EquipmentChecklistResponse].([EquipmentClassHeaderId]) (FK_EquipmentChecklistResponse_EquipmentClassHeader)
        /// </summary>
        [ForeignKey("EquipmentClassHeaderId"), Required] public virtual EquipmentClassHeader EquipmentClassHeader { get; set; } // FK_EquipmentChecklistResponse_EquipmentClassHeader

        /// <summary>
        /// Parent EquipmentDetail pointed by [EquipmentChecklistResponse].([EquipmentDetailId]) (FK_EquipmentChecklistResponse_EquipmentDetail)
        /// </summary>
        [ForeignKey("EquipmentDetailId")] public virtual EquipmentDetail EquipmentDetail { get; set; } // FK_EquipmentChecklistResponse_EquipmentDetail

        public EquipmentChecklistResponse()
        {
            IsDeleted = false;
        }
    }

    // EquipmentClassHeader
    [Table("EquipmentClassHeader", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentClassHeader
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EquipmentClassHeaderId", Order = 1, TypeName = "int")]
        [Index(@"PK_EquipmentClassHeader", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Equipment class header ID")]
        public int EquipmentClassHeaderId { get; set; } // EquipmentClassHeaderId (Primary key)

        [Column(@"EquipmentClassDescription", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Equipment class description")]
        public string EquipmentClassDescription { get; set; } // EquipmentClassDescription (length: 500)

        [Column(@"IsActive", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Is active")]
        public bool IsActive { get; set; } // IsActive

        [Column(@"IsComments", Order = 4, TypeName = "bit")]
        [Required]
        [Display(Name = "Is comments")]
        public bool IsComments { get; set; } // IsComments

        // Reverse navigation

        /// <summary>
        /// Child EquipmentChecklistResponses where [EquipmentChecklistResponse].[EquipmentClassHeaderId] point to this entity (FK_EquipmentChecklistResponse_EquipmentClassHeader)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EquipmentChecklistResponse> EquipmentChecklistResponses { get; set; } // EquipmentChecklistResponse.FK_EquipmentChecklistResponse_EquipmentClassHeader
        /// <summary>
        /// Child EquipmentDetails where [EquipmentDetail].[EquipmentClassHeaderId] point to this entity (FK_EquipmentDetail_EquipmentClassHeader)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EquipmentDetail> EquipmentDetails { get; set; } // EquipmentDetail.FK_EquipmentDetail_EquipmentClassHeader

        public EquipmentClassHeader()
        {
            EquipmentChecklistResponses = new ObservableCollection<EquipmentChecklistResponse>();
            EquipmentDetails = new ObservableCollection<EquipmentDetail>();
        }
    }

    // EquipmentDetail
    [Table("EquipmentDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EquipmentDetailId", Order = 1, TypeName = "int")]
        [Index(@"PK_EquipmentDetail", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Equipment detail ID")]
        public int EquipmentDetailId { get; set; } // EquipmentDetailId (Primary key)

        [Column(@"EquipmentClassHeaderId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Equipment class header ID")]
        public int EquipmentClassHeaderId { get; set; } // EquipmentClassHeaderId

        [Column(@"Description", Order = 3, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"SerialNo", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Serial no")]
        public string SerialNo { get; set; } // SerialNo (length: 100)

        [Column(@"EquipmentNo", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Equipment no")]
        public string EquipmentNo { get; set; } // EquipmentNo (length: 100)

        [Column(@"InServiceDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "In service date")]
        public System.DateTime? InServiceDate { get; set; } // InServiceDate

        [Column(@"OutOfServiceDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Out of service date")]
        public System.DateTime? OutOfServiceDate { get; set; } // OutOfServiceDate

        [Column(@"IsActive", Order = 8, TypeName = "bit")]
        [Required]
        [Display(Name = "Is active")]
        public bool IsActive { get; set; } // IsActive

        // Reverse navigation

        /// <summary>
        /// Child EquipmentChecklistResponses where [EquipmentChecklistResponse].[EquipmentDetailId] point to this entity (FK_EquipmentChecklistResponse_EquipmentDetail)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EquipmentChecklistResponse> EquipmentChecklistResponses { get; set; } // EquipmentChecklistResponse.FK_EquipmentChecklistResponse_EquipmentDetail

        // Foreign keys

        /// <summary>
        /// Parent EquipmentClassHeader pointed by [EquipmentDetail].([EquipmentClassHeaderId]) (FK_EquipmentDetail_EquipmentClassHeader)
        /// </summary>
        [ForeignKey("EquipmentClassHeaderId"), Required] public virtual EquipmentClassHeader EquipmentClassHeader { get; set; } // FK_EquipmentDetail_EquipmentClassHeader

        public EquipmentDetail()
        {
            EquipmentChecklistResponses = new ObservableCollection<EquipmentChecklistResponse>();
        }
    }

    // ExceptionLog
    [Table("ExceptionLog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExceptionLog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExceptionLogId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExceptionLog", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Exception log ID")]
        public int ExceptionLogId { get; set; } // ExceptionLogId (Primary key)

        [Column(@"LogDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Log date")]
        public System.DateTime? LogDate { get; set; } // LogDate

        [Column(@"UserId", Order = 3, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"ScannerId", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Scanner ID")]
        public string ScannerId { get; set; } // ScannerId (length: 50)

        [Column(@"MsgSource", Order = 5, TypeName = "varchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Msg source")]
        public string MsgSource { get; set; } // MsgSource (length: 255)

        [Column(@"MsgType", Order = 6, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Msg type")]
        public string MsgType { get; set; } // MsgType (length: 25)

        [Column(@"MsgText", Order = 7, TypeName = "text")]
        [MaxLength(2147483647)]
        [StringLength(2147483647)]
        [Display(Name = "Msg text")]
        public string MsgText { get; set; } // MsgText (length: 2147483647)
    }

    // Flag
    [Table("Flag", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Flag
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FlagID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Flag", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Flag ID")]
        public decimal FlagId { get; set; } // FlagID (Primary key)

        [Column(@"HostOrders", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Host orders")]
        public string HostOrders { get; set; } // HostOrders (length: 10)

        [Column(@"ProcessedOrders", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Processed orders")]
        public string ProcessedOrders { get; set; } // ProcessedOrders (length: 10)

        [Column(@"CountOrders", Order = 4, TypeName = "int")]
        [Display(Name = "Count orders")]
        public int? CountOrders { get; set; } // CountOrders

        // Reverse navigation

        /// <summary>
        /// Child NewOrders where [NewOrders].[FlagID] point to this entity (FK_NewOrders_Flag)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NewOrder> NewOrders { get; set; } // NewOrders.FK_NewOrders_Flag
        /// <summary>
        /// Child NewOrderDetails where [NewOrderDetail].[FlagID] point to this entity (FK_NewOrderDetail_Flag)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NewOrderDetail> NewOrderDetails { get; set; } // NewOrderDetail.FK_NewOrderDetail_Flag

        public Flag()
        {
            NewOrderDetails = new ObservableCollection<NewOrderDetail>();
            NewOrders = new ObservableCollection<NewOrder>();
        }
    }

    // GPSLocation
    [Table("GPSLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GpsLocation
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"GPSLocationId", Order = 1, TypeName = "int")]
        [Index(@"PK_GPSLocation", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Gpsl ocation ID")]
        public int GpsLocationId { get; set; } // GPSLocationId (Primary key)

        [Column(@"EmployeeId", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId

        [Column(@"Longitude", Order = 3, TypeName = "decimal")]
        [Required]
        [Display(Name = "Longitude")]
        public decimal Longitude { get; set; } // Longitude

        [Column(@"Latitude", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Latitude")]
        public decimal Latitude { get; set; } // Latitude

        [Column(@"CreateDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime CreateDate { get; set; } // CreateDate

        [Column(@"CreatedDatetime", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"IOSVersion", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Iosv ersion")]
        public string IosVersion { get; set; } // IOSVersion (length: 50)

        public GpsLocation()
        {
            CreatedDatetime = System.DateTime.Now;
            IosVersion = "";
        }
    }

    // IdList
    [Table("IdList", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IdList
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Id", Order = 1, TypeName = "numeric")]
        [Index(@"PK__IdList__3214EC07CDD47176", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public decimal Id { get; set; } // Id (Primary key)
    }

    // ImportedWarehouseWeight
    [Table("ImportedWarehouseWeight", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImportedWarehouseWeight
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK__ImportedWarehous__2F1AED73", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"WorkDate", Order = 2, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime WorkDate { get; set; } // WorkDate

        [Column(@"EmployeeId", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Employee ID")]
        public int EmployeeId { get; set; } // EmployeeId

        [Column(@"JobId", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Job ID")]
        public int JobId { get; set; } // JobId

        [Column(@"Weight", Order = 5, TypeName = "decimal")]
        [Required]
        [Display(Name = "Weight")]
        public decimal Weight { get; set; } // Weight
    }

    // InboundCondition
    [Table("InboundCondition", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundCondition
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ConditionId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundCondition", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Condition ID")]
        public int ConditionId { get; set; } // ConditionId (Primary key)

        [Column(@"ConditionDescription", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Condition description")]
        public string ConditionDescription { get; set; } // ConditionDescription (length: 255)
    }

    // InboundException
    [Table("InboundException", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundException
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExceptionId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Exception ID")]
        public int ExceptionId { get; set; } // ExceptionId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundException", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId (Primary key)

        [Column(@"NumPieces", Order = 3, TypeName = "int")]
        [Display(Name = "Num pieces")]
        public int? NumPieces { get; set; } // NumPieces

        [Column(@"DistanceInTrailer", Order = 4, TypeName = "int")]
        [Display(Name = "Distance in trailer")]
        public int? DistanceInTrailer { get; set; } // DistanceInTrailer

        [Column(@"VerticalLocationId", Order = 5, TypeName = "int")]
        [Display(Name = "Vertical location ID")]
        public int? VerticalLocationId { get; set; } // VerticalLocationId

        [Column(@"HorizontalLocationId", Order = 6, TypeName = "int")]
        [Display(Name = "Horizontal location ID")]
        public int? HorizontalLocationId { get; set; } // HorizontalLocationId
    }

    // InboundException_Beta
    [Table("InboundException_Beta", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionBeta
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExceptionId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Exception ID")]
        public int ExceptionId { get; set; } // ExceptionId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletDetailId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundException_Beta", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet detail ID")]
        public int PalletDetailId { get; set; } // PalletDetailId (Primary key)

        [Column(@"NumPieces", Order = 3, TypeName = "int")]
        [Display(Name = "Num pieces")]
        public int? NumPieces { get; set; } // NumPieces

        [Column(@"DistanceInTrailer", Order = 4, TypeName = "int")]
        [Display(Name = "Distance in trailer")]
        public int? DistanceInTrailer { get; set; } // DistanceInTrailer

        [Column(@"VerticalLocationId", Order = 5, TypeName = "int")]
        [Display(Name = "Vertical location ID")]
        public int? VerticalLocationId { get; set; } // VerticalLocationId

        [Column(@"HorizontalLocationId", Order = 6, TypeName = "int")]
        [Display(Name = "Horizontal location ID")]
        public int? HorizontalLocationId { get; set; } // HorizontalLocationId
    }

    // InboundExceptionCondition
    [Table("InboundExceptionCondition", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionCondition
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ExceptionId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundExceptionCondition", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Exception ID")]
        public int ExceptionId { get; set; } // ExceptionId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConditionId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundExceptionCondition", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Condition ID")]
        public int ConditionId { get; set; } // ConditionId (Primary key)
    }

    // InboundExceptionCondition_Beta
    [Table("InboundExceptionCondition_Beta", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionConditionBeta
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ExceptionId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundExceptionCondition_Beta", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Exception ID")]
        public int ExceptionId { get; set; } // ExceptionId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConditionId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundExceptionCondition_Beta", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Condition ID")]
        public int ConditionId { get; set; } // ConditionId (Primary key)
    }

    // InboundLocation
    [Table("InboundLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundLocation
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LocationId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundLocation", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Location ID")]
        public int LocationId { get; set; } // LocationId (Primary key)

        [Column(@"LocationType", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Location type")]
        public string LocationType { get; set; } // LocationType (length: 1)

        [Column(@"LocationCode", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Location code")]
        public string LocationCode { get; set; } // LocationCode (length: 1)

        [Column(@"LocationDescription", Order = 4, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Location description")]
        public string LocationDescription { get; set; } // LocationDescription (length: 255)
    }

    // InboundLog
    [Table("InboundLog", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundLog
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"InboundLogId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundLog", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Inbound log ID")]
        public int InboundLogId { get; set; } // InboundLogId (Primary key)

        [Column(@"LogDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Log date")]
        public System.DateTime? LogDate { get; set; } // LogDate

        [Column(@"UserId", Order = 3, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"ScannerId", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Scanner ID")]
        public string ScannerId { get; set; } // ScannerId (length: 50)

        [Column(@"MsgSource", Order = 5, TypeName = "varchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Msg source")]
        public string MsgSource { get; set; } // MsgSource (length: 255)

        [Column(@"MsgType", Order = 6, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Msg type")]
        public string MsgType { get; set; } // MsgType (length: 25)

        [Column(@"MsgText", Order = 7, TypeName = "text")]
        [MaxLength(2147483647)]
        [StringLength(2147483647)]
        [Display(Name = "Msg text")]
        public string MsgText { get; set; } // MsgText (length: 2147483647)
    }

    // InboundPallet
    [Table("InboundPallet", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPallet
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PalletId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TrailerId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundPallet", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer ID")]
        public int TrailerId { get; set; } // TrailerId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletSeqNum", Order = 3, TypeName = "int")]
        [Index(@"PK_InboundPallet", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet seq num")]
        public int PalletSeqNum { get; set; } // PalletSeqNum (Primary key)

        [Column(@"LicensePlate", Order = 4, TypeName = "varchar")]
        [Index(@"InboundPalletLicensePlate", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "License plate")]
        public string LicensePlate { get; set; } // LicensePlate (length: 20)

        [Column(@"ItemCode", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 10)

        [Column(@"NumPieces", Order = 6, TypeName = "int")]
        [Display(Name = "Num pieces")]
        public int? NumPieces { get; set; } // NumPieces

        [Column(@"ManufactureDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Manufacture date")]
        public System.DateTime? ManufactureDate { get; set; } // ManufactureDate

        [Column(@"ManufactureYear", Order = 8, TypeName = "int")]
        [Display(Name = "Manufacture year")]
        public int? ManufactureYear { get; set; } // ManufactureYear

        [Column(@"ManufactureMonth", Order = 9, TypeName = "int")]
        [Display(Name = "Manufacture month")]
        public int? ManufactureMonth { get; set; } // ManufactureMonth

        [Column(@"ManufactureDay", Order = 10, TypeName = "int")]
        [Display(Name = "Manufacture day")]
        public int? ManufactureDay { get; set; } // ManufactureDay

        [Column(@"CustCode", Order = 11, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 10)

        [Column(@"BarCodeId", Order = 12, TypeName = "int")]
        [Display(Name = "Bar code ID")]
        public int? BarCodeId { get; set; } // BarCodeId

        [Column(@"UserId", Order = 13, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"ScanTime", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime
    }

    // InboundPallet_Beta
    [Table("InboundPallet_Beta", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPalletBeta
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PalletId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TrailerId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundPallet_Beta", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer ID")]
        public int TrailerId { get; set; } // TrailerId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletSeqNum", Order = 3, TypeName = "int")]
        [Index(@"PK_InboundPallet_Beta", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet seq num")]
        public int PalletSeqNum { get; set; } // PalletSeqNum (Primary key)

        [Column(@"LicensePlate", Order = 4, TypeName = "varchar")]
        [Index(@"InboundPalletLicensePlate_Beta", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "License plate")]
        public string LicensePlate { get; set; } // LicensePlate (length: 20)

        [Column(@"ManufactureDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Manufacture date")]
        public System.DateTime? ManufactureDate { get; set; } // ManufactureDate

        [Column(@"ManufactureYear", Order = 6, TypeName = "int")]
        [Display(Name = "Manufacture year")]
        public int? ManufactureYear { get; set; } // ManufactureYear

        [Column(@"ManufactureMonth", Order = 7, TypeName = "int")]
        [Display(Name = "Manufacture month")]
        public int? ManufactureMonth { get; set; } // ManufactureMonth

        [Column(@"ManufactureDay", Order = 8, TypeName = "int")]
        [Display(Name = "Manufacture day")]
        public int? ManufactureDay { get; set; } // ManufactureDay

        [Column(@"UserId", Order = 9, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId
    }

    // InboundPalletDetail_Beta
    [Table("InboundPalletDetail_Beta", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPalletDetailBeta
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PalletDetailId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Pallet detail ID")]
        public int PalletDetailId { get; set; } // PalletDetailId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletId", Order = 2, TypeName = "int")]
        [Index(@"PK_InboundPalletDetail_Beta", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ItemSeqNum", Order = 3, TypeName = "int")]
        [Index(@"PK_InboundPalletDetail_Beta", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Item seq num")]
        public int ItemSeqNum { get; set; } // ItemSeqNum (Primary key)

        [Column(@"ItemCode", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 10)

        [Column(@"NumPieces", Order = 5, TypeName = "int")]
        [Display(Name = "Num pieces")]
        public int? NumPieces { get; set; } // NumPieces

        [Column(@"CustCode", Order = 6, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"BarCodeId", Order = 7, TypeName = "int")]
        [Display(Name = "Bar code ID")]
        public int? BarCodeId { get; set; } // BarCodeId

        [Column(@"ScanTime", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime
    }

    // InboundSealDisposition
    [Table("InboundSealDisposition", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundSealDisposition
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SealDispositionId", Order = 1, TypeName = "int")]
        [Index(@"PK_InboundSealDisposition", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Seal disposition ID")]
        public int SealDispositionId { get; set; } // SealDispositionId (Primary key)

        [Column(@"Description", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 255)
    }

    // InboundTrailer
    [Table("InboundTrailer", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundTrailer
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TrailerId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Trailer ID")]
        public int TrailerId { get; set; } // TrailerId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"URNumber", Order = 2, TypeName = "varchar")]
        [Index(@"PK_InboundTrailer", 1, IsUnique = true, IsClustered = true)]
        [Index(@"InboundTrailerUnloadDate", 2, IsUnique = false, IsClustered = false)]
        [Index(@"InboundTrailerUserId", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Urn umber")]
        public string UrNumber { get; set; } // URNumber (Primary key) (length: 10)

        [Column(@"UnloadDate", Order = 3, TypeName = "datetime")]
        [Index(@"InboundTrailerUnloadDate", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Unload date")]
        public System.DateTime UnloadDate { get; set; } // UnloadDate

        [Column(@"CloseDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Close date")]
        public System.DateTime? CloseDate { get; set; } // CloseDate

        [Column(@"ReportPrinted", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Report printed")]
        public string ReportPrinted { get; set; } // ReportPrinted (length: 1)

        [Column(@"UnloadStatus", Order = 6, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Unload status")]
        public string UnloadStatus { get; set; } // UnloadStatus (length: 1)

        [Column(@"UserId", Order = 7, TypeName = "int")]
        [Index(@"InboundTrailerUserId", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"ReSealNumber", Order = 8, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Re seal number")]
        public string ReSealNumber { get; set; } // ReSealNumber (length: 20)

        [Column(@"SealNumber", Order = 9, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Seal number")]
        public string SealNumber { get; set; } // SealNumber (length: 20)

        [Column(@"SealDispositionID", Order = 10, TypeName = "int")]
        [Display(Name = "Seal disposition ID")]
        public int? SealDispositionId { get; set; } // SealDispositionID

        [Column(@"Dunnage", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Dunnage")]
        public string Dunnage { get; set; } // Dunnage (length: 1)
    }

    // InboundTrailer_Beta
    [Table("InboundTrailer_Beta", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundTrailerBeta
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TrailerId", Order = 1, TypeName = "int")]
        [Required]
        [Display(Name = "Trailer ID")]
        public int TrailerId { get; set; } // TrailerId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"URNumber", Order = 2, TypeName = "varchar")]
        [Index(@"PK_InboundTrailer_Beta", 1, IsUnique = true, IsClustered = true)]
        [Index(@"InboundTrailerBetaUnloadDate", 2, IsUnique = false, IsClustered = false)]
        [Index(@"InboundTrailerBetaUserId", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Urn umber")]
        public string UrNumber { get; set; } // URNumber (Primary key) (length: 10)

        [Column(@"UnloadDate", Order = 3, TypeName = "datetime")]
        [Index(@"InboundTrailerBetaUnloadDate", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Unload date")]
        public System.DateTime UnloadDate { get; set; } // UnloadDate

        [Column(@"CloseDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Close date")]
        public System.DateTime? CloseDate { get; set; } // CloseDate

        [Column(@"ReportPrinted", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Report printed")]
        public string ReportPrinted { get; set; } // ReportPrinted (length: 1)

        [Column(@"UnloadStatus", Order = 6, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Unload status")]
        public string UnloadStatus { get; set; } // UnloadStatus (length: 1)

        [Column(@"UserId", Order = 7, TypeName = "int")]
        [Index(@"InboundTrailerBetaUserId", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"ReSealNumber", Order = 8, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Re seal number")]
        public string ReSealNumber { get; set; } // ReSealNumber (length: 20)

        [Column(@"SealNumber", Order = 9, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Seal number")]
        public string SealNumber { get; set; } // SealNumber (length: 20)

        [Column(@"SealDispositionID", Order = 10, TypeName = "int")]
        [Display(Name = "Seal disposition ID")]
        public int? SealDispositionId { get; set; } // SealDispositionID

        [Column(@"Dunnage", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Dunnage")]
        public string Dunnage { get; set; } // Dunnage (length: 1)
    }

    // Item
    [Table("Item", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Item
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ItemID", Order = 1, TypeName = "int")]
        [Index(@"PK_Item", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Item ID")]
        public int ItemId { get; set; } // ItemID (Primary key)

        [Column(@"ItemCode", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 10)

        [Column(@"Description", Order = 3, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)

        [Column(@"Weight", Order = 4, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 5, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"Different_Code", Order = 6, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Different code")]
        public string DifferentCode { get; set; } // Different_Code (length: 10)
    }

    // The table 'ItemMast' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // ItemMast
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemMast
    {
        [Column(@"ItShpCode", Order = 1, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "It shp code")]
        public string ItShpCode { get; set; } // ItShpCode (length: 2)

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"ItemDesc", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItnmCode", Order = 4, TypeName = "char")]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Itnm code")]
        public string ItnmCode { get; set; } // ItnmCode (length: 6)

        [Column(@"ItemSize", Order = 5, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"ItLbsCase", Order = 6, TypeName = "numeric")]
        [Display(Name = "It lbs case")]
        public decimal? ItLbsCase { get; set; } // ItLbsCase

        [Column(@"Conv_Item", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Conv item")]
        public string ConvItem { get; set; } // Conv_Item (length: 10)

        [Column(@"Case_Code", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Case code")]
        public string CaseCode { get; set; } // Case_Code (length: 10)

        [Column(@"Promo", Order = 9, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [Column(@"Lip", Order = 10, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"book", Order = 11, TypeName = "numeric")]
        [Display(Name = "Book")]
        public decimal? Book { get; set; } // book

        [Column(@"Tie", Order = 12, TypeName = "int")]
        [Display(Name = "Tie")]
        public int? Tie { get; set; } // Tie

        [Column(@"High", Order = 13, TypeName = "int")]
        [Display(Name = "High")]
        public int? High { get; set; } // High

        [Column(@"HighOut", Order = 14, TypeName = "smallint")]
        [Display(Name = "High out")]
        public short? HighOut { get; set; } // HighOut

        [Column(@"PalletVolume", Order = 15, TypeName = "numeric")]
        [Display(Name = "Pallet volume")]
        public decimal? PalletVolume { get; set; } // PalletVolume

        [Column(@"ItemLenID", Order = 16, TypeName = "smallint")]
        [Display(Name = "Item len ID")]
        public short? ItemLenId { get; set; } // ItemLenID

        [Column(@"ItemPackID", Order = 17, TypeName = "smallint")]
        [Display(Name = "Item pack ID")]
        public short? ItemPackId { get; set; } // ItemPackID

        [Column(@"Location", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)

        [Column(@"Inbound_qty", Order = 19, TypeName = "int")]
        [Display(Name = "Inbound qty")]
        public int? InboundQty { get; set; } // Inbound_qty

        [Column(@"Hold_qty", Order = 20, TypeName = "numeric")]
        [Display(Name = "Hold qty")]
        public decimal? HoldQty { get; set; } // Hold_qty

        [Column(@"ItemType", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Item type")]
        public string ItemType { get; set; } // ItemType (length: 5)
    }

    // The table 'ItemMast_Old' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // ItemMast_Old
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemMastOld
    {
        [Column(@"ItShpCode", Order = 1, TypeName = "char")]
        [Index(@"I_Combo", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "It shp code")]
        public string ItShpCode { get; set; } // ItShpCode (length: 2)

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [Index(@"I_Combo", 2, IsUnique = false, IsClustered = false)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"ItemDesc", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItnmCode", Order = 4, TypeName = "char")]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Itnm code")]
        public string ItnmCode { get; set; } // ItnmCode (length: 6)

        [Column(@"ItemSize", Order = 5, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"ItLbsCase", Order = 6, TypeName = "numeric")]
        [Display(Name = "It lbs case")]
        public decimal? ItLbsCase { get; set; } // ItLbsCase

        [Column(@"Conv_Item", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Conv item")]
        public string ConvItem { get; set; } // Conv_Item (length: 10)

        [Column(@"Case_Code", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Case code")]
        public string CaseCode { get; set; } // Case_Code (length: 10)

        [Column(@"Promo", Order = 9, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [Column(@"Lip", Order = 10, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip
    }

    // JobType
    [Table("JobType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"JobId", Order = 1, TypeName = "int")]
        [Index(@"PK_JobType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Job ID")]
        public int JobId { get; set; } // JobId (Primary key)

        [Column(@"DepartmentId", Order = 2, TypeName = "int")]
        [Display(Name = "Department ID")]
        public int? DepartmentId { get; set; } // DepartmentId

        [Column(@"Description", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)

        [Column(@"Name", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        [Column(@"Deleted", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } // Deleted
    }

    // vwAllRuns
    [Table("vwAllRuns", Schema = "LFolino")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwAllRun
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"Weight", Order = 3, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 4, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"Pallets", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pallets")]
        public decimal? Pallets { get; set; } // Pallets

        [Column(@"Pieces", Order = 6, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Status", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"PlannedShipDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 10, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"ActualReturnDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual return date")]
        public System.DateTime? ActualReturnDate { get; set; } // ActualReturnDate

        [Column(@"StandardMiles", Order = 12, TypeName = "numeric")]
        [Display(Name = "Standard miles")]
        public decimal? StandardMiles { get; set; } // StandardMiles

        [Column(@"ActualMiles", Order = 13, TypeName = "numeric")]
        [Display(Name = "Actual miles")]
        public decimal? ActualMiles { get; set; } // ActualMiles

        [Column(@"ProformaDate", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Comments", Order = 15, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 800)

        [Column(@"ReportDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Report date")]
        public System.DateTime? ReportDate { get; set; } // ReportDate

        [Column(@"UpdateDate", Order = 17, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        [Column(@"RunNo", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PickUp", Order = 19, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"RunNumberID", Order = 20, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID
    }

    // vwAllStops
    [Table("vwAllStops", Schema = "LFolino")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwAllStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"PlannedArrivalDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"PlannedDepartDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"ActualDepartDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"lisSubRun", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis sub run")]
        public bool? LisSubRun { get; set; } // lisSubRun

        [Column(@"RunSubID", Order = 9, TypeName = "numeric")]
        [Display(Name = "Run sub ID")]
        public decimal? RunSubId { get; set; } // RunSubID

        [Column(@"CompanyLocationID", Order = 10, TypeName = "numeric")]
        [Display(Name = "Company location ID")]
        public decimal? CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"StandardMilesTo", Order = 11, TypeName = "numeric")]
        [Display(Name = "Standard miles to")]
        public decimal? StandardMilesTo { get; set; } // StandardMilesTo

        [Column(@"ActualMilesTo", Order = 12, TypeName = "numeric")]
        [Display(Name = "Actual miles to")]
        public decimal? ActualMilesTo { get; set; } // ActualMilesTo

        [Column(@"Notes", Order = 13, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [Column(@"PO_Fax", Order = 14, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"Require_Audit", Order = 15, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 16, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 17, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"StopNumberID", Order = 18, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"DelayStopTime", Order = 19, TypeName = "numeric")]
        [Display(Name = "Delay stop time")]
        public decimal? DelayStopTime { get; set; } // DelayStopTime
    }

    // vwProductivity
    [Table("vwProductivity", Schema = "LFolino")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwProductivity
    {
        [Column(@"WorkDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"FirstName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LastName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (Primary key) (length: 50)

        [Column(@"Hours", Order = 4, TypeName = "decimal")]
        [Display(Name = "Hours")]
        public decimal? Hours { get; set; } // Hours

        [Column(@"UnitType", Order = 5, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Unit type")]
        public string UnitType { get; set; } // UnitType (length: 5)

        [Column(@"Units", Order = 6, TypeName = "decimal")]
        [Display(Name = "Units")]
        public decimal? Units { get; set; } // Units

        [Column(@"Description", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)

        [Column(@"JobId", Order = 8, TypeName = "int")]
        [Display(Name = "Job ID")]
        public int? JobId { get; set; } // JobId

        [Column(@"Ref2", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ref 2")]
        public string Ref2 { get; set; } // Ref2 (length: 50)

        [Column(@"IdName", Order = 10, TypeName = "varchar")]
        [MaxLength(101)]
        [StringLength(101)]
        [Display(Name = "Id name")]
        public string IdName { get; set; } // IdName (length: 101)
    }

    // License
    [Table("License", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class License
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LicenseID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_License", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "License ID")]
        public decimal LicenseId { get; set; } // LicenseID (Primary key)

        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID

        [Column(@"RunStopID", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID

        [Column(@"ProformaRunMasterID", Order = 4, TypeName = "numeric")]
        [Required]
        [Display(Name = "Proforma run master ID")]
        public decimal ProformaRunMasterId { get; set; } // ProformaRunMasterID

        [Column(@"RunNumberID", Order = 5, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberID

        [Column(@"StopNumberID", Order = 6, TypeName = "numeric")]
        [Required]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberID

        [Column(@"EdiControl", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Edi control")]
        public int EdiControl { get; set; } // EdiControl
    }

    // The table 'link_PMCustNo' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // link_PMCustNo
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LinkPmCustNo
    {
        [Column(@"cust", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cust")]
        public string Cust { get; set; } // cust (length: 10)

        [Column(@"pmcustno", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pmcustno")]
        public string Pmcustno { get; set; } // pmcustno (length: 10)
    }

    // Location_Images
    [Table("Location_Images", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LocationImage
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImageId", Order = 1, TypeName = "int")]
        [Index(@"PK_Location_Images", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Image ID")]
        public int ImageId { get; set; } // ImageId (Primary key)

        [Column(@"ImageDescription", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Image description")]
        public string ImageDescription { get; set; } // ImageDescription (length: 500)

        [Column(@"ImageName", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Image name")]
        public string ImageName { get; set; } // ImageName (length: 500)

        // Reverse navigation

        /// <summary>
        /// Child LocationImageRelationships where [Location_ImageRelationship].[ImageId] point to this entity (FK_Location_ImageRelationship_Location_Images)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LocationImageRelationship> LocationImageRelationships { get; set; } // Location_ImageRelationship.FK_Location_ImageRelationship_Location_Images

        public LocationImage()
        {
            LocationImageRelationships = new ObservableCollection<LocationImageRelationship>();
        }
    }

    // Location_ImageRelationship
    [Table("Location_ImageRelationship", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LocationImageRelationship
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImageRelationId", Order = 1, TypeName = "int")]
        [Index(@"PK_Location_ImageRelationship", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Image relation ID")]
        public int ImageRelationId { get; set; } // ImageRelationId (Primary key)

        [Column(@"ImageId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Image ID")]
        public int ImageId { get; set; } // ImageId

        [Column(@"LocationId", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Location ID")]
        public int LocationId { get; set; } // LocationId

        [Column(@"IsActive", Order = 4, TypeName = "bit")]
        [Required]
        [Display(Name = "Is active")]
        public bool IsActive { get; set; } // IsActive

        [Column(@"IsDelete", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Is delete")]
        public bool IsDelete { get; set; } // IsDelete

        // Foreign keys

        /// <summary>
        /// Parent LocationImage pointed by [Location_ImageRelationship].([ImageId]) (FK_Location_ImageRelationship_Location_Images)
        /// </summary>
        [ForeignKey("ImageId"), Required] public virtual LocationImage LocationImage { get; set; } // FK_Location_ImageRelationship_Location_Images
    }

    // LoggedInfo
    [Table("LoggedInfo", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LoggedInfo
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LoggedInfoId", Order = 1, TypeName = "int")]
        [Index(@"PK__LoggedIn__411B763174F2DF00", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Logged info ID")]
        public int LoggedInfoId { get; set; } // LoggedInfoId (Primary key)

        [Column(@"Importance", Order = 2, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Importance")]
        public string Importance { get; set; } // Importance (length: 20)

        [Column(@"Message", Order = 3, TypeName = "varchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Message")]
        public string Message { get; set; } // Message (length: 500)

        [Column(@"TimeStamp", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Time stamp")]
        public System.DateTime? TimeStamp { get; set; } // TimeStamp
    }

    // MobileAppConfig
    [Table("MobileAppConfig", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppConfig
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ConfigurationDataId", Order = 1, TypeName = "int")]
        [Index(@"PK_ConfigurationData", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Configuration data ID")]
        public int ConfigurationDataId { get; set; } // ConfigurationDataId (Primary key)

        [Column(@"StartTime", Order = 2, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start time")]
        public System.DateTime StartTime { get; set; } // StartTime

        [Column(@"MinVersionLock", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Min version lock")]
        public string MinVersionLock { get; set; } // MinVersionLock (length: 100)

        [Column(@"GPSPollTime", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Gpsp oll time")]
        public int GpsPollTime { get; set; } // GPSPollTime

        [Column(@"DispatchPhoneNumber", Order = 5, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Dispatch phone number")]
        public string DispatchPhoneNumber { get; set; } // DispatchPhoneNumber (length: 100)

        [Column(@"CreateDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime CreateDate { get; set; } // CreateDate

        public MobileAppConfig()
        {
            CreateDate = System.DateTime.Now;
        }
    }

    // MobileAppEmployeeRequestsOthersRun
    [Table("MobileAppEmployeeRequestsOthersRun", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppEmployeeRequestsOthersRun
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EmployeeRequestsOthersRunId", Order = 1, TypeName = "int")]
        [Index(@"PK_MobileAppEmployeeRequestsOthersRun", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee requests others run ID")]
        public int EmployeeRequestsOthersRunId { get; set; } // EmployeeRequestsOthersRunId (Primary key)

        [Column(@"EmployeeId", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId

        [Column(@"RequestedEmployeeId", Order = 3, TypeName = "decimal")]
        [Required]
        [Display(Name = "Requested employee ID")]
        public decimal RequestedEmployeeId { get; set; } // RequestedEmployeeId

        [Column(@"RunNumberId", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberId

        [Column(@"CreateDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime CreateDate { get; set; } // CreateDate
    }

    // MobileAppExceptions
    [Table("MobileAppExceptions", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppException
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"MobileAppExceptionId", Order = 1, TypeName = "int")]
        [Index(@"PK_MobileAppExceptions", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Mobile app exception ID")]
        public int MobileAppExceptionId { get; set; } // MobileAppExceptionId (Primary key)

        [Column(@"MethodName", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Method name")]
        public string MethodName { get; set; } // MethodName (length: 50)

        [Column(@"MethodException", Order = 3, TypeName = "ntext")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength]
        [Display(Name = "Method exception")]
        public string MethodException { get; set; } // MethodException (length: 1073741823)

        [Column(@"MethodStackTrace", Order = 4, TypeName = "ntext")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength]
        [Display(Name = "Method stack trace")]
        public string MethodStackTrace { get; set; } // MethodStackTrace (length: 1073741823)

        [Column(@"ExceptionDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Exception date")]
        public System.DateTime ExceptionDate { get; set; } // ExceptionDate

        public MobileAppException()
        {
            ExceptionDate = System.DateTime.Now;
        }
    }

    // MobileAppProformaDateReleased
    [Table("MobileAppProformaDateReleased", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppProformaDateReleased
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProformaDateId", Order = 1, TypeName = "int")]
        [Index(@"PK_MobileAppProformaDateReleased", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Proforma date ID")]
        public int ProformaDateId { get; set; } // ProformaDateId (Primary key)

        [Column(@"ProformaDate", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(8)]
        [StringLength(8)]
        [Display(Name = "Proforma date")]
        public string ProformaDate { get; set; } // ProformaDate (length: 8)

        [Column(@"IsReleased", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Is released")]
        public bool IsReleased { get; set; } // IsReleased
    }

    // The table 'MobileError' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // MobileError
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileError
    {
        [Column(@"ErrorDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Error date")]
        public System.DateTime? ErrorDate { get; set; } // ErrorDate

        [Column(@"Message", Order = 2, TypeName = "nchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Message")]
        public string Message { get; set; } // Message (length: 50)

        [Column(@"Text", Order = 3, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Text")]
        public string Text { get; set; } // Text (length: 1073741823)
    }

    // MobileUser
    [Table("MobileUser", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileUser
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"MobileUserID", Order = 1, TypeName = "int")]
        [Index(@"PK_MobileUser", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Mobile user ID")]
        public int MobileUserId { get; set; } // MobileUserID (Primary key)

        [Column(@"Lastname", Order = 2, TypeName = "nchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Lastname")]
        public string Lastname { get; set; } // Lastname (length: 25)

        [Column(@"Firstname", Order = 3, TypeName = "nchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Firstname")]
        public string Firstname { get; set; } // Firstname (length: 25)

        [Column(@"Initials", Order = 4, TypeName = "nchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 3)

        [Column(@"PIN", Order = 5, TypeName = "nvarchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pin")]
        public string Pin { get; set; } // PIN (length: 10)

        [Column(@"IsActive", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Is active")]
        public bool IsActive { get; set; } // IsActive

        [Column(@"CreatedDatetime", Order = 7, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 8, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime ModifiedDatetime { get; set; } // ModifiedDatetime

        [Column(@"Deleted", Order = 9, TypeName = "bit")]
        [Display(Name = "Deleted")]
        public bool? Deleted { get; set; } // Deleted

        public MobileUser()
        {
            CreatedDatetime = System.DateTime.Now;
            ModifiedDatetime = System.DateTime.Now;
            Deleted = false;
        }
    }

    // ModuleInfo
    [Table("ModuleInfo", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModuleInfo
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK_ModuleInfo", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // ID (Primary key)

        [Column(@"Version", Order = 2, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Version")]
        public string Version { get; set; } // Version (length: 100)

        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 100)

        [Column(@"AssemblyFileName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Assembly file name")]
        public string AssemblyFileName { get; set; } // AssemblyFileName (length: 100)

        [Column(@"IsMain", Order = 5, TypeName = "bit")]
        [Display(Name = "Is main")]
        public bool? IsMain { get; set; } // IsMain

        [Column(@"OptimisticLockField", Order = 6, TypeName = "int")]
        [Display(Name = "Optimistic lock field")]
        public int? OptimisticLockField { get; set; } // OptimisticLockField
    }

    // NewOrders
    [Table("NewOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NewOrder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"NewOrdersID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_NewOrders", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "New orders ID")]
        public decimal NewOrdersId { get; set; } // NewOrdersID (Primary key)

        [Column(@"OrderID", Order = 2, TypeName = "decimal")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [Column(@"OrderNumber", Order = 3, TypeName = "decimal")]
        [Index(@"NewOrdersOrderNumberIdx", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 4, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipperID", Order = 5, TypeName = "decimal")]
        [Required]
        [Display(Name = "Shipper ID")]
        public decimal ShipperId { get; set; } // ShipperID

        [Column(@"Consignor", Order = 6, TypeName = "decimal")]
        [Display(Name = "Consignor")]
        public decimal? Consignor { get; set; } // Consignor

        [Column(@"Consignee", Order = 7, TypeName = "decimal")]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // Consignee

        [Column(@"ShipperShipDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"ShipperDeliveryDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper delivery date")]
        public System.DateTime? ShipperDeliveryDate { get; set; } // ShipperDeliveryDate

        [Column(@"PlannedShipDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [Column(@"PlannedDeliveryDate", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"ActualDeliveryDate", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual delivery date")]
        public System.DateTime? ActualDeliveryDate { get; set; } // ActualDeliveryDate

        [Column(@"TotalOrderWeight", Order = 14, TypeName = "decimal")]
        [Required]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"TotalOrderCube", Order = 15, TypeName = "decimal")]
        [Required]
        [Display(Name = "Total order cube")]
        public decimal TotalOrderCube { get; set; } // TotalOrderCube

        [Column(@"TotalOrderPieces", Order = 16, TypeName = "decimal")]
        [Required]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderPallets", Order = 17, TypeName = "decimal")]
        [Required]
        [Display(Name = "Total order pallets")]
        public decimal TotalOrderPallets { get; set; } // TotalOrderPallets

        [Column(@"Status", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"PO_Number", Order = 20, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"CreateDate", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"UpdateOrderDate", Order = 22, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update order date")]
        public System.DateTime? UpdateOrderDate { get; set; } // UpdateOrderDate

        [Column(@"Notes", Order = 23, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 24, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"ServiceLevel", Order = 25, TypeName = "int")]
        [Display(Name = "Service level")]
        public int? ServiceLevel { get; set; } // ServiceLevel

        [Column(@"FlagID", Order = 26, TypeName = "numeric")]
        [Index(@"IDX_FLAGID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Flag ID")]
        public decimal? FlagId { get; set; } // FlagID

        [Column(@"AddDeleteEdit", Order = 27, TypeName = "char")]
        [Index(@"NewOrdersOrderNumberIdx", 2, IsUnique = false, IsClustered = false)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Add delete edit")]
        public string AddDeleteEdit { get; set; } // AddDeleteEdit (length: 1)

        [Column(@"Error", Order = 28, TypeName = "varchar")]
        [Index(@"NewOrdersOrderNumberIdx", 3, IsUnique = false, IsClustered = false)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Error")]
        public string Error { get; set; } // Error (length: 100)

        [Column(@"Batch_No", Order = 29, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Batch no")]
        public string BatchNo { get; set; } // Batch_No (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent Flag pointed by [NewOrders].([FlagId]) (FK_NewOrders_Flag)
        /// </summary>
        [ForeignKey("FlagId")] public virtual Flag Flag { get; set; } // FK_NewOrders_Flag

        public NewOrder()
        {
            ServiceLevel = 0;
        }
    }

    // NewOrderDetail
    [Table("NewOrderDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NewOrderDetail
    {
        [Column(@"OrderDetailID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Order detail ID")]
        public decimal? OrderDetailId { get; set; } // OrderDetailID

        [Column(@"OrderID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [Column(@"LineSeqNo", Order = 3, TypeName = "numeric")]
        [Display(Name = "Line seq no")]
        public decimal? LineSeqNo { get; set; } // LineSeqNo

        [Column(@"ItemID", Order = 4, TypeName = "int")]
        [Display(Name = "Item ID")]
        public int? ItemId { get; set; } // ItemID

        [Column(@"Pieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Weight", Order = 6, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 7, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"LisTempControlled", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis temp controlled")]
        public bool? LisTempControlled { get; set; } // LisTempControlled

        [Column(@"Itemcode", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"Custcode", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderNumber", Order = 11, TypeName = "decimal")]
        [Index(@"IDX_OrderNumber_FlagID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Order number")]
        public decimal OrderNumber { get; set; } // OrderNumber (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"FlagID", Order = 12, TypeName = "numeric")]
        [Index(@"IDX_OrderNumber_FlagID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Flag ID")]
        public decimal FlagId { get; set; } // FlagID (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent Flag pointed by [NewOrderDetail].([FlagId]) (FK_NewOrderDetail_Flag)
        /// </summary>
        [ForeignKey("FlagId"), Required] public virtual Flag Flag { get; set; } // FK_NewOrderDetail_Flag
    }

    // NonDispatchedStop
    [Table("NonDispatchedStop", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NonDispatchedStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"NonDispatchedStopId", Order = 1, TypeName = "int")]
        [Index(@"PK_NonDispatchedStop", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Non dispatched stop ID")]
        public int NonDispatchedStopId { get; set; } // NonDispatchedStopId (Primary key)

        [Column(@"RunId", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunId

        [Column(@"TypeId", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Type ID")]
        public int TypeId { get; set; } // TypeId

        [Column(@"EmployeeID", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"StopDateTime", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Stop date time")]
        public System.DateTime? StopDateTime { get; set; } // StopDateTime

        [Column(@"LocationDescription", Order = 6, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Location description")]
        public string LocationDescription { get; set; } // LocationDescription (length: 500)

        [Column(@"City", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 100)

        [Column(@"State", Order = 8, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 50)

        [Column(@"PostalCode", Order = 9, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 50)

        [Column(@"CallInStop", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Call in stop")]
        public int CallInStop { get; set; } // CallInStop

        [Column(@"CallInDepart", Order = 11, TypeName = "int")]
        [Required]
        [Display(Name = "Call in depart")]
        public int CallInDepart { get; set; } // CallInDepart

        [Column(@"DepartDateTime", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart date time")]
        public System.DateTime? DepartDateTime { get; set; } // DepartDateTime

        [Column(@"Comments", Order = 13, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 500)

        [Column(@"Longitude", Order = 14, TypeName = "decimal")]
        [Required]
        [Display(Name = "Longitude")]
        public decimal Longitude { get; set; } // Longitude

        [Column(@"Latitude", Order = 15, TypeName = "decimal")]
        [Required]
        [Display(Name = "Latitude")]
        public decimal Latitude { get; set; } // Latitude

        [Column(@"RunNumberID", Order = 16, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberID

        // Foreign keys

        /// <summary>
        /// Parent NonDispatchedStopType pointed by [NonDispatchedStop].([TypeId]) (FK_NonDispatchedStop_NonDispatchedStopType)
        /// </summary>
        [ForeignKey("TypeId"), Required] public virtual NonDispatchedStopType NonDispatchedStopType { get; set; } // FK_NonDispatchedStop_NonDispatchedStopType

        public NonDispatchedStop()
        {
            Longitude = 0.000m;
            Latitude = 0.000m;
            RunNumberId = 0m;
        }
    }

    // NonDispatchedStopType
    [Table("NonDispatchedStopType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NonDispatchedStopType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TypeID", Order = 1, TypeName = "int")]
        [Index(@"PK_NonDispatchedStopType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Type ID")]
        public int TypeId { get; set; } // TypeID (Primary key)

        [Column(@"Type", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 100)

        [Column(@"SortOrder", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Sort order")]
        public int SortOrder { get; set; } // SortOrder

        // Reverse navigation

        /// <summary>
        /// Child NonDispatchedStops where [NonDispatchedStop].[TypeId] point to this entity (FK_NonDispatchedStop_NonDispatchedStopType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NonDispatchedStop> NonDispatchedStops { get; set; } // NonDispatchedStop.FK_NonDispatchedStop_NonDispatchedStopType

        public NonDispatchedStopType()
        {
            NonDispatchedStops = new ObservableCollection<NonDispatchedStop>();
        }
    }

    // Orders
    [Table("Orders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Order
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Order", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderID (Primary key)

        [Column(@"OrderNumber", Order = 2, TypeName = "numeric")]
        [Index(@"OrdersOrderNumberIdx", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 3, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipperID", Order = 4, TypeName = "numeric")]
        [Index(@"IX_Orders_ShipperID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Shipper ID")]
        public decimal ShipperId { get; set; } // ShipperID

        [Column(@"Consignor", Order = 5, TypeName = "numeric")]
        [Display(Name = "Consignor")]
        public decimal? Consignor { get; set; } // Consignor

        [Column(@"Consignee", Order = 6, TypeName = "numeric")]
        [Index(@"IX_Orders_Consignee", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // Consignee

        [Column(@"ShipperShipDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"ShipperDeliveryDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper delivery date")]
        public System.DateTime? ShipperDeliveryDate { get; set; } // ShipperDeliveryDate

        [Column(@"PlannedShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [Column(@"PlannedDeliveryDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"ActualDeliveryDate", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual delivery date")]
        public System.DateTime? ActualDeliveryDate { get; set; } // ActualDeliveryDate

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Required]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"TotalOrderCube", Order = 14, TypeName = "numeric")]
        [Required]
        [Display(Name = "Total order cube")]
        public decimal TotalOrderCube { get; set; } // TotalOrderCube

        [Column(@"TotalOrderPieces", Order = 15, TypeName = "numeric")]
        [Required]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderPallets", Order = 16, TypeName = "numeric")]
        [Required]
        [Display(Name = "Total order pallets")]
        public decimal TotalOrderPallets { get; set; } // TotalOrderPallets

        [Column(@"Status", Order = 17, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 18, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"PO_Number", Order = 19, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"CreateDate", Order = 20, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"UpdateOrderDate", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update order date")]
        public System.DateTime? UpdateOrderDate { get; set; } // UpdateOrderDate

        [Column(@"Notes", Order = 22, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 23, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"ServiceLevel", Order = 24, TypeName = "int")]
        [Display(Name = "Service level")]
        public int? ServiceLevel { get; set; } // ServiceLevel

        [Column(@"SameDay", Order = 25, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 26, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [Column(@"Hold", Order = 27, TypeName = "bit")]
        [Required]
        [Display(Name = "Hold")]
        public bool Hold { get; set; } // Hold

        [Column(@"Batch_No", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Batch no")]
        public string BatchNo { get; set; } // Batch_No (length: 10)

        // Reverse navigation

        /// <summary>
        /// Child OrderDetails where [OrderDetail].[OrderID] point to this entity (FK_OrderDetail_Orders)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<OrderDetail> OrderDetails { get; set; } // OrderDetail.FK_OrderDetail_Orders
        /// <summary>
        /// Child RunOrders where [RunOrder].[OrderID] point to this entity (FK_RunOrder_Orders)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunOrder> RunOrders { get; set; } // RunOrder.FK_RunOrder_Orders

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [Orders].([Consignee]) (FK_Orders_CompanyLocation_Consignee)
        /// </summary>
        [ForeignKey("Consignee")] public virtual CompanyLocation CompanyLocation_Consignee { get; set; } // FK_Orders_CompanyLocation_Consignee

        /// <summary>
        /// Parent CompanyLocation pointed by [Orders].([Consignor]) (FK_Orders_CompanyLocation_Consignor)
        /// </summary>
        [ForeignKey("Consignor")] public virtual CompanyLocation CompanyLocation_Consignor { get; set; } // FK_Orders_CompanyLocation_Consignor

        /// <summary>
        /// Parent CompanyLocation pointed by [Orders].([ShipperId]) (FK_Orders_CompanyLocation_Shipper)
        /// </summary>
        [ForeignKey("ShipperId"), Required] public virtual CompanyLocation Shipper { get; set; } // FK_Orders_CompanyLocation_Shipper

        public Order()
        {
            Status = "50";
            Hold = false;
            OrderDetails = new ObservableCollection<OrderDetail>();
            RunOrders = new ObservableCollection<RunOrder>();
        }
    }

    // OrderActions
    [Table("OrderActions", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderAction
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderActionId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderActions", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order action ID")]
        public int OrderActionId { get; set; } // OrderActionId (Primary key)

        [Column(@"Description", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 50)
    }

    // OrderActivity
    [Table("OrderActivity", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderActivity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderActivityId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderActivity", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order activity ID")]
        public int OrderActivityId { get; set; } // OrderActivityId (Primary key)

        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Index(@"OrderPickId", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId

        [Column(@"OrderID", Order = 3, TypeName = "int")]
        [Display(Name = "Order ID")]
        public int? OrderId { get; set; } // OrderID

        [Column(@"OrderActionId", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Order action ID")]
        public int OrderActionId { get; set; } // OrderActionId

        [Column(@"ActivityDateTime", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Activity date time")]
        public System.DateTime ActivityDateTime { get; set; } // ActivityDateTime

        [Column(@"UserId", Order = 6, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"PalletId", Order = 7, TypeName = "int")]
        [Display(Name = "Pallet ID")]
        public int? PalletId { get; set; } // PalletId

        [Column(@"UserCaseCount", Order = 8, TypeName = "int")]
        [Display(Name = "User case count")]
        public int? UserCaseCount { get; set; } // UserCaseCount

        [Column(@"ScannerCaseCount", Order = 9, TypeName = "int")]
        [Display(Name = "Scanner case count")]
        public int? ScannerCaseCount { get; set; } // ScannerCaseCount

        [Column(@"SupervisorCode", Order = 10, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Supervisor code")]
        public string SupervisorCode { get; set; } // SupervisorCode (length: 25)
    }

    // OrderAssignment
    [Table("OrderAssignment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderAssignment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderId", Order = 1, TypeName = "decimal")]
        [Index(@"PK__OrderLoa__C43D5F3E36BC0F3B", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeId", Order = 2, TypeName = "decimal")]
        [Index(@"PK__OrderLoa__C43D5F3E36BC0F3B", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId (Primary key)

        [Column(@"ProformaDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime ProformaDate { get; set; } // ProformaDate

        [Column(@"PercentPick", Order = 4, TypeName = "decimal")]
        [Display(Name = "Percent pick")]
        public decimal? PercentPick { get; set; } // PercentPick

        [Column(@"PercentLoad", Order = 5, TypeName = "decimal")]
        [Display(Name = "Percent load")]
        public decimal? PercentLoad { get; set; } // PercentLoad

        [Column(@"WorkDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkType", Order = 7, TypeName = "int")]
        [Index(@"PK__OrderLoa__C43D5F3E36BC0F3B", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work type")]
        public int WorkType { get; set; } // WorkType (Primary key)

        [Column(@"PercentAssigned", Order = 8, TypeName = "decimal")]
        [Display(Name = "Percent assigned")]
        public decimal? PercentAssigned { get; set; } // PercentAssigned

        [Column(@"Created", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Modified", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; } // Modified

        public OrderAssignment()
        {
            WorkType = 0;
            Created = System.DateTime.Now;
        }
    }

    // OrderDetail
    [Table("OrderDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderDetailID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_OrderDetail", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Order detail ID")]
        public decimal OrderDetailId { get; set; } // OrderDetailID (Primary key)

        [Column(@"OrderID", Order = 2, TypeName = "numeric")]
        [Index(@"IX_OrderDetail", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderID

        [Column(@"LineSeqNo", Order = 3, TypeName = "smallint")]
        [Display(Name = "Line seq no")]
        public short? LineSeqNo { get; set; } // LineSeqNo

        [Column(@"ItemID", Order = 4, TypeName = "int")]
        [Display(Name = "Item ID")]
        public int? ItemId { get; set; } // ItemID

        [Column(@"Pieces", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Weight", Order = 6, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 7, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"LisTempControlled", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis temp controlled")]
        public bool? LisTempControlled { get; set; } // LisTempControlled

        [Column(@"Itemcode", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"Custcode", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        // Foreign keys

        /// <summary>
        /// Parent Order pointed by [OrderDetail].([OrderId]) (FK_OrderDetail_Orders)
        /// </summary>
        [ForeignKey("OrderId"), Required] public virtual Order Order { get; set; } // FK_OrderDetail_Orders
    }

    // OrderErrors
    [Table("OrderErrors", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderError
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderErrorId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderErrors", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order error ID")]
        public int OrderErrorId { get; set; } // OrderErrorId (Primary key)

        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Index(@"OrderPickPallet", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId

        [Column(@"BarCode", Order = 3, TypeName = "varchar")]
        [Index(@"OrderItemBarCode", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Bar code")]
        public string BarCode { get; set; } // BarCode (length: 20)

        [Column(@"CustCode", Order = 4, TypeName = "varchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 5, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"ErrorCode", Order = 6, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Error code")]
        public string ErrorCode { get; set; } // ErrorCode (length: 25)

        [Column(@"ErrorDesc", Order = 7, TypeName = "varchar")]
        [MaxLength(150)]
        [StringLength(150)]
        [Display(Name = "Error desc")]
        public string ErrorDesc { get; set; } // ErrorDesc (length: 150)

        [Column(@"EntryTypeCode", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Entry type code")]
        public string EntryTypeCode { get; set; } // EntryTypeCode (length: 1)

        [Column(@"PalletId", Order = 9, TypeName = "int")]
        [Index(@"Pallet", 1, IsUnique = false, IsClustered = false)]
        [Index(@"OrderPickPallet", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId

        [Column(@"EntryDateTime", Order = 10, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Entry date time")]
        public System.DateTime EntryDateTime { get; set; } // EntryDateTime

        [Column(@"UserId", Order = 11, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"NumCases", Order = 12, TypeName = "int")]
        [Required]
        [Display(Name = "Num cases")]
        public int NumCases { get; set; } // NumCases
    }

    // OrderItems
    [Table("OrderItems", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderItem
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderItemId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderItems", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order item ID")]
        public int OrderItemId { get; set; } // OrderItemId (Primary key)

        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Index(@"OrderPickPallet", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId

        [Column(@"OrderId", Order = 3, TypeName = "int")]
        [Index(@"OrderIdPallet", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Order ID")]
        public int OrderId { get; set; } // OrderId

        [Column(@"LookupCode", Order = 4, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Lookup code")]
        public string LookupCode { get; set; } // LookupCode (length: 1)

        [Column(@"ShipNo", Order = 5, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Ship no")]
        public string ShipNo { get; set; } // ShipNo (length: 20)

        [Column(@"SourceTable", Order = 6, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Source table")]
        public string SourceTable { get; set; } // SourceTable (length: 10)

        [Column(@"BarCodeId", Order = 7, TypeName = "int")]
        [Index(@"OrderItemBarCodeId", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Bar code ID")]
        public int? BarCodeId { get; set; } // BarCodeId

        [Column(@"BarCode", Order = 8, TypeName = "varchar")]
        [Index(@"OrderItemBarcode", 1, IsUnique = false, IsClustered = false)]
        [Index(@"CustItem", 3, IsUnique = false, IsClustered = false)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Bar code")]
        public string BarCode { get; set; } // BarCode (length: 50)

        [Column(@"CustCode", Order = 9, TypeName = "varchar")]
        [Index(@"CustItem", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 10, TypeName = "varchar")]
        [Index(@"CustItem", 2, IsUnique = false, IsClustered = false)]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"EntrySeqNum", Order = 11, TypeName = "int")]
        [Display(Name = "Entry seq num")]
        public int? EntrySeqNum { get; set; } // EntrySeqNum

        [Column(@"EntryTypeCode", Order = 12, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Entry type code")]
        public string EntryTypeCode { get; set; } // EntryTypeCode (length: 1)

        [Column(@"EntryMode", Order = 13, TypeName = "varchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Entry mode")]
        public string EntryMode { get; set; } // EntryMode (length: 3)

        [Column(@"PalletId", Order = 14, TypeName = "int")]
        [Index(@"OrderIdPallet", 2, IsUnique = false, IsClustered = false)]
        [Index(@"OrderPickPallet", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletId

        [Column(@"EntryDateTime", Order = 15, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Entry date time")]
        public System.DateTime EntryDateTime { get; set; } // EntryDateTime

        [Column(@"UserId", Order = 16, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"NumCases", Order = 17, TypeName = "int")]
        [Required]
        [Display(Name = "Num cases")]
        public int NumCases { get; set; } // NumCases
    }

    // OrderJobCode
    [Table("OrderJobCode", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderJobCode
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderId", Order = 1, TypeName = "decimal")]
        [Index(@"PK_OrderJobCode", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkType", Order = 2, TypeName = "int")]
        [Index(@"PK_OrderJobCode", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work type")]
        public int WorkType { get; set; } // WorkType (Primary key)

        [Column(@"JobCode", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Job code")]
        public int JobCode { get; set; } // JobCode
    }

    // OrderJobCodeMapping
    [Table("OrderJobCodeMapping", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderJobCodeMapping
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderJobCodeMappingId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderJobCodeMapping", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order job code mapping ID")]
        public int OrderJobCodeMappingId { get; set; } // OrderJobCodeMappingId (Primary key)

        [Column(@"JobCode", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Job code")]
        public int JobCode { get; set; } // JobCode

        [Column(@"ShipperShortName", Order = 3, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Shipper short name")]
        public string ShipperShortName { get; set; } // ShipperShortName (length: 10)

        [Column(@"ShipperType", Order = 4, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (length: 10)

        [Column(@"OrderType", Order = 5, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Order type")]
        public string OrderType { get; set; } // OrderType (length: 10)

        [Column(@"WorkType", Order = 6, TypeName = "int")]
        [Display(Name = "Work type")]
        public int? WorkType { get; set; } // WorkType
    }

    // OrderPick
    [Table("OrderPick", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderPick
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderPickId", Order = 1, TypeName = "int")]
        [Index(@"PK_OrderPick", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId (Primary key)

        [Column(@"State", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 1)

        [Column(@"StartDateTime", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start date time")]
        public System.DateTime? StartDateTime { get; set; } // StartDateTime

        [Column(@"EndDateTime", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End date time")]
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
    }

    // The table 'OrderPo' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // OrderPo
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderPo
    {
        [Column(@"OrderPoID", Order = 1, TypeName = "int")]
        [Display(Name = "Order po ID")]
        public int? OrderPoId { get; set; } // OrderPoID

        [Column(@"OrderID", Order = 2, TypeName = "int")]
        [Display(Name = "Order ID")]
        public int? OrderId { get; set; } // OrderID

        [Column(@"PoNumber", Order = 3, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PoNumber (length: 20)
    }

    // PalletTag
    [Table("PalletTag", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PalletTag
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PalletTagID", Order = 1, TypeName = "int")]
        [Index(@"PK_PalletTag", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Pallet tag ID")]
        public int PalletTagId { get; set; } // PalletTagID (Primary key)

        [Column(@"DateCreated", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Userid", Order = 4, TypeName = "nchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Userid")]
        public string Userid { get; set; } // Userid (length: 10)

        [Column(@"BarCode", Order = 5, TypeName = "varchar")]
        [Index(@"Con_BarCode", 1, IsUnique = true, IsClustered = false)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Bar code")]
        public string BarCode { get; set; } // BarCode (length: 50)
    }

    // Proforma
    [Table("Proforma", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Proforma
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProformaId", Order = 1, TypeName = "int")]
        [Index(@"PK_Proforma", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Proforma ID")]
        public int ProformaId { get; set; } // ProformaId (Primary key)

        [Column(@"ProformaName", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Proforma name")]
        public string ProformaName { get; set; } // ProformaName (length: 50)

        [Column(@"Notes", Order = 3, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        // Reverse navigation

        /// <summary>
        /// Child ProformaRunMasters where [ProformaRunMaster].[ProformaId] point to this entity (FK_ProformaRunMaster_Proforma)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProformaRunMaster> ProformaRunMasters { get; set; } // ProformaRunMaster.FK_ProformaRunMaster_Proforma

        public Proforma()
        {
            ProformaRunMasters = new ObservableCollection<ProformaRunMaster>();
        }
    }

    // ProformaRunMaster
    [Table("ProformaRunMaster", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunMaster
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProformaRunMasterID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_ProformaRunMasterID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Proforma run master ID")]
        public decimal ProformaRunMasterId { get; set; } // ProformaRunMasterID (Primary key)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 25)

        [Column(@"RunSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence

        [Column(@"ProformaName", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Proforma name")]
        public string ProformaName { get; set; } // ProformaName (length: 25)

        [Column(@"DayOfWeek", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Day of week")]
        public string DayOfWeek { get; set; } // DayOfWeek (length: 10)

        [Column(@"LisAllowDelete", Order = 6, TypeName = "bit")]
        [Display(Name = "Lis allow delete")]
        public bool? LisAllowDelete { get; set; } // LisAllowDelete

        [Column(@"RunNo", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"ProformaId", Order = 8, TypeName = "int")]
        [Display(Name = "Proforma ID")]
        public int? ProformaId { get; set; } // ProformaId

        [Column(@"RunID", Order = 9, TypeName = "int")]
        [Display(Name = "Run ID")]
        public int? RunId { get; set; } // RunID

        [Column(@"PickUp", Order = 10, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"PlannedShipDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"DispatchDatePlusThis", Order = 12, TypeName = "decimal")]
        [Display(Name = "Dispatch date plus this")]
        public decimal? DispatchDatePlusThis { get; set; } // DispatchDatePlusThis

        // Reverse navigation

        /// <summary>
        /// Child ProformaRunResources where [ProformaRunResource].[ProformaRunMasterID] point to this entity (FK_ProformaRunResource_ProformaRunMaster)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProformaRunResource> ProformaRunResources { get; set; } // ProformaRunResource.FK_ProformaRunResource_ProformaRunMaster
        /// <summary>
        /// Child ProformaRunStops where [ProformaRunStops].[ProformaRunMasterID] point to this entity (FK_ProformaRunStops_ProformaRunMaster)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProformaRunStop> ProformaRunStops { get; set; } // ProformaRunStops.FK_ProformaRunStops_ProformaRunMaster

        // Foreign keys

        /// <summary>
        /// Parent Proforma pointed by [ProformaRunMaster].([ProformaId]) (FK_ProformaRunMaster_Proforma)
        /// </summary>
        [ForeignKey("ProformaId")] public virtual Proforma Proforma { get; set; } // FK_ProformaRunMaster_Proforma

        public ProformaRunMaster()
        {
            LisAllowDelete = true;
            DispatchDatePlusThis = 0m;
            ProformaRunResources = new ObservableCollection<ProformaRunResource>();
            ProformaRunStops = new ObservableCollection<ProformaRunStop>();
        }
    }

    // ProformaRunResource
    [Table("ProformaRunResource", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunResource
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProformaRunResourceID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_ProformaRunResource", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Proforma run resource ID")]
        public decimal ProformaRunResourceId { get; set; } // ProformaRunResourceID (Primary key)

        [Column(@"Driver1", Order = 2, TypeName = "numeric")]
        [Display(Name = "Driver 1")]
        public decimal? Driver1 { get; set; } // Driver1

        [Column(@"Driver2", Order = 3, TypeName = "numeric")]
        [Display(Name = "Driver 2")]
        public decimal? Driver2 { get; set; } // Driver2

        [Column(@"Tractor", Order = 4, TypeName = "numeric")]
        [Display(Name = "Tractor")]
        public decimal? Tractor { get; set; } // Tractor

        [Column(@"Trailer1", Order = 5, TypeName = "numeric")]
        [Display(Name = "Trailer 1")]
        public decimal? Trailer1 { get; set; } // Trailer1

        [Column(@"Trailer2", Order = 6, TypeName = "numeric")]
        [Display(Name = "Trailer 2")]
        public decimal? Trailer2 { get; set; } // Trailer2

        [Column(@"ProformaRunMasterID", Order = 7, TypeName = "numeric")]
        [Required]
        [Display(Name = "Proforma run master ID")]
        public decimal ProformaRunMasterId { get; set; } // ProformaRunMasterID

        [Column(@"SecondRun", Order = 8, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        // Foreign keys

        /// <summary>
        /// Parent ProformaRunMaster pointed by [ProformaRunResource].([ProformaRunMasterId]) (FK_ProformaRunResource_ProformaRunMaster)
        /// </summary>
        [ForeignKey("ProformaRunMasterId"), Required] public virtual ProformaRunMaster ProformaRunMaster { get; set; } // FK_ProformaRunResource_ProformaRunMaster
    }

    // ProformaRunStops
    [Table("ProformaRunStops", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProformaRunStopsID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_ProformaRunStops", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Proforma run stops ID")]
        public decimal ProformaRunStopsId { get; set; } // ProformaRunStopsID (Primary key)

        [Column(@"ProformaRunMasterID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Proforma run master ID")]
        public decimal ProformaRunMasterId { get; set; } // ProformaRunMasterID

        [Column(@"CompanyLocationID", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"StopSequence", Order = 4, TypeName = "numeric")]
        [Required]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence

        [Column(@"AveWeight", Order = 5, TypeName = "numeric")]
        [Display(Name = "Ave weight")]
        public decimal? AveWeight { get; set; } // AveWeight

        [Column(@"AveCube", Order = 6, TypeName = "numeric")]
        [Display(Name = "Ave cube")]
        public decimal? AveCube { get; set; } // AveCube

        [Column(@"AvePieces", Order = 7, TypeName = "numeric")]
        [Display(Name = "Ave pieces")]
        public decimal? AvePieces { get; set; } // AvePieces

        [Column(@"AvePallets", Order = 8, TypeName = "numeric")]
        [Display(Name = "Ave pallets")]
        public decimal? AvePallets { get; set; } // AvePallets

        [Column(@"MilesTo", Order = 9, TypeName = "numeric")]
        [Display(Name = "Miles to")]
        public decimal? MilesTo { get; set; } // MilesTo

        [Column(@"AveStopTime", Order = 10, TypeName = "numeric")]
        [Display(Name = "Ave stop time")]
        public decimal? AveStopTime { get; set; } // AveStopTime

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [ProformaRunStops].([CompanyLocationId]) (FK_ProformaRunStops_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId"), Required] public virtual CompanyLocation CompanyLocation { get; set; } // FK_ProformaRunStops_CompanyLocation

        /// <summary>
        /// Parent ProformaRunMaster pointed by [ProformaRunStops].([ProformaRunMasterId]) (FK_ProformaRunStops_ProformaRunMaster)
        /// </summary>
        [ForeignKey("ProformaRunMasterId"), Required] public virtual ProformaRunMaster ProformaRunMaster { get; set; } // FK_ProformaRunStops_ProformaRunMaster
    }

    // Report
    [Table("Report", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Report
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ReportID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Report", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Report ID")]
        public decimal ReportId { get; set; } // ReportID (Primary key)

        [Column(@"Menu_Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Menu name")]
        public string MenuName { get; set; } // Menu_Name (length: 30)

        [Column(@"Path", Order = 3, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Path")]
        public string Path { get; set; } // Path (length: 50)

        [Column(@"Report", Order = 4, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Report")]
        public string Report_ { get; set; } // Report (length: 30)

        [Column(@"SortOrder", Order = 5, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Sort order")]
        public string SortOrder { get; set; } // SortOrder (length: 5)

        [Column(@"IsByRun", Order = 6, TypeName = "bit")]
        [Display(Name = "Is by run")]
        public bool? IsByRun { get; set; } // IsByRun

        [Column(@"IsPoByStop", Order = 7, TypeName = "bit")]
        [Display(Name = "Is po by stop")]
        public bool? IsPoByStop { get; set; } // IsPoByStop

        [Column(@"HasEndDate", Order = 8, TypeName = "bit")]
        [Display(Name = "Has end date")]
        public bool? HasEndDate { get; set; } // HasEndDate
    }

    // ReportJob
    [Table("ReportJob", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportJob
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ReportJobID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Report job ID")]
        public int ReportJobId { get; set; } // ReportJobID (Primary key)

        [Column(@"ReportID", Order = 2, TypeName = "int")]
        [Display(Name = "Report ID")]
        public int? ReportId { get; set; } // ReportID

        [Column(@"Created", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Printed", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Printed")]
        public System.DateTime? Printed { get; set; } // Printed

        [Column(@"Printer", Order = 5, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Printer")]
        public string Printer { get; set; } // Printer (length: 20)

        [Column(@"Param1Name", Order = 6, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 1 name")]
        public string Param1Name { get; set; } // Param1Name (length: 15)

        [Column(@"Param1Value", Order = 7, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 1 value")]
        public string Param1Value { get; set; } // Param1Value (length: 15)

        [Column(@"Param1Type", Order = 8, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Param 1 type")]
        public string Param1Type { get; set; } // Param1Type (length: 5)

        [Column(@"Param2Name", Order = 9, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 2 name")]
        public string Param2Name { get; set; } // Param2Name (length: 15)

        [Column(@"Param2Value", Order = 10, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 2 value")]
        public string Param2Value { get; set; } // Param2Value (length: 15)

        [Column(@"Param2Type", Order = 11, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Param 2 type")]
        public string Param2Type { get; set; } // Param2Type (length: 5)

        [Column(@"Param3Name", Order = 12, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 3 name")]
        public string Param3Name { get; set; } // Param3Name (length: 15)

        [Column(@"Param3Value", Order = 13, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Param 3 value")]
        public string Param3Value { get; set; } // Param3Value (length: 15)

        [Column(@"Param3Type", Order = 14, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Param 3 type")]
        public string Param3Type { get; set; } // Param3Type (length: 5)

        [Column(@"Notes", Order = 15, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 20)
    }

    // Results_old
    [Table("Results_old", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ResultsOld
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"runname", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Key]
        [Display(Name = "Runname")]
        public string Runname { get; set; } // runname (Primary key) (length: 25)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyLocationID", Order = 2, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 3, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)
    }

    // Run
    [Table("Run", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Run
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Run", 1, IsUnique = true, IsClustered = true)]
        [Index(@"RunID_ProformaDate", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Index(@"IDX_RUNNAME", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"Weight", Order = 3, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Cube", Order = 4, TypeName = "numeric")]
        [Display(Name = "Cube")]
        public decimal? Cube { get; set; } // Cube

        [Column(@"Pallets", Order = 5, TypeName = "numeric")]
        [Display(Name = "Pallets")]
        public decimal? Pallets { get; set; } // Pallets

        [Column(@"Pieces", Order = 6, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Status", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"PlannedShipDate", Order = 8, TypeName = "datetime")]
        [Index(@"PlannedShipDate", 1, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"ActualShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual ship date")]
        public System.DateTime? ActualShipDate { get; set; } // ActualShipDate

        [Column(@"RunSequence", Order = 10, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence

        [Column(@"ActualReturnDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual return date")]
        public System.DateTime? ActualReturnDate { get; set; } // ActualReturnDate

        [Column(@"StandardMiles", Order = 12, TypeName = "numeric")]
        [Display(Name = "Standard miles")]
        public decimal? StandardMiles { get; set; } // StandardMiles

        [Column(@"ActualMiles", Order = 13, TypeName = "numeric")]
        [Display(Name = "Actual miles")]
        public decimal? ActualMiles { get; set; } // ActualMiles

        [Column(@"ProformaDate", Order = 14, TypeName = "datetime")]
        [Index(@"ProformaDate", 1, IsUnique = false, IsClustered = false)]
        [Index(@"RunID_ProformaDate", 2, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Comments", Order = 15, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 800)

        [Column(@"UpdateDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        [Column(@"ReportDate", Order = 17, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Report date")]
        public System.DateTime? ReportDate { get; set; } // ReportDate

        [Column(@"RunNo", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PickUp", Order = 19, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"RunNum", Order = 20, TypeName = "int")]
        [Display(Name = "Run num")]
        public int? RunNum { get; set; } // RunNum

        [Column(@"RunNumberID", Order = 21, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"PalletsOff", Order = 22, TypeName = "smallint")]
        [Display(Name = "Pallets off")]
        public short? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 23, TypeName = "smallint")]
        [Display(Name = "Pallets on")]
        public short? PalletsOn { get; set; } // PalletsOn

        [Column(@"ProformaRunMasterID", Order = 24, TypeName = "int")]
        [Display(Name = "Proforma run master ID")]
        public int? ProformaRunMasterId { get; set; } // ProformaRunMasterID

        [Column(@"WarehouseNotes", Order = 25, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Warehouse notes")]
        public string WarehouseNotes { get; set; } // WarehouseNotes (length: 800)

        // Reverse navigation

        /// <summary>
        /// Child RunResources where [RunResource].[RunID] point to this entity (FK_RunResource_Run)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources { get; set; } // RunResource.FK_RunResource_Run
        /// <summary>
        /// Child RunStops where [RunStop].[RunID] point to this entity (FK_RunStop_Run)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunStop> RunStops { get; set; } // RunStop.FK_RunStop_Run

        public Run()
        {
            RunResources = new ObservableCollection<RunResource>();
            RunStops = new ObservableCollection<RunStop>();
        }
    }

    // RunAssignment
    [Table("RunAssignment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunAssignment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunNumberId", Order = 1, TypeName = "numeric")]
        [Index(@"PK_RunLoadAssignment", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeId", Order = 2, TypeName = "decimal")]
        [Index(@"PK_RunLoadAssignment", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId (Primary key)

        [Column(@"ProformaDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime ProformaDate { get; set; } // ProformaDate

        [Column(@"PercentPick", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Percent pick")]
        public decimal PercentPick { get; set; } // PercentPick

        [Column(@"PercentLoad", Order = 5, TypeName = "decimal")]
        [Required]
        [Display(Name = "Percent load")]
        public decimal PercentLoad { get; set; } // PercentLoad

        [Column(@"WorkDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkType", Order = 7, TypeName = "int")]
        [Index(@"PK_RunLoadAssignment", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work type")]
        public int WorkType { get; set; } // WorkType (Primary key)

        [Column(@"PercentAssigned", Order = 8, TypeName = "decimal")]
        [Display(Name = "Percent assigned")]
        public decimal? PercentAssigned { get; set; } // PercentAssigned

        [Column(@"Created", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Modified", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; } // Modified

        public RunAssignment()
        {
            WorkType = 0;
            Created = System.DateTime.Now;
        }
    }

    // RunDetails
    [Table("RunDetails", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunDetail
    {
        [Column(@"RunId", Order = 1, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunId

        [Column(@"EmployeeID", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"RunStartTime", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run start time")]
        public System.DateTime? RunStartTime { get; set; } // RunStartTime

        [Column(@"TruckNumber", Order = 4, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Truck number")]
        public string TruckNumber { get; set; } // TruckNumber (length: 100)

        [Column(@"TruckStartMiles", Order = 5, TypeName = "int")]
        [Required]
        [Display(Name = "Truck start miles")]
        public int TruckStartMiles { get; set; } // TruckStartMiles

        [Column(@"TruckEndMiles", Order = 6, TypeName = "int")]
        [Required]
        [Display(Name = "Truck end miles")]
        public int TruckEndMiles { get; set; } // TruckEndMiles

        [Column(@"TrailerNumber", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trailer number")]
        public string TrailerNumber { get; set; } // TrailerNumber (length: 100)

        [Column(@"TrailerStartMiles", Order = 8, TypeName = "int")]
        [Required]
        [Display(Name = "Trailer start miles")]
        public int TrailerStartMiles { get; set; } // TrailerStartMiles

        [Column(@"TrailerEndMiles", Order = 9, TypeName = "int")]
        [Required]
        [Display(Name = "Trailer end miles")]
        public int TrailerEndMiles { get; set; } // TrailerEndMiles

        [Column(@"RunEndTime", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run end time")]
        public System.DateTime? RunEndTime { get; set; } // RunEndTime

        [Column(@"Comments", Order = 11, TypeName = "ntext")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 1073741823)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunNumberID", Order = 12, TypeName = "decimal")]
        [Index(@"PK_RunDetails", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberID (Primary key)

        [Column(@"CreatedDatetime", Order = 13, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime? ModifiedDatetime { get; set; } // ModifiedDatetime

        [Column(@"RunDepartTime", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run depart time")]
        public System.DateTime? RunDepartTime { get; set; } // RunDepartTime

        public RunDetail()
        {
            RunNumberId = 0m;
            CreatedDatetime = System.DateTime.Now;
        }
    }

    // RunOrder
    [Table("RunOrder", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunOrder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunOrderID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_RunOrder", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run order ID")]
        public decimal RunOrderId { get; set; } // RunOrderID (Primary key)

        [Column(@"RunStopID", Order = 2, TypeName = "numeric")]
        [Index(@"IX_RunStopId_OrderId", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID

        [Column(@"OrderID", Order = 3, TypeName = "numeric")]
        [Index(@"IX_RunStopId_OrderId", 2, IsUnique = false, IsClustered = false)]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [Column(@"RunOrderSequence", Order = 4, TypeName = "numeric")]
        [Display(Name = "Run order sequence")]
        public decimal? RunOrderSequence { get; set; } // RunOrderSequence

        [Column(@"pdsCol", Order = 5, TypeName = "nchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pds col")]
        public string PdsCol { get; set; } // pdsCol (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent Order pointed by [RunOrder].([OrderId]) (FK_RunOrder_Orders)
        /// </summary>
        [ForeignKey("OrderId")] public virtual Order Order { get; set; } // FK_RunOrder_Orders

        /// <summary>
        /// Parent RunStop pointed by [RunOrder].([RunStopId]) (FK_RunOrder_RunStop)
        /// </summary>
        [ForeignKey("RunStopId"), Required] public virtual RunStop RunStop { get; set; } // FK_RunOrder_RunStop
    }

    // RunResource
    [Table("RunResource", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunResource
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunResourceID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_RunResource", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Run resource ID")]
        public decimal RunResourceId { get; set; } // RunResourceID (Primary key)

        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Index(@"IDX_RUNID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID

        [Column(@"CarrierID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Carrier ID")]
        public decimal? CarrierId { get; set; } // CarrierID

        [Column(@"TractorID", Order = 4, TypeName = "numeric")]
        [Index(@"IDX_TRACTORID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Tractor ID")]
        public decimal? TractorId { get; set; } // TractorID

        [Column(@"TrailerID1", Order = 5, TypeName = "numeric")]
        [Index(@"IDX_TRAILERID1", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Trailer ID 1")]
        public decimal? TrailerId1 { get; set; } // TrailerID1

        [Column(@"TrailerID2", Order = 6, TypeName = "numeric")]
        [Index(@"IDX_TRAILERID2", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Trailer ID 2")]
        public decimal? TrailerId2 { get; set; } // TrailerID2

        [Column(@"TrailerID3", Order = 7, TypeName = "numeric")]
        [Index(@"IDX_TRAILERID3", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Trailer ID 3")]
        public decimal? TrailerId3 { get; set; } // TrailerID3

        [Column(@"Driver1", Order = 8, TypeName = "numeric")]
        [Index(@"IDX_DRIVER1", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Driver 1")]
        public decimal? Driver1 { get; set; } // Driver1

        [Column(@"Driver2", Order = 9, TypeName = "numeric")]
        [Index(@"IDX_DRIVER2", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Driver 2")]
        public decimal? Driver2 { get; set; } // Driver2

        [Column(@"SecondRun", Order = 10, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [RunResource].([Driver1]) (FK_RunResource_Employee)
        /// </summary>
        [ForeignKey("Driver1")] public virtual Employee Employee_Driver1 { get; set; } // FK_RunResource_Employee

        /// <summary>
        /// Parent Employee pointed by [RunResource].([Driver2]) (FK_RunResource_Employee1)
        /// </summary>
        [ForeignKey("Driver2")] public virtual Employee Employee_Driver2 { get; set; } // FK_RunResource_Employee1

        /// <summary>
        /// Parent Run pointed by [RunResource].([RunId]) (FK_RunResource_Run)
        /// </summary>
        [ForeignKey("RunId"), Required] public virtual Run Run { get; set; } // FK_RunResource_Run

        /// <summary>
        /// Parent Tractor pointed by [RunResource].([TractorId]) (FK_RunResource_Tractor)
        /// </summary>
        [ForeignKey("TractorId")] public virtual Tractor Tractor { get; set; } // FK_RunResource_Tractor

        /// <summary>
        /// Parent Trailer pointed by [RunResource].([TrailerId1]) (FK_RunResource_Trailer)
        /// </summary>
        [ForeignKey("TrailerId1")] public virtual Trailer Trailer_TrailerId1 { get; set; } // FK_RunResource_Trailer

        /// <summary>
        /// Parent Trailer pointed by [RunResource].([TrailerId2]) (FK_RunResource_Trailer1)
        /// </summary>
        [ForeignKey("TrailerId2")] public virtual Trailer Trailer_TrailerId2 { get; set; } // FK_RunResource_Trailer1

        /// <summary>
        /// Parent Trailer pointed by [RunResource].([TrailerId3]) (FK_RunResource_Trailer2)
        /// </summary>
        [ForeignKey("TrailerId3")] public virtual Trailer Trailer_TrailerId3 { get; set; } // FK_RunResource_Trailer2

        public RunResource()
        {
            SecondRun = false;
        }
    }

    // RunStop
    [Table("RunStop", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_RunStop", 1, IsUnique = true, IsClustered = false)]
        [Index(@"RunID_RunStopID_StopNumberID", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Index(@"C_RunID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"RunID_RunStopID_StopNumberID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID

        [Column(@"StopSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence

        [Column(@"PlannedArrivalDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"PlannedDepartDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"ActualDepartDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"lisSubRun", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis sub run")]
        public bool? LisSubRun { get; set; } // lisSubRun

        [Column(@"RunSubID", Order = 9, TypeName = "numeric")]
        [Display(Name = "Run sub ID")]
        public decimal? RunSubId { get; set; } // RunSubID

        [Column(@"CompanyLocationID", Order = 10, TypeName = "numeric")]
        [Display(Name = "Company location ID")]
        public decimal? CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"StandardMilesTo", Order = 11, TypeName = "numeric")]
        [Display(Name = "Standard miles to")]
        public decimal? StandardMilesTo { get; set; } // StandardMilesTo

        [Column(@"ActualMilesTo", Order = 12, TypeName = "numeric")]
        [Display(Name = "Actual miles to")]
        public decimal? ActualMilesTo { get; set; } // ActualMilesTo

        [Column(@"Notes", Order = 13, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [Column(@"PO_Fax", Order = 14, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"Require_Audit", Order = 15, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 16, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 17, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"StopNum", Order = 18, TypeName = "int")]
        [Display(Name = "Stop num")]
        public int? StopNum { get; set; } // StopNum

        [Column(@"StopNumberID", Order = 19, TypeName = "numeric")]
        [Index(@"IX_StopNumberId", 1, IsUnique = false, IsClustered = false)]
        [Index(@"RunID_RunStopID_StopNumberID", 3, IsUnique = false, IsClustered = false)]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"DelayStopTime", Order = 20, TypeName = "numeric")]
        [Display(Name = "Delay stop time")]
        public decimal? DelayStopTime { get; set; } // DelayStopTime

        [Column(@"PalletsOff", Order = 21, TypeName = "smallint")]
        [Display(Name = "Pallets off")]
        public short? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 22, TypeName = "smallint")]
        [Display(Name = "Pallets on")]
        public short? PalletsOn { get; set; } // PalletsOn

        [Column(@"IsPOEmailSent", Order = 23, TypeName = "bit")]
        [Required]
        [Display(Name = "Is poe mail sent")]
        public bool IsPoEmailSent { get; set; } // IsPOEmailSent

        [Column(@"POEmailSentTime", Order = 24, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Poe mail sent time")]
        public System.DateTime? PoEmailSentTime { get; set; } // POEmailSentTime

        // Reverse navigation

        /// <summary>
        /// Child RunOrders where [RunOrder].[RunStopID] point to this entity (FK_RunOrder_RunStop)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunOrder> RunOrders { get; set; } // RunOrder.FK_RunOrder_RunStop

        // Foreign keys

        /// <summary>
        /// Parent CompanyLocation pointed by [RunStop].([CompanyLocationId]) (FK_RunStop_CompanyLocation)
        /// </summary>
        [ForeignKey("CompanyLocationId")] public virtual CompanyLocation CompanyLocation { get; set; } // FK_RunStop_CompanyLocation

        /// <summary>
        /// Parent Run pointed by [RunStop].([RunId]) (FK_RunStop_Run)
        /// </summary>
        [ForeignKey("RunId"), Required] public virtual Run Run { get; set; } // FK_RunStop_Run

        public RunStop()
        {
            PoFax = false;
            IsPoEmailSent = false;
            RunOrders = new ObservableCollection<RunOrder>();
        }
    }

    // RunStopDetail
    [Table("RunStopDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStopDetail
    {
        [Column(@"RunID", Order = 1, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID

        [Column(@"RunStopID", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopNumberID", Order = 3, TypeName = "decimal")]
        [Index(@"PK_RunStopDetail", 1, IsUnique = true, IsClustered = true)]
        [Index(@"IX_StopNumberId", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberID (Primary key)

        [Column(@"EmployeeID", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeID

        [Column(@"ActualArrivalDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"UnloadLoadFirstscan", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Unload load firstscan")]
        public System.DateTime? UnloadLoadFirstscan { get; set; } // UnloadLoadFirstscan

        [Column(@"Type", Order = 8, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 9, TypeName = "bit")]
        [Required]
        [Display(Name = "Late")]
        public bool Late { get; set; } // Late

        [Column(@"PalletsTaken", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Pallets taken")]
        public int PalletsTaken { get; set; } // PalletsTaken

        [Column(@"UnloadStartDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Unload start date")]
        public System.DateTime? UnloadStartDate { get; set; } // UnloadStartDate

        [Column(@"CasesOnBills", Order = 12, TypeName = "int")]
        [Required]
        [Display(Name = "Cases on bills")]
        public int CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 13, TypeName = "int")]
        [Required]
        [Display(Name = "Delivered cases")]
        public int DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 14, TypeName = "bit")]
        [Required]
        [Display(Name = "Over short")]
        public bool OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 15, TypeName = "bit")]
        [Required]
        [Display(Name = "Damage")]
        public bool Damage { get; set; } // Damage

        [Column(@"Photo", Order = 16, TypeName = "image")]
        [MaxLength(2147483647)]
        [Display(Name = "Photo")]
        public byte[] Photo { get; set; } // Photo (length: 2147483647)

        [Column(@"CalledInOSD", Order = 17, TypeName = "bit")]
        [Required]
        [Display(Name = "Called in osd")]
        public bool CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 18, TypeName = "ntext")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 1073741823)

        [Column(@"PalletsDelivered", Order = 19, TypeName = "int")]
        [Required]
        [Display(Name = "Pallets delivered")]
        public int PalletsDelivered { get; set; } // PalletsDelivered

        [Column(@"PalletsReturned", Order = 20, TypeName = "int")]
        [Required]
        [Display(Name = "Pallets returned")]
        public int PalletsReturned { get; set; } // PalletsReturned

        [Column(@"Delayed", Order = 21, TypeName = "bit")]
        [Required]
        [Display(Name = "Delayed")]
        public bool Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 22, TypeName = "ntext")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 1073741823)

        [Column(@"GPSLatitude", Order = 23, TypeName = "decimal")]
        [Required]
        [Display(Name = "Gpsl atitude")]
        public decimal GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 24, TypeName = "decimal")]
        [Required]
        [Display(Name = "Gpsl ongitude")]
        public decimal GpsLongitude { get; set; } // GPSLongitude

        [Column(@"RunNumberID", Order = 25, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberID

        [Column(@"CreatedDatetime", Order = 26, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime? ModifiedDatetime { get; set; } // ModifiedDatetime

        public RunStopDetail()
        {
            RunNumberId = 0m;
            CreatedDatetime = System.DateTime.Now;
        }
    }

    // RunStopDetailPhoto
    [Table("RunStopDetailPhoto", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStopDetailPhoto
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunStopPhotoId", Order = 1, TypeName = "int")]
        [Index(@"PK_RunStopDetailPhoto", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Run stop photo ID")]
        public int RunStopPhotoId { get; set; } // RunStopPhotoId (Primary key)

        [Column(@"RunStopId", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopId

        [Column(@"Photo", Order = 3, TypeName = "image")]
        [MaxLength(2147483647)]
        [Display(Name = "Photo")]
        public byte[] Photo { get; set; } // Photo (length: 2147483647)

        [Column(@"StopNumberID", Order = 4, TypeName = "decimal")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"PhotoLength", Order = 5, TypeName = "int")]
        [Display(Name = "Photo length")]
        public int? PhotoLength { get; set; } // PhotoLength

        public RunStopDetailPhoto()
        {
            StopNumberId = 0m;
        }
    }

    // RunSub
    [Table("RunSub", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunSub
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunSubID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_RunSub", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Run sub ID")]
        public decimal RunSubId { get; set; } // RunSubID (Primary key)

        [Column(@"RunStopID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID

        [Column(@"RunID", Order = 3, TypeName = "numeric")]
        [Required]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID
    }

    // ScannedPalletConfirm
    [Table("ScannedPalletConfirm", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ScannedPalletConfirm
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ScannedPalletLoadConfirmID", Order = 1, TypeName = "int")]
        [Index(@"PK_ScannedPalletConfirm", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Scanned pallet load confirm ID")]
        public int ScannedPalletLoadConfirmId { get; set; } // ScannedPalletLoadConfirmID (Primary key)

        [Column(@"StopNumberID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberID

        [Column(@"TrailerID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Trailer ID")]
        public decimal? TrailerId { get; set; } // TrailerID

        [Column(@"TractorID", Order = 4, TypeName = "numeric")]
        [Display(Name = "Tractor ID")]
        public decimal? TractorId { get; set; } // TractorID

        [Column(@"ConfirmDatetime", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Confirm datetime")]
        public System.DateTime ConfirmDatetime { get; set; } // ConfirmDatetime

        [Column(@"TotalPieces", Order = 6, TypeName = "decimal")]
        [Required]
        [Display(Name = "Total pieces")]
        public decimal TotalPieces { get; set; } // TotalPieces

        [Column(@"TrailerBarcode", Order = 7, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Trailer barcode")]
        public string TrailerBarcode { get; set; } // TrailerBarcode (length: 128)

        [Column(@"TrailerNumber", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Trailer number")]
        public string TrailerNumber { get; set; } // TrailerNumber (length: 32)

        [Column(@"MobileUserID", Order = 9, TypeName = "int")]
        [Required]
        [Display(Name = "Mobile user ID")]
        public int MobileUserId { get; set; } // MobileUserID

        [Column(@"Deleted", Order = 10, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } // Deleted

        [Column(@"CreatedDatetime", Order = 11, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 12, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime ModifiedDatetime { get; set; } // ModifiedDatetime

        // Reverse navigation

        /// <summary>
        /// Child ScannedPalletLoads where [ScannedPalletLoad].[ScannedPalletLoadConfirmID] point to this entity (FK_ScannedPalletLoad_ScannedPalletConfirm)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ScannedPalletLoad> ScannedPalletLoads { get; set; } // ScannedPalletLoad.FK_ScannedPalletLoad_ScannedPalletConfirm

        // Foreign keys

        /// <summary>
        /// Parent Tractor pointed by [ScannedPalletConfirm].([TractorId]) (FK_ScannedPalletConfirm_Tractor)
        /// </summary>
        [ForeignKey("TractorId")] public virtual Tractor Tractor { get; set; } // FK_ScannedPalletConfirm_Tractor

        /// <summary>
        /// Parent Trailer pointed by [ScannedPalletConfirm].([TrailerId]) (FK_ScannedPalletConfirm_Trailer)
        /// </summary>
        [ForeignKey("TrailerId")] public virtual Trailer Trailer { get; set; } // FK_ScannedPalletConfirm_Trailer

        public ScannedPalletConfirm()
        {
            Deleted = false;
            CreatedDatetime = System.DateTime.Now;
            ModifiedDatetime = System.DateTime.Now;
            ScannedPalletLoads = new ObservableCollection<ScannedPalletLoad>();
        }
    }

    // ScannedPalletLoad
    [Table("ScannedPalletLoad", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ScannedPalletLoad
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ScannedPalletLoadID", Order = 1, TypeName = "int")]
        [Index(@"PK_ScannedPalletLoad", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Scanned pallet load ID")]
        public int ScannedPalletLoadId { get; set; } // ScannedPalletLoadID (Primary key)

        [Column(@"StopNumberID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberID

        [Column(@"WMSCode", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (length: 50)

        [Column(@"Store", Order = 4, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(32)]
        [StringLength(32)]
        [Display(Name = "Store")]
        public string Store { get; set; } // Store (length: 32)

        [Column(@"ClientBarcodeType", Order = 5, TypeName = "int")]
        [Required]
        [Display(Name = "Client barcode type")]
        public int ClientBarcodeType { get; set; } // ClientBarcodeType

        [Column(@"CompanyLocationID", Order = 6, TypeName = "int")]
        [Display(Name = "Company location ID")]
        public int? CompanyLocationId { get; set; } // CompanyLocationID

        [Column(@"PalletCount", Order = 7, TypeName = "decimal")]
        [Required]
        [Display(Name = "Pallet count")]
        public decimal PalletCount { get; set; } // PalletCount

        [Column(@"BarcodeScan", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(128)]
        [StringLength(128)]
        [Display(Name = "Barcode scan")]
        public string BarcodeScan { get; set; } // BarcodeScan (length: 128)

        [Column(@"ScanDatetime", Order = 9, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Scan datetime")]
        public System.DateTime ScanDatetime { get; set; } // ScanDatetime

        [Column(@"ScannedPalletLoadConfirmID", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Scanned pallet load confirm ID")]
        public int ScannedPalletLoadConfirmId { get; set; } // ScannedPalletLoadConfirmID

        [Column(@"MobileUserID", Order = 11, TypeName = "int")]
        [Required]
        [Display(Name = "Mobile user ID")]
        public int MobileUserId { get; set; } // MobileUserID

        [Column(@"Deleted", Order = 12, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } // Deleted

        [Column(@"CreatedDatetime", Order = 13, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created datetime")]
        public System.DateTime CreatedDatetime { get; set; } // CreatedDatetime

        [Column(@"ModifiedDatetime", Order = 14, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified datetime")]
        public System.DateTime ModifiedDatetime { get; set; } // ModifiedDatetime

        // Foreign keys

        /// <summary>
        /// Parent ScannedPalletConfirm pointed by [ScannedPalletLoad].([ScannedPalletLoadConfirmId]) (FK_ScannedPalletLoad_ScannedPalletConfirm)
        /// </summary>
        [ForeignKey("ScannedPalletLoadConfirmId"), Required] public virtual ScannedPalletConfirm ScannedPalletConfirm { get; set; } // FK_ScannedPalletLoad_ScannedPalletConfirm

        public ScannedPalletLoad()
        {
            Deleted = false;
            CreatedDatetime = System.DateTime.Now;
            ModifiedDatetime = System.DateTime.Now;
        }
    }

    // Server
    [Table("Server", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Server
    {
        [Column(@"Server", Order = 1, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Server")]
        public string Server_ { get; set; } // Server (length: 20)

        [Column(@"Database_Name", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Database name")]
        public string DatabaseName { get; set; } // Database_Name (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"UserID", Order = 3, TypeName = "char")]
        [Index(@"PK_Server", 1, IsUnique = true, IsClustered = true)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "User ID")]
        public string UserId { get; set; } // UserID (Primary key) (length: 10)

        [Column(@"Password", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } // Password (length: 10)

        [Column(@"Timer", Order = 5, TypeName = "numeric")]
        [Display(Name = "Timer")]
        public decimal? Timer { get; set; } // Timer
    }

    // Service_Level
    [Table("Service_Level", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceLevel
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Service_LevelID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Service level ID")]
        public decimal ServiceLevelId { get; set; } // Service_LevelID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Service_Level", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Service level")]
        public int ServiceLevel_ { get; set; } // Service_Level (Primary key)
    }

    // Status_Codes
    [Table("Status_Codes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusCode
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Status_codeID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Status_Codes", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Status code ID")]
        public decimal StatusCodeId { get; set; } // Status_codeID (Primary key)

        [Column(@"Order_Status", Order = 2, TypeName = "numeric")]
        [Display(Name = "Order status")]
        public decimal? OrderStatus { get; set; } // Order_Status

        [Column(@"Order_Description", Order = 3, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Order description")]
        public string OrderDescription { get; set; } // Order_Description (length: 50)
    }

    // stkBarcode
    [Table("stkBarcode", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkBarcode
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"BarcodeID", Order = 1, TypeName = "int")]
        [Index(@"PK_Barcode", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Barcode ID")]
        public int BarcodeId { get; set; } // BarcodeID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 20)

        [Column(@"ItemCode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"CustCode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"CreateDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"MobileDeviceID", Order = 6, TypeName = "smallint")]
        [Display(Name = "Mobile device ID")]
        public short? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"UpdateDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        [Column(@"Count", Order = 8, TypeName = "int")]
        [Required]
        [Display(Name = "Count")]
        public int Count { get; set; } // Count

        [Column(@"CreateBy", Order = 9, TypeName = "int")]
        [Display(Name = "Create by")]
        public int? CreateBy { get; set; } // CreateBy

        [Column(@"OldItemCode", Order = 10, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Old item code")]
        public string OldItemCode { get; set; } // OldItemCode (length: 12)

        [Column(@"IsSubstitute", Order = 11, TypeName = "bit")]
        [Display(Name = "Is substitute")]
        public bool? IsSubstitute { get; set; } // IsSubstitute

        public StkBarcode()
        {
            CreateDate = System.DateTime.Now;
            Count = 0;
        }
    }

    // stkBarcode_Archive
    [Table("stkBarcode_Archive", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkBarcodeArchive
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"BarcodeID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Barcode ID")]
        public int BarcodeId { get; set; } // BarcodeID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 20)

        [Column(@"ItemCode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"CustCode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"CreateDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"MobileDeviceID", Order = 6, TypeName = "smallint")]
        [Display(Name = "Mobile device ID")]
        public short? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"UpdateDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Count", Order = 8, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Count")]
        public int Count { get; set; } // Count (Primary key)

        [Column(@"CreateBy", Order = 9, TypeName = "int")]
        [Display(Name = "Create by")]
        public int? CreateBy { get; set; } // CreateBy

        [Column(@"OldItemCode", Order = 10, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Old item code")]
        public string OldItemCode { get; set; } // OldItemCode (length: 12)

        [Column(@"IsSubstitute", Order = 11, TypeName = "bit")]
        [Display(Name = "Is substitute")]
        public bool? IsSubstitute { get; set; } // IsSubstitute
    }

    // stkCodeDate
    [Table("stkCodeDate", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkCodeDate
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CodeDateID", Order = 1, TypeName = "int")]
        [Index(@"PK_stkCodeDate", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Code date ID")]
        public int CodeDateId { get; set; } // CodeDateID (Primary key)

        [Column(@"StockID", Order = 2, TypeName = "int")]
        [Display(Name = "Stock ID")]
        public int? StockId { get; set; } // StockID

        [Column(@"CodeDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Code date")]
        public System.DateTime? CodeDate { get; set; } // CodeDate

        [Column(@"Active", Order = 4, TypeName = "bit")]
        [Display(Name = "Active")]
        public bool? Active { get; set; } // Active

        [Column(@"Status", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 1)

        [Column(@"DateNo", Order = 6, TypeName = "int")]
        [Display(Name = "Date no")]
        public int? DateNo { get; set; } // DateNo
    }

    // stkCust
    [Table("stkCust", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkCust
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CustID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Cust ID")]
        public int CustId { get; set; } // CustID (Primary key)

        [Column(@"CustCode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)
    }

    // stkFlag
    [Table("stkFlag", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkFlag
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FlagID", Order = 1, TypeName = "int")]
        [Index(@"PK_stkFlag", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Flag ID")]
        public int FlagId { get; set; } // FlagID (Primary key)

        [Column(@"Ready", Order = 2, TypeName = "bit")]
        [Display(Name = "Ready")]
        public bool? Ready { get; set; } // Ready

        [Column(@"Processed", Order = 3, TypeName = "bit")]
        [Display(Name = "Processed")]
        public bool? Processed { get; set; } // Processed

        [Column(@"NumRecords", Order = 4, TypeName = "int")]
        [Display(Name = "Num records")]
        public int? NumRecords { get; set; } // NumRecords

        [Column(@"MobileDeviceID", Order = 5, TypeName = "int")]
        [Display(Name = "Mobile device ID")]
        public int? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"CreateDate", Order = 6, TypeName = "smalldatetime")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"ReadyDate", Order = 7, TypeName = "smalldatetime")]
        [Display(Name = "Ready date")]
        public System.DateTime? ReadyDate { get; set; } // ReadyDate

        [Column(@"ProcessedDate", Order = 8, TypeName = "smalldatetime")]
        [Display(Name = "Processed date")]
        public System.DateTime? ProcessedDate { get; set; } // ProcessedDate

        [Column(@"UserID", Order = 9, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserID

        public StkFlag()
        {
            CreateDate = System.DateTime.Now;
        }
    }

    // stkInfo
    [Table("stkInfo", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkInfo
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"InfoID", Order = 1, TypeName = "int")]
        [Index(@"PK_stkInfo", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Info ID")]
        public int InfoId { get; set; } // InfoID (Primary key)

        [Column(@"BarcodeID", Order = 2, TypeName = "int")]
        [Display(Name = "Barcode ID")]
        public int? BarcodeId { get; set; } // BarcodeID

        [Column(@"Barcode", Order = 3, TypeName = "smallint")]
        [Display(Name = "Barcode")]
        public short? Barcode { get; set; } // Barcode

        [Column(@"CustCode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 10)

        [Column(@"LocationID", Order = 6, TypeName = "int")]
        [Display(Name = "Location ID")]
        public int? LocationId { get; set; } // LocationID

        [Column(@"Tie", Order = 7, TypeName = "int")]
        [Display(Name = "Tie")]
        public int? Tie { get; set; } // Tie

        [Column(@"High", Order = 8, TypeName = "int")]
        [Display(Name = "High")]
        public int? High { get; set; } // High

        [Column(@"ItemLenID", Order = 9, TypeName = "int")]
        [Display(Name = "Item len ID")]
        public int? ItemLenId { get; set; } // ItemLenID

        [Column(@"ItemPackID", Order = 10, TypeName = "int")]
        [Display(Name = "Item pack ID")]
        public int? ItemPackId { get; set; } // ItemPackID

        [Column(@"CreateDate", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"CreateBy", Order = 12, TypeName = "int")]
        [Display(Name = "Create by")]
        public int? CreateBy { get; set; } // CreateBy

        [Column(@"FlagID", Order = 13, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID

        [Column(@"Suffix", Order = 14, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Suffix")]
        public string Suffix { get; set; } // Suffix (length: 2)
    }

    // stkInfoFlag
    [Table("stkInfoFlag", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkInfoFlag
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FlagID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Flag ID")]
        public int FlagId { get; set; } // FlagID (Primary key)

        [Column(@"Ready", Order = 2, TypeName = "bit")]
        [Display(Name = "Ready")]
        public bool? Ready { get; set; } // Ready

        [Column(@"Processed", Order = 3, TypeName = "bit")]
        [Display(Name = "Processed")]
        public bool? Processed { get; set; } // Processed

        [Column(@"NumRecords", Order = 4, TypeName = "int")]
        [Display(Name = "Num records")]
        public int? NumRecords { get; set; } // NumRecords

        [Column(@"MobileDeviceID", Order = 5, TypeName = "int")]
        [Display(Name = "Mobile device ID")]
        public int? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"CreateDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"ReadyDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Ready date")]
        public System.DateTime? ReadyDate { get; set; } // ReadyDate

        [Column(@"ProcessedDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Processed date")]
        public System.DateTime? ProcessedDate { get; set; } // ProcessedDate

        [Column(@"UserID", Order = 9, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserID
    }

    // stkLocation
    [Table("stkLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkLocation
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LocationID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Location ID")]
        public int LocationId { get; set; } // LocationID (Primary key)

        [Column(@"Name", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 10)

        [Column(@"SortOrder", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Sort order")]
        public string SortOrder { get; set; } // SortOrder (length: 10)

        [Column(@"PickSortOrder", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Pick sort order")]
        public string PickSortOrder { get; set; } // PickSortOrder (length: 10)

        [Column(@"Rack", Order = 5, TypeName = "bit")]
        [Display(Name = "Rack")]
        public bool? Rack { get; set; } // Rack
    }

    // stkMobileDevice
    [Table("stkMobileDevice", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkMobileDevice
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"MobileDeviceID", Order = 1, TypeName = "int")]
        [Index(@"PK_stkMobileDevice", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Mobile device ID")]
        public int MobileDeviceId { get; set; } // MobileDeviceID (Primary key)

        [Column(@"MacAddress", Order = 2, TypeName = "char")]
        [MaxLength(17)]
        [StringLength(17)]
        [Display(Name = "Mac address")]
        public string MacAddress { get; set; } // MacAddress (length: 17)

        [Column(@"Name", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"CreateDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"SerialNumber", Order = 5, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Serial number")]
        public string SerialNumber { get; set; } // SerialNumber (length: 20)
    }

    // stkSqlCEIdentityRange
    [Table("stkSqlCEIdentityRange", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkSqlCeIdentityRange
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SqlCEIdentityRangeID", Order = 1, TypeName = "int")]
        [Index(@"PK_stkSqlCEIdentityRange", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sql cei dentity range ID")]
        public int SqlCeIdentityRangeId { get; set; } // SqlCEIdentityRangeID (Primary key)

        [Column(@"SqlCEIdentityRangeTableID", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Sql cei dentity range table ID")]
        public string SqlCeIdentityRangeTableId { get; set; } // SqlCEIdentityRangeTableID (length: 10)

        [Column(@"MobileDeviceID", Order = 3, TypeName = "int")]
        [Display(Name = "Mobile device ID")]
        public int? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"IdentityMin", Order = 4, TypeName = "int")]
        [Display(Name = "Identity min")]
        public int? IdentityMin { get; set; } // IdentityMin

        [Column(@"IdentityMax", Order = 5, TypeName = "int")]
        [Display(Name = "Identity max")]
        public int? IdentityMax { get; set; } // IdentityMax

        [Column(@"Threshold", Order = 6, TypeName = "int")]
        [Display(Name = "Threshold")]
        public int? Threshold { get; set; } // Threshold

        [Column(@"LastIdentity", Order = 7, TypeName = "int")]
        [Display(Name = "Last identity")]
        public int? LastIdentity { get; set; } // LastIdentity

        [Column(@"LastSyncDate", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Last sync date")]
        public System.DateTime? LastSyncDate { get; set; } // LastSyncDate

        [Column(@"IsCurrent", Order = 9, TypeName = "bit")]
        [Display(Name = "Is current")]
        public bool? IsCurrent { get; set; } // IsCurrent

        [Column(@"CreateDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate
    }

    // stkSqlCEIdentityRangeTable
    [Table("stkSqlCEIdentityRangeTable", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkSqlCeIdentityRangeTable
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SqlCEIdentityRangeTableID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Sql cei dentity range table ID")]
        public int SqlCeIdentityRangeTableId { get; set; } // SqlCEIdentityRangeTableID (Primary key)

        [Column(@"Name", Order = 2, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 25)

        [Column(@"RangeSize", Order = 3, TypeName = "int")]
        [Display(Name = "Range size")]
        public int? RangeSize { get; set; } // RangeSize

        [Column(@"Increment", Order = 4, TypeName = "int")]
        [Display(Name = "Increment")]
        public int? Increment { get; set; } // Increment

        [Column(@"Threshold", Order = 5, TypeName = "float")]
        [Display(Name = "Threshold")]
        public double? Threshold { get; set; } // Threshold

        [Column(@"NextIdentity", Order = 6, TypeName = "int")]
        [Display(Name = "Next identity")]
        public int? NextIdentity { get; set; } // NextIdentity
    }

    // stkStock
    [Table("stkStock", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkStock
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StockID", Order = 1, TypeName = "int")]
        [Index(@"PK_Stock", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Stock ID")]
        public int StockId { get; set; } // StockID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 25)

        [Column(@"Itemcode", Order = 3, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"CustCode", Order = 4, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"StackSize", Order = 5, TypeName = "int")]
        [Display(Name = "Stack size")]
        public int? StackSize { get; set; } // StackSize

        [Column(@"Stacks", Order = 6, TypeName = "int")]
        [Display(Name = "Stacks")]
        public int? Stacks { get; set; } // Stacks

        [Column(@"Cases", Order = 7, TypeName = "int")]
        [Display(Name = "Cases")]
        public int? Cases { get; set; } // Cases

        [Column(@"Location", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)

        [Column(@"ScanTime", Order = 9, TypeName = "smalldatetime")]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"FlagID", Order = 10, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID

        [Column(@"rowguid", Order = 11, TypeName = "uniqueidentifier")]
        [Index(@"IX_RowGuid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        [Column(@"Status", Order = 12, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 1)

        public StkStock()
        {
            Rowguid = System.Guid.NewGuid();
        }
    }

    // stkUser
    [Table("stkUser", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkUser
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"UserID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "User ID")]
        public int UserId { get; set; } // UserID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Initials", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (Primary key) (length: 5)

        [Column(@"FirstName", Order = 3, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 25)

        [Column(@"LastName", Order = 4, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 30)

        [Column(@"ShowExceptions", Order = 5, TypeName = "bit")]
        [Display(Name = "Show exceptions")]
        public bool? ShowExceptions { get; set; } // ShowExceptions

        [Column(@"isActive", Order = 6, TypeName = "bit")]
        [Display(Name = "Is active")]
        public bool? IsActive { get; set; } // isActive

        public StkUser()
        {
            IsActive = true;
        }
    }

    // The table 'stkvwCustMfCode' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // stkvwCustMfCode
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwCustMfCode
    {
        [Column(@"MfCode", Order = 1, TypeName = "char")]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "Mf code")]
        public string MfCode { get; set; } // MfCode (length: 7)

        [Column(@"CustCode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)
    }

    // stkvwLocation
    [Table("stkvwLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwLocation
    {
        [Column(@"CustCode", Order = 1, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 2, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [Column(@"Location", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Tie", Order = 4, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Tie")]
        public int Tie { get; set; } // Tie (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"High", Order = 5, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "High")]
        public int High { get; set; } // High (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ItemLenID", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Item len ID")]
        public int ItemLenId { get; set; } // ItemLenID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ItemPackID", Order = 7, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Item pack ID")]
        public int ItemPackId { get; set; } // ItemPackID (Primary key)

        [Column(@"SortOrder", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Sort order")]
        public string SortOrder { get; set; } // SortOrder (length: 10)

        [Column(@"Barcode", Order = 9, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 20)

        [Column(@"CustItem", Order = 10, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Cust item")]
        public string CustItem { get; set; } // CustItem (length: 12)

        [Column(@"LocationID", Order = 11, TypeName = "int")]
        [Display(Name = "Location ID")]
        public int? LocationId { get; set; } // LocationID

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"InfoID", Order = 12, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Info ID")]
        public int InfoId { get; set; } // InfoID (Primary key)

        [Column(@"CreateDate", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"FlagID", Order = 14, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID
    }

    // stkvwStockChecks
    [Table("stkvwStockChecks", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockCheck
    {
        [Column(@"ReadyDate", Order = 1, TypeName = "smalldatetime")]
        [Display(Name = "Ready date")]
        public System.DateTime? ReadyDate { get; set; } // ReadyDate

        [Column(@"CustCode", Order = 2, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"Count", Order = 3, TypeName = "int")]
        [Display(Name = "Count")]
        public int? Count { get; set; } // Count

        [Column(@"Initials", Order = 4, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Initials")]
        public string Initials { get; set; } // Initials (length: 5)

        [Column(@"Duration", Order = 5, TypeName = "int")]
        [Display(Name = "Duration")]
        public int? Duration { get; set; } // Duration

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FlagID", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Flag ID")]
        public int FlagId { get; set; } // FlagID (Primary key)

        [Column(@"MobileDeviceID", Order = 7, TypeName = "int")]
        [Display(Name = "Mobile device ID")]
        public int? MobileDeviceId { get; set; } // MobileDeviceID

        [Column(@"MobileDeviceName", Order = 8, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Mobile device name")]
        public string MobileDeviceName { get; set; } // MobileDeviceName (length: 30)

        [Column(@"CountPerMin", Order = 9, TypeName = "numeric")]
        [Display(Name = "Count per min")]
        public decimal? CountPerMin { get; set; } // CountPerMin
    }

    // stkvwStockDate
    [Table("stkvwStockDate", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockDate
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StockID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Stock ID")]
        public int StockId { get; set; } // StockID (Primary key)

        [Column(@"Barcode", Order = 2, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 25)

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"Itemcode", Order = 4, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"StackSize", Order = 5, TypeName = "int")]
        [Display(Name = "Stack size")]
        public int? StackSize { get; set; } // StackSize

        [Column(@"Stacks", Order = 6, TypeName = "int")]
        [Display(Name = "Stacks")]
        public int? Stacks { get; set; } // Stacks

        [Column(@"Cases", Order = 7, TypeName = "int")]
        [Display(Name = "Cases")]
        public int? Cases { get; set; } // Cases

        [Column(@"TotalCases", Order = 8, TypeName = "int")]
        [Display(Name = "Total cases")]
        public int? TotalCases { get; set; } // TotalCases

        [Column(@"Location", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)

        [Column(@"ScanTime", Order = 10, TypeName = "smalldatetime")]
        [Display(Name = "Scan time")]
        public System.DateTime? ScanTime { get; set; } // ScanTime

        [Column(@"Status", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 1)

        [Column(@"ItemSize", Order = 12, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"ItemDesc", Order = 13, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"CodeDate", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Code date")]
        public System.DateTime? CodeDate { get; set; } // CodeDate

        [Column(@"Active", Order = 15, TypeName = "bit")]
        [Display(Name = "Active")]
        public bool? Active { get; set; } // Active

        [Column(@"DateStatus", Order = 16, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Date status")]
        public string DateStatus { get; set; } // DateStatus (length: 1)

        [Column(@"DateNo", Order = 17, TypeName = "int")]
        [Display(Name = "Date no")]
        public int? DateNo { get; set; } // DateNo

        [Column(@"JulianDay", Order = 18, TypeName = "int")]
        [Display(Name = "Julian day")]
        public int? JulianDay { get; set; } // JulianDay
    }

    // stkvwStock_ld
    [Table("stkvwStock_ld", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLd
    {
        [Column(@"Stock_dt", Order = 1, TypeName = "smalldatetime")]
        [Display(Name = "Stock dt")]
        public System.DateTime? StockDt { get; set; } // Stock_dt

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Scancode", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Key]
        [Display(Name = "Scancode")]
        public string Scancode { get; set; } // Scancode (Primary key) (length: 25)

        [Column(@"Stack", Order = 5, TypeName = "int")]
        [Display(Name = "Stack")]
        public int? Stack { get; set; } // Stack

        [Column(@"Stack_no", Order = 6, TypeName = "int")]
        [Display(Name = "Stack no")]
        public int? StackNo { get; set; } // Stack_no

        [Column(@"Cases", Order = 7, TypeName = "int")]
        [Display(Name = "Cases")]
        public int? Cases { get; set; } // Cases

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 1")]
        public string Date1 { get; set; } // Date1 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1_act", Order = 9, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 1 act")]
        public string Date1Act { get; set; } // Date1_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2", Order = 10, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 2")]
        public string Date2 { get; set; } // Date2 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2_act", Order = 11, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 2 act")]
        public string Date2Act { get; set; } // Date2_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3", Order = 12, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 3")]
        public string Date3 { get; set; } // Date3 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3_act", Order = 13, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 3 act")]
        public string Date3Act { get; set; } // Date3_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4", Order = 14, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 4")]
        public string Date4 { get; set; } // Date4 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4_act", Order = 15, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 4 act")]
        public string Date4Act { get; set; } // Date4_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitDamaged", Order = 16, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit damaged")]
        public int BitDamaged { get; set; } // bitDamaged (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitHold", Order = 17, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit hold")]
        public int BitHold { get; set; } // bitHold (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitWet", Order = 18, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit wet")]
        public int BitWet { get; set; } // bitWet (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StockID", Order = 19, TypeName = "int")]
        [Display(Name = "Stock ID")]
        public int? StockId { get; set; } // StockID

        [Column(@"FlagID", Order = 20, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID
    }

    // stkvwStock_ldAll
    [Table("stkvwStock_ldAll", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLdAll
    {
        [Column(@"Stock_dt", Order = 1, TypeName = "smalldatetime")]
        [Display(Name = "Stock dt")]
        public System.DateTime? StockDt { get; set; } // Stock_dt

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Scancode", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Key]
        [Display(Name = "Scancode")]
        public string Scancode { get; set; } // Scancode (Primary key) (length: 25)

        [Column(@"Stack", Order = 5, TypeName = "int")]
        [Display(Name = "Stack")]
        public int? Stack { get; set; } // Stack

        [Column(@"Stack_no", Order = 6, TypeName = "int")]
        [Display(Name = "Stack no")]
        public int? StackNo { get; set; } // Stack_no

        [Column(@"Cases", Order = 7, TypeName = "int")]
        [Display(Name = "Cases")]
        public int? Cases { get; set; } // Cases

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 1")]
        public string Date1 { get; set; } // Date1 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1_act", Order = 9, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 1 act")]
        public string Date1Act { get; set; } // Date1_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2", Order = 10, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 2")]
        public string Date2 { get; set; } // Date2 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2_act", Order = 11, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 2 act")]
        public string Date2Act { get; set; } // Date2_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3", Order = 12, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 3")]
        public string Date3 { get; set; } // Date3 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3_act", Order = 13, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 3 act")]
        public string Date3Act { get; set; } // Date3_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4", Order = 14, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 4")]
        public string Date4 { get; set; } // Date4 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4_act", Order = 15, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 4 act")]
        public string Date4Act { get; set; } // Date4_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitDamaged", Order = 16, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit damaged")]
        public int BitDamaged { get; set; } // bitDamaged (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitHold", Order = 17, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit hold")]
        public int BitHold { get; set; } // bitHold (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitWet", Order = 18, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit wet")]
        public int BitWet { get; set; } // bitWet (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StockID", Order = 19, TypeName = "int")]
        [Display(Name = "Stock ID")]
        public int? StockId { get; set; } // StockID

        [Column(@"FlagID", Order = 20, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID
    }

    // stkvwStock_ld_orig
    [Table("stkvwStock_ld_orig", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLdOrig
    {
        [Column(@"Stock_dt", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Stock dt")]
        public System.DateTime? StockDt { get; set; } // Stock_dt

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"CustCode", Order = 3, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Scancode", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Key]
        [Display(Name = "Scancode")]
        public string Scancode { get; set; } // Scancode (Primary key) (length: 25)

        [Column(@"Stack", Order = 5, TypeName = "int")]
        [Display(Name = "Stack")]
        public int? Stack { get; set; } // Stack

        [Column(@"Stack_no", Order = 6, TypeName = "int")]
        [Display(Name = "Stack no")]
        public int? StackNo { get; set; } // Stack_no

        [Column(@"Cases", Order = 7, TypeName = "int")]
        [Display(Name = "Cases")]
        public int? Cases { get; set; } // Cases

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 1")]
        public string Date1 { get; set; } // Date1 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date1_act", Order = 9, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 1 act")]
        public string Date1Act { get; set; } // Date1_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2", Order = 10, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 2")]
        public string Date2 { get; set; } // Date2 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date2_act", Order = 11, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 2 act")]
        public string Date2Act { get; set; } // Date2_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3", Order = 12, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 3")]
        public string Date3 { get; set; } // Date3 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date3_act", Order = 13, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 3 act")]
        public string Date3Act { get; set; } // Date3_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4", Order = 14, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Date 4")]
        public string Date4 { get; set; } // Date4 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Date4_act", Order = 15, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Date 4 act")]
        public string Date4Act { get; set; } // Date4_act (Primary key) (length: 1)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitDamaged", Order = 16, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit damaged")]
        public int BitDamaged { get; set; } // bitDamaged (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitHold", Order = 17, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit hold")]
        public int BitHold { get; set; } // bitHold (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"bitWet", Order = 18, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Bit wet")]
        public int BitWet { get; set; } // bitWet (Primary key)

        [Column(@"StockID", Order = 19, TypeName = "int")]
        [Display(Name = "Stock ID")]
        public int? StockId { get; set; } // StockID

        [Column(@"FlagID", Order = 20, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID
    }

    // stkvwTiHi
    [Table("stkvwTiHi", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwTiHi
    {
        [Column(@"CustCode", Order = 1, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 2)

        [Column(@"ItemCode", Order = 2, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (length: 12)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Tie", Order = 3, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Tie")]
        public int Tie { get; set; } // Tie (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"High", Order = 4, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "High")]
        public int High { get; set; } // High (Primary key)

        [Column(@"Barcode", Order = 5, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 20)

        [Column(@"CustItem", Order = 6, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Cust item")]
        public string CustItem { get; set; } // CustItem (length: 12)

        [Column(@"LocationID", Order = 7, TypeName = "int")]
        [Display(Name = "Location ID")]
        public int? LocationId { get; set; } // LocationID

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"InfoID", Order = 8, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Info ID")]
        public int InfoId { get; set; } // InfoID (Primary key)

        [Column(@"CreateDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"FlagID", Order = 10, TypeName = "int")]
        [Display(Name = "Flag ID")]
        public int? FlagId { get; set; } // FlagID

        [Column(@"Location", Order = 11, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)
    }

    // StopAssignment
    [Table("StopAssignment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StopAssignment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopNumberId", Order = 1, TypeName = "decimal")]
        [Index(@"PK__StopLoad__2ACBFD9432EB7E57", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeId", Order = 2, TypeName = "decimal")]
        [Index(@"PK__StopLoad__2ACBFD9432EB7E57", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId (Primary key)

        [Column(@"ProformaDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime ProformaDate { get; set; } // ProformaDate

        [Column(@"PercentPick", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Percent pick")]
        public decimal PercentPick { get; set; } // PercentPick

        [Column(@"PercentLoad", Order = 5, TypeName = "decimal")]
        [Required]
        [Display(Name = "Percent load")]
        public decimal PercentLoad { get; set; } // PercentLoad

        [Column(@"WorkDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WorkType", Order = 7, TypeName = "int")]
        [Index(@"PK__StopLoad__2ACBFD9432EB7E57", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work type")]
        public int WorkType { get; set; } // WorkType (Primary key)

        [Column(@"PercentAssigned", Order = 8, TypeName = "decimal")]
        [Display(Name = "Percent assigned")]
        public decimal? PercentAssigned { get; set; } // PercentAssigned

        [Column(@"Created", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Modified", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; } // Modified

        public StopAssignment()
        {
            WorkType = 0;
            Created = System.DateTime.Now;
        }
    }

    // StopPallet
    [Table("StopPallet", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StopPallet
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"StopPalletID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Stop pallet ID")]
        public int StopPalletId { get; set; } // StopPalletID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopNumberID", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Stop number ID")]
        public int StopNumberId { get; set; } // StopNumberID (Primary key)

        [Column(@"PalletsOn", Order = 3, TypeName = "smallint")]
        [Display(Name = "Pallets on")]
        public short? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 4, TypeName = "smallint")]
        [Display(Name = "Pallets off")]
        public short? PalletsOff { get; set; } // PalletsOff

        [Column(@"ActualArrivalDate", Order = 5, TypeName = "smalldatetime")]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 6, TypeName = "smalldatetime")]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate
    }

    // SurName
    [Table("SurName", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SurName
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SurNameID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_SurName", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sur name ID")]
        public decimal SurNameId { get; set; } // SurNameID (Primary key)

        [Column(@"SurName", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Sur name")]
        public string SurName_ { get; set; } // SurName (length: 10)
    }

    // The table 'temp_old' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // temp_old
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TempOld
    {
        [Column(@"ItShpCode", Order = 1, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "It shp code")]
        public string ItShpCode { get; set; } // ItShpCode (length: 2)

        [Column(@"Itemcode", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"ItemDesc", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItnmCode", Order = 4, TypeName = "char")]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Itnm code")]
        public string ItnmCode { get; set; } // ItnmCode (length: 6)

        [Column(@"ItemSize", Order = 5, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"ItLbsCase", Order = 6, TypeName = "numeric")]
        [Display(Name = "It lbs case")]
        public decimal? ItLbsCase { get; set; } // ItLbsCase

        [Column(@"Conv_Item", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Conv item")]
        public string ConvItem { get; set; } // Conv_Item (length: 10)

        [Column(@"Case_Code", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Case code")]
        public string CaseCode { get; set; } // Case_Code (length: 10)

        [Column(@"Promo", Order = 9, TypeName = "bit")]
        [Display(Name = "Promo")]
        public bool? Promo { get; set; } // Promo

        [Column(@"Lip", Order = 10, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip
    }

    // The table 'Test_TimeStamp' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // Test_TimeStamp
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TestTimeStamp
    {
        [Column(@"ReportTime", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Report time")]
        public System.DateTime? ReportTime { get; set; } // ReportTime
    }

    // Tractor
    [Table("Tractor", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Tractor
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TractorID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Tractor", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Tractor ID")]
        public decimal TractorId { get; set; } // TractorID (Primary key)

        [Column(@"Tractor_Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Tractor_Weight", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Tractor weight")]
        public string TractorWeight { get; set; } // Tractor_Weight (length: 10)

        [Column(@"Tractor_Axles", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Tractor axles")]
        public string TractorAxles { get; set; } // Tractor_Axles (length: 10)

        [Column(@"LisStraight_Truck", Order = 5, TypeName = "bit")]
        [Display(Name = "Lis straight truck")]
        public bool? LisStraightTruck { get; set; } // LisStraight_Truck

        [Column(@"LisActive", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis active")]
        public bool LisActive { get; set; } // LisActive

        // Reverse navigation

        /// <summary>
        /// Child RunResources where [RunResource].[TractorID] point to this entity (FK_RunResource_Tractor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources { get; set; } // RunResource.FK_RunResource_Tractor
        /// <summary>
        /// Child ScannedPalletConfirms where [ScannedPalletConfirm].[TractorID] point to this entity (FK_ScannedPalletConfirm_Tractor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ScannedPalletConfirm> ScannedPalletConfirms { get; set; } // ScannedPalletConfirm.FK_ScannedPalletConfirm_Tractor
        /// <summary>
        /// Child TractorProductivities where [Tractor_Productivity].[TractorID] point to this entity (FK_Tractor_Productivity_Tractor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TractorProductivity> TractorProductivities { get; set; } // Tractor_Productivity.FK_Tractor_Productivity_Tractor

        public Tractor()
        {
            LisActive = true;
            RunResources = new ObservableCollection<RunResource>();
            ScannedPalletConfirms = new ObservableCollection<ScannedPalletConfirm>();
            TractorProductivities = new ObservableCollection<TractorProductivity>();
        }
    }

    // Tractor_Calendar
    [Table("Tractor_Calendar", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorCalendar
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Tractor_CalendarID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Tractor_Inactive", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Tractor calendar ID")]
        public decimal TractorCalendarId { get; set; } // Tractor_CalendarID (Primary key)

        [Column(@"TractorID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Tractor ID")]
        public decimal TractorId { get; set; } // TractorID

        [Column(@"DateFrom", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date from")]
        public System.DateTime? DateFrom { get; set; } // DateFrom

        [Column(@"DateTo", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date to")]
        public System.DateTime? DateTo { get; set; } // DateTo

        [Column(@"Tractor_Inactive_Reason_ListID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Tractor inactive reason list ID")]
        public decimal? TractorInactiveReasonListId { get; set; } // Tractor_Inactive_Reason_ListID
    }

    // Tractor_InActive_Reason_List
    [Table("Tractor_InActive_Reason_List", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorInActiveReasonList
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Tractor_Inactive_Reason_ListID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Tractor_InActive_Reason_List", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Tractor inactive reason list ID")]
        public decimal TractorInactiveReasonListId { get; set; } // Tractor_Inactive_Reason_ListID (Primary key)

        [Column(@"Inactive_Reason", Order = 2, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Inactive reason")]
        public string InactiveReason { get; set; } // Inactive_Reason (length: 50)

        [Column(@"lisNotActive", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis not active")]
        public bool LisNotActive { get; set; } // lisNotActive

        public TractorInActiveReasonList()
        {
            LisNotActive = false;
        }
    }

    // Tractor_Productivity
    [Table("Tractor_Productivity", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorProductivity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Tractor_ProductivityID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Tractor_Productivity", 1, IsUnique = true, IsClustered = true)]
        [Index(@"IDX_AGINDEX", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Key]
        [Display(Name = "Tractor productivity ID")]
        public decimal TractorProductivityId { get; set; } // Tractor_ProductivityID (Primary key)

        [Column(@"TractorID", Order = 2, TypeName = "numeric")]
        [Index(@"IDX_TRACTORID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IDX_TRACTORDATE_TRACTORID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IDX_AGINDEX", 2, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Tractor ID")]
        public decimal TractorId { get; set; } // TractorID

        [Column(@"Tractor_Date", Order = 3, TypeName = "datetime")]
        [Index(@"IX_Tractor_Date", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IDX_TRACTORDATE_TRACTORID", 2, IsUnique = false, IsClustered = false)]
        [Index(@"IDX_AGINDEX", 3, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Tractor date")]
        public System.DateTime? TractorDate { get; set; } // Tractor_Date

        [Column(@"Status", Order = 4, TypeName = "numeric")]
        [Index(@"IDX_STATUS", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IDX_AGINDEX", 4, IsUnique = false, IsClustered = false)]
        [Display(Name = "Status")]
        public decimal? Status { get; set; } // Status

        [Column(@"Tractor_Inactive_ReasonID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Tractor inactive reason ID")]
        public decimal? TractorInactiveReasonId { get; set; } // Tractor_Inactive_ReasonID

        // Foreign keys

        /// <summary>
        /// Parent Tractor pointed by [Tractor_Productivity].([TractorId]) (FK_Tractor_Productivity_Tractor)
        /// </summary>
        [ForeignKey("TractorId"), Required] public virtual Tractor Tractor { get; set; } // FK_Tractor_Productivity_Tractor
    }

    // Trailer
    [Table("Trailer", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Trailer
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"TrailerID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Trailer", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer ID")]
        public decimal TrailerId { get; set; } // TrailerID (Primary key)

        [Column(@"Trailer_Name", Order = 2, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Trailer_Length", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"Trailer_Weight", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer weight")]
        public string TrailerWeight { get; set; } // Trailer_Weight (length: 10)

        [Column(@"Trailer_MaxOrderWeight", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer max order weight")]
        public string TrailerMaxOrderWeight { get; set; } // Trailer_MaxOrderWeight (length: 10)

        [Column(@"Trailer_Axles", Order = 6, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer axles")]
        public string TrailerAxles { get; set; } // Trailer_Axles (length: 10)

        [Column(@"LisDryVan", Order = 7, TypeName = "bit")]
        [Display(Name = "Lis dry van")]
        public bool? LisDryVan { get; set; } // LisDryVan

        [Column(@"LisTempControlled", Order = 8, TypeName = "bit")]
        [Display(Name = "Lis temp controlled")]
        public bool? LisTempControlled { get; set; } // LisTempControlled

        [Column(@"LisActive", Order = 9, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis active")]
        public bool LisActive { get; set; } // LisActive

        // Reverse navigation

        /// <summary>
        /// Child RunResources where [RunResource].[TrailerID1] point to this entity (FK_RunResource_Trailer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources_TrailerId1 { get; set; } // RunResource.FK_RunResource_Trailer
        /// <summary>
        /// Child RunResources where [RunResource].[TrailerID2] point to this entity (FK_RunResource_Trailer1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources_TrailerId2 { get; set; } // RunResource.FK_RunResource_Trailer1
        /// <summary>
        /// Child RunResources where [RunResource].[TrailerID3] point to this entity (FK_RunResource_Trailer2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RunResource> RunResources_TrailerId3 { get; set; } // RunResource.FK_RunResource_Trailer2
        /// <summary>
        /// Child ScannedPalletConfirms where [ScannedPalletConfirm].[TrailerID] point to this entity (FK_ScannedPalletConfirm_Trailer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ScannedPalletConfirm> ScannedPalletConfirms { get; set; } // ScannedPalletConfirm.FK_ScannedPalletConfirm_Trailer
        /// <summary>
        /// Child TrailerProductivities where [Trailer_Productivity].[TrailerID] point to this entity (FK_Trailer_Productivity_Trailer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TrailerProductivity> TrailerProductivities { get; set; } // Trailer_Productivity.FK_Trailer_Productivity_Trailer

        public Trailer()
        {
            LisActive = true;
            RunResources_TrailerId1 = new ObservableCollection<RunResource>();
            RunResources_TrailerId2 = new ObservableCollection<RunResource>();
            RunResources_TrailerId3 = new ObservableCollection<RunResource>();
            ScannedPalletConfirms = new ObservableCollection<ScannedPalletConfirm>();
            TrailerProductivities = new ObservableCollection<TrailerProductivity>();
        }
    }

    // Trailer_Calendar
    [Table("Trailer_Calendar", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerCalendar
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Trailer_CalendarID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Trailer_Inactive", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer calendar ID")]
        public decimal TrailerCalendarId { get; set; } // Trailer_CalendarID (Primary key)

        [Column(@"TrailerID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Trailer ID")]
        public decimal TrailerId { get; set; } // TrailerID

        [Column(@"DateFrom", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date from")]
        public System.DateTime? DateFrom { get; set; } // DateFrom

        [Column(@"DateTo", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date to")]
        public System.DateTime? DateTo { get; set; } // DateTo

        [Column(@"Trailer_Inactive_Reason_ListID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Trailer inactive reason list ID")]
        public decimal? TrailerInactiveReasonListId { get; set; } // Trailer_Inactive_Reason_ListID
    }

    // Trailer_Inactive_Reason_List
    [Table("Trailer_Inactive_Reason_List", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerInactiveReasonList
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Trailer_Inactive_Reason_ListID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Trailer_Inactive_Reason", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer inactive reason list ID")]
        public decimal TrailerInactiveReasonListId { get; set; } // Trailer_Inactive_Reason_ListID (Primary key)

        [Column(@"Inactive_Reason", Order = 2, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Inactive reason")]
        public string InactiveReason { get; set; } // Inactive_Reason (length: 50)

        [Column(@"lisNotActive", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Lis not active")]
        public bool LisNotActive { get; set; } // lisNotActive

        public TrailerInactiveReasonList()
        {
            LisNotActive = false;
        }
    }

    // Trailer_Productivity
    [Table("Trailer_Productivity", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerProductivity
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Trailer_ProductivityID", Order = 1, TypeName = "numeric")]
        [Index(@"PK_Trailer_Productivity", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Trailer productivity ID")]
        public decimal TrailerProductivityId { get; set; } // Trailer_ProductivityID (Primary key)

        [Column(@"TrailerID", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Trailer ID")]
        public decimal TrailerId { get; set; } // TrailerID

        [Column(@"Trailer_Date", Order = 3, TypeName = "datetime")]
        [Index(@"IX_Trailer_Date", 1, IsUnique = false, IsClustered = false)]
        [DataType(DataType.DateTime)]
        [Display(Name = "Trailer date")]
        public System.DateTime? TrailerDate { get; set; } // Trailer_Date

        [Column(@"Status", Order = 4, TypeName = "numeric")]
        [Display(Name = "Status")]
        public decimal? Status { get; set; } // Status

        [Column(@"Trailer_Inactive_ReasonID", Order = 5, TypeName = "numeric")]
        [Display(Name = "Trailer inactive reason ID")]
        public decimal? TrailerInactiveReasonId { get; set; } // Trailer_Inactive_ReasonID

        // Foreign keys

        /// <summary>
        /// Parent Trailer pointed by [Trailer_Productivity].([TrailerId]) (FK_Trailer_Productivity_Trailer)
        /// </summary>
        [ForeignKey("TrailerId"), Required] public virtual Trailer Trailer { get; set; } // FK_Trailer_Productivity_Trailer
    }

    // vwAllOrders
    [Table("vwAllOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAllOrder
    {
        [Column(@"OrderNumber", Order = 1, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [Column(@"ShipperShipDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"CreateDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"Notes", Order = 6, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 7, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperID", Order = 8, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Shipper ID")]
        public decimal ShipperId { get; set; } // ShipperID (Primary key)

        [Column(@"Consignee", Order = 9, TypeName = "numeric")]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // Consignee

        [Column(@"ShipperNumber", Order = 10, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"PO_Number", Order = 11, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"source", Order = 12, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(1)]
        [StringLength(1)]
        [Key]
        [Display(Name = "Source")]
        public string Source { get; set; } // source (Primary key) (length: 1)

        [Column(@"ShipCode", Order = 13, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"ConsCode", Order = 14, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"FlagID", Order = 15, TypeName = "numeric")]
        [Display(Name = "Flag ID")]
        public decimal? FlagId { get; set; } // FlagID
    }

    // vwCompanyLocation
    [Table("vwCompanyLocation", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwCompanyLocation
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WMSCode", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (Primary key) (length: 18)

        [Column(@"ParentCompany", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Parent company")]
        public string ParentCompany { get; set; } // ParentCompany (length: 10)

        [Column(@"Expr1", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Expr 1")]
        public string Expr1 { get; set; } // Expr1 (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Type", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Type1", Order = 6, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Type 1")]
        public string Type1 { get; set; } // Type1 (Primary key) (length: 10)

        [Column(@"AlternateName", Order = 7, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Alternate name")]
        public string AlternateName { get; set; } // AlternateName (length: 10)

        [Column(@"Street1", Order = 8, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 9, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"Street3", Order = 10, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 3")]
        public string Street3 { get; set; } // Street3 (length: 25)

        [Column(@"City", Order = 11, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 12, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 13, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"Appointment", Order = 14, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Appointment")]
        public string Appointment { get; set; } // Appointment (length: 10)

        [Column(@"Notes", Order = 15, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 2000)

        [Column(@"PhoneNumber", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"PO_Fax", Order = 17, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"Require_Audit", Order = 18, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyLocationID", Order = 19, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID (Primary key)

        [Column(@"PMCustNo", Order = 20, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Pmc ust no")]
        public string PmCustNo { get; set; } // PMCustNo (length: 5)
    }

    // vwConsigneeFax
    [Table("vwConsigneeFax", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwConsigneeFax
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CompanyLocationID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Company location ID")]
        public decimal CompanyLocationId { get; set; } // CompanyLocationID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [Column(@"FaxNumber", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Fax number")]
        public string FaxNumber { get; set; } // FaxNumber (length: 30)

        [Column(@"City", Order = 4, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 5, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperID", Order = 6, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Shipper ID")]
        public decimal ShipperId { get; set; } // ShipperID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 7, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 8, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [Column(@"PlannedShipDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"StopPlannedArrivalDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Stop planned arrival date")]
        public System.DateTime? StopPlannedArrivalDate { get; set; } // StopPlannedArrivalDate

        [Column(@"PO_Fax", Order = 11, TypeName = "bit")]
        [Display(Name = "Po fax")]
        public bool? PoFax { get; set; } // PO_Fax

        [Column(@"ShipperNumber", Order = 12, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"PO_Number", Order = 13, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ContactBlnk", Order = 14, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Contact blnk")]
        public string ContactBlnk { get; set; } // ContactBlnk (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Shipper", Order = 15, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (Primary key) (length: 30)

        [Column(@"ProformaDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate
    }

    // vwContacts
    [Table("vwContacts", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwContact
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WMSCode", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (Primary key) (length: 18)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyID", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Company ID")]
        public decimal CompanyId { get; set; } // CompanyID (Primary key)

        [Column(@"ContactType", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Contact type")]
        public string ContactType { get; set; } // ContactType (length: 10)

        [Column(@"ContactBlnk", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Contact blnk")]
        public string ContactBlnk { get; set; } // ContactBlnk (length: 50)

        [Column(@"PhoneNumber", Order = 6, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"Email", Order = 7, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 50)

        [Column(@"Notes", Order = 8, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)
    }

    // vwContactsLegacy
    [Table("vwContactsLegacy", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwContactsLegacy
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CompanyID", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Company ID")]
        public decimal CompanyId { get; set; } // CompanyID (Primary key)

        [Column(@"Owner", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Owner")]
        public string Owner { get; set; } // Owner (length: 50)

        [Column(@"O_Phone", Order = 4, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "O phone")]
        public string OPhone { get; set; } // O_Phone (length: 30)

        [Column(@"Buyer", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Buyer")]
        public string Buyer { get; set; } // Buyer (length: 50)

        [Column(@"B_Phone", Order = 6, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "B phone")]
        public string BPhone { get; set; } // B_Phone (length: 30)

        [Column(@"Receiver", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Receiver")]
        public string Receiver { get; set; } // Receiver (length: 50)

        [Column(@"R_Phone", Order = 8, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "R phone")]
        public string RPhone { get; set; } // R_Phone (length: 30)

        [Column(@"Whse_Mgr", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Whse mgr")]
        public string WhseMgr { get; set; } // Whse_Mgr (length: 50)

        [Column(@"W_Phone", Order = 10, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "W phone")]
        public string WPhone { get; set; } // W_Phone (length: 30)
    }

    // vwDispatch
    [Table("vwDispatch", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatch
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"Driver", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (length: 5)

        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (length: 200)

        [Column(@"Condition", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 20, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"RunID", Order = 22, TypeName = "numeric")]
        [Display(Name = "Run ID")]
        public decimal? RunId { get; set; } // RunID

        [Column(@"RunSequence", Order = 23, TypeName = "numeric")]
        [Display(Name = "Run sequence")]
        public decimal? RunSequence { get; set; } // RunSequence

        [Column(@"StopSequence", Order = 24, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"RunDate", Order = 25, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"Trailer_Length", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"SecondRun", Order = 29, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"PickUp", Order = 30, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Trailer2_Name", Order = 31, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2 name")]
        public string Trailer2Name { get; set; } // Trailer2_Name (length: 50)

        [Column(@"Trailer2_Length", Order = 32, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 2 length")]
        public string Trailer2Length { get; set; } // Trailer2_Length (length: 10)

        [Column(@"Trailer3_Name", Order = 33, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3 name")]
        public string Trailer3Name { get; set; } // Trailer3_Name (length: 50)

        [Column(@"Trailer3_Length", Order = 34, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 3 length")]
        public string Trailer3Length { get; set; } // Trailer3_Length (length: 10)

        [Column(@"Driver2", Order = 35, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 2")]
        public string Driver2 { get; set; } // Driver2 (length: 50)

        [Column(@"StopNotes", Order = 36, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (length: 200)

        [Column(@"Require_Audit", Order = 37, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 38, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 39, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"RunNotes", Order = 40, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (length: 800)

        [Column(@"SameDayPieces", Order = 41, TypeName = "numeric")]
        [Display(Name = "Same day pieces")]
        public decimal? SameDayPieces { get; set; } // SameDayPieces

        [Column(@"SameDayWeight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Same day weight")]
        public decimal? SameDayWeight { get; set; } // SameDayWeight

        [Column(@"LeavePieces", Order = 43, TypeName = "numeric")]
        [Display(Name = "Leave pieces")]
        public decimal? LeavePieces { get; set; } // LeavePieces

        [Column(@"LeaveWeight", Order = 44, TypeName = "numeric")]
        [Display(Name = "Leave weight")]
        public decimal? LeaveWeight { get; set; } // LeaveWeight

        [Column(@"ConsigneeNotes", Order = 45, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (length: 2000)

        [Column(@"SameDay", Order = 46, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 47, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperType", Order = 48, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (Primary key) (length: 10)

        [Column(@"ProformaDate", Order = 49, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Status", Order = 50, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DayStatus", Order = 51, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Key]
        [Display(Name = "Day status")]
        public string DayStatus { get; set; } // DayStatus (Primary key) (length: 7)

        [Column(@"StopNumberID", Order = 52, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"PlannedArrivalDate", Order = 53, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 54, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 55, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"PalletsOn", Order = 56, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 57, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PlannedDepartDate", Order = 58, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"RunNumberID", Order = 59, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"OrderID", Order = 60, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LineItems", Order = 61, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Line items")]
        public int LineItems { get; set; } // LineItems (Primary key)
    }

    // vwDispatchApp
    [Table("vwDispatchApp", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchApp
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedStartTime", Order = 4, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Planned start time")]
        public string PlannedStartTime { get; set; } // PlannedStartTime (length: 20)

        [Column(@"PlannedStartTimeDT", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned start time dt")]
        public System.DateTime? PlannedStartTimeDt { get; set; } // PlannedStartTimeDT

        [Column(@"PlannedDriver", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned driver")]
        public string PlannedDriver { get; set; } // PlannedDriver (length: 50)

        [Column(@"PlannedTractor", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned tractor")]
        public string PlannedTractor { get; set; } // PlannedTractor (length: 50)

        [Column(@"PlannedTrailer", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned trailer")]
        public string PlannedTrailer { get; set; } // PlannedTrailer (length: 50)

        [Column(@"RunDriver", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Run driver")]
        public string RunDriver { get; set; } // RunDriver (length: 50)

        [Column(@"StartTime", Order = 10, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Start time")]
        public string StartTime { get; set; } // StartTime (length: 20)

        [Column(@"StartTimeDT", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start time dt")]
        public System.DateTime? StartTimeDt { get; set; } // StartTimeDT

        [Column(@"Tractor", Order = 12, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 100)

        [Column(@"TruckNumber", Order = 13, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Truck number")]
        public string TruckNumber { get; set; } // TruckNumber (length: 100)

        [Column(@"Trailer", Order = 14, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trailer")]
        public string Trailer { get; set; } // Trailer (length: 100)

        [Column(@"TrailerEnd", Order = 15, TypeName = "int")]
        [Display(Name = "Trailer end")]
        public int? TrailerEnd { get; set; } // TrailerEnd

        [Column(@"EndTime", Order = 16, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "End time")]
        public string EndTime { get; set; } // EndTime (length: 20)

        [Column(@"EndTimeDT", Order = 17, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End time dt")]
        public System.DateTime? EndTimeDt { get; set; } // EndTimeDT

        [Column(@"Comments", Order = 18, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 1073741823)

        [Column(@"ConsCode", Order = 19, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"Name", Order = 20, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"ApptStart", Order = 21, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appt start")]
        public string ApptStart { get; set; } // ApptStart (length: 20)

        [Column(@"ApptEnd", Order = 22, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appt end")]
        public string ApptEnd { get; set; } // ApptEnd (length: 20)

        [Column(@"ApptStartDT", Order = 23, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt start dt")]
        public System.DateTime? ApptStartDt { get; set; } // ApptStartDT

        [Column(@"ApptEndDT", Order = 24, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt end dt")]
        public System.DateTime? ApptEndDt { get; set; } // ApptEndDT

        [Column(@"UAD", Order = 25, TypeName = "bit")]
        [Display(Name = "Uad")]
        public bool? Uad { get; set; } // UAD

        [Column(@"Driver", Order = 26, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Arrive", Order = 27, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Arrive")]
        public string Arrive { get; set; } // Arrive (length: 20)

        [Column(@"Depart", Order = 28, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Depart")]
        public string Depart { get; set; } // Depart (length: 20)

        [Column(@"StartScan", Order = 29, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Start scan")]
        public string StartScan { get; set; } // StartScan (length: 20)

        [Column(@"ArriveDT", Order = 30, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Arrive dt")]
        public System.DateTime? ArriveDt { get; set; } // ArriveDT

        [Column(@"DepartDT", Order = 31, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart dt")]
        public System.DateTime? DepartDt { get; set; } // DepartDT

        [Column(@"StartScanDT", Order = 32, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start scan dt")]
        public System.DateTime? StartScanDt { get; set; } // StartScanDT

        [Column(@"Type", Order = 33, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 34, TypeName = "bit")]
        [Display(Name = "Late")]
        public bool? Late { get; set; } // Late

        [Column(@"CasesOnBills", Order = 35, TypeName = "int")]
        [Display(Name = "Cases on bills")]
        public int? CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 36, TypeName = "int")]
        [Display(Name = "Delivered cases")]
        public int? DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 37, TypeName = "bit")]
        [Display(Name = "Over short")]
        public bool? OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 38, TypeName = "bit")]
        [Display(Name = "Damage")]
        public bool? Damage { get; set; } // Damage

        [Column(@"CalledInOSD", Order = 39, TypeName = "bit")]
        [Display(Name = "Called in osd")]
        public bool? CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 40, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 1073741823)

        [Column(@"PalletsOff", Order = 41, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 42, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"Delayed", Order = 43, TypeName = "bit")]
        [Display(Name = "Delayed")]
        public bool? Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 44, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 1073741823)

        [Column(@"GPSLatitude", Order = 45, TypeName = "decimal")]
        [Display(Name = "Gpsl atitude")]
        public decimal? GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 46, TypeName = "decimal")]
        [Display(Name = "Gpsl ongitude")]
        public decimal? GpsLongitude { get; set; } // GPSLongitude

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 47, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNumberID", Order = 48, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopSequence", Order = 49, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"StopNumberID", Order = 50, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Orders", Order = 51, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"Peices", Order = 52, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 53, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Street1", Order = 54, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 55, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"City", Order = 56, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 57, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"Zip", Order = 58, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip (length: 10)

        [Column(@"PhoneNumber", Order = 59, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"NoEarly", Order = 60, TypeName = "bit")]
        [Display(Name = "No early")]
        public bool? NoEarly { get; set; } // NoEarly
    }

    // vwDispatchAppAll
    [Table("vwDispatchAppAll", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppAll
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 3, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"PlannedStartTime", Order = 4, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Planned start time")]
        public string PlannedStartTime { get; set; } // PlannedStartTime (length: 20)

        [Column(@"PlannedStartTimeDT", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned start time dt")]
        public System.DateTime? PlannedStartTimeDt { get; set; } // PlannedStartTimeDT

        [Column(@"PlannedDriver", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned driver")]
        public string PlannedDriver { get; set; } // PlannedDriver (length: 50)

        [Column(@"PlannedTractor", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned tractor")]
        public string PlannedTractor { get; set; } // PlannedTractor (length: 50)

        [Column(@"PlannedTrailer", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned trailer")]
        public string PlannedTrailer { get; set; } // PlannedTrailer (length: 50)

        [Column(@"RunDriver", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Run driver")]
        public string RunDriver { get; set; } // RunDriver (length: 50)

        [Column(@"StartTime", Order = 10, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Start time")]
        public string StartTime { get; set; } // StartTime (length: 20)

        [Column(@"StartTimeDT", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start time dt")]
        public System.DateTime? StartTimeDt { get; set; } // StartTimeDT

        [Column(@"Tractor", Order = 12, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 100)

        [Column(@"TruckNumber", Order = 13, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Truck number")]
        public string TruckNumber { get; set; } // TruckNumber (length: 100)

        [Column(@"Trailer", Order = 14, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trailer")]
        public string Trailer { get; set; } // Trailer (length: 100)

        [Column(@"TrailerEnd", Order = 15, TypeName = "int")]
        [Display(Name = "Trailer end")]
        public int? TrailerEnd { get; set; } // TrailerEnd

        [Column(@"EndTime", Order = 16, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "End time")]
        public string EndTime { get; set; } // EndTime (length: 20)

        [Column(@"EndTimeDT", Order = 17, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End time dt")]
        public System.DateTime? EndTimeDt { get; set; } // EndTimeDT

        [Column(@"Comments", Order = 18, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 1073741823)

        [Column(@"ConsCode", Order = 19, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"Name", Order = 20, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 500)

        [Column(@"ApptStart", Order = 21, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appt start")]
        public string ApptStart { get; set; } // ApptStart (length: 20)

        [Column(@"ApptEnd", Order = 22, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appt end")]
        public string ApptEnd { get; set; } // ApptEnd (length: 20)

        [Column(@"ApptStartDT", Order = 23, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt start dt")]
        public System.DateTime? ApptStartDt { get; set; } // ApptStartDT

        [Column(@"ApptEndDT", Order = 24, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt end dt")]
        public System.DateTime? ApptEndDt { get; set; } // ApptEndDT

        [Column(@"UAD", Order = 25, TypeName = "bit")]
        [Display(Name = "Uad")]
        public bool? Uad { get; set; } // UAD

        [Column(@"Driver", Order = 26, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Arrive", Order = 27, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Arrive")]
        public string Arrive { get; set; } // Arrive (length: 20)

        [Column(@"Depart", Order = 28, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Depart")]
        public string Depart { get; set; } // Depart (length: 20)

        [Column(@"StartScan", Order = 29, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Start scan")]
        public string StartScan { get; set; } // StartScan (length: 20)

        [Column(@"ArriveDT", Order = 30, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Arrive dt")]
        public System.DateTime? ArriveDt { get; set; } // ArriveDT

        [Column(@"DepartDT", Order = 31, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart dt")]
        public System.DateTime? DepartDt { get; set; } // DepartDT

        [Column(@"StartScanDT", Order = 32, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start scan dt")]
        public System.DateTime? StartScanDt { get; set; } // StartScanDT

        [Column(@"Type", Order = 33, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 34, TypeName = "bit")]
        [Display(Name = "Late")]
        public bool? Late { get; set; } // Late

        [Column(@"CasesOnBills", Order = 35, TypeName = "int")]
        [Display(Name = "Cases on bills")]
        public int? CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 36, TypeName = "int")]
        [Display(Name = "Delivered cases")]
        public int? DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 37, TypeName = "bit")]
        [Display(Name = "Over short")]
        public bool? OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 38, TypeName = "bit")]
        [Display(Name = "Damage")]
        public bool? Damage { get; set; } // Damage

        [Column(@"CalledInOSD", Order = 39, TypeName = "bit")]
        [Display(Name = "Called in osd")]
        public bool? CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 40, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 30)

        [Column(@"PalletsOff", Order = 41, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 42, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"Delayed", Order = 43, TypeName = "bit")]
        [Display(Name = "Delayed")]
        public bool? Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 44, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 500)

        [Column(@"GPSLatitude", Order = 45, TypeName = "decimal")]
        [Display(Name = "Gpsl atitude")]
        public decimal? GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 46, TypeName = "decimal")]
        [Display(Name = "Gpsl ongitude")]
        public decimal? GpsLongitude { get; set; } // GPSLongitude

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 47, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNumberID", Order = 48, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopSequence", Order = 49, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"StopNumberID", Order = 50, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Orders", Order = 51, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"Peices", Order = 52, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 53, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Street1", Order = 54, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 55, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"City", Order = 56, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 100)

        [Column(@"State", Order = 57, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 50)

        [Column(@"Zip", Order = 58, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip (length: 50)

        [Column(@"PhoneNumber", Order = 59, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"NoEarly", Order = 60, TypeName = "bit")]
        [Display(Name = "No early")]
        public bool? NoEarly { get; set; } // NoEarly

        [Column(@"PrevStopSequence", Order = 61, TypeName = "numeric")]
        [Display(Name = "Prev stop sequence")]
        public decimal? PrevStopSequence { get; set; } // PrevStopSequence

        [Column(@"PrevZip", Order = 62, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Prev zip")]
        public string PrevZip { get; set; } // PrevZip (length: 5)

        [Column(@"EstMiles", Order = 63, TypeName = "numeric")]
        [Display(Name = "Est miles")]
        public decimal? EstMiles { get; set; } // EstMiles

        [Column(@"EstDriveTime", Order = 64, TypeName = "smallint")]
        [Display(Name = "Est drive time")]
        public short? EstDriveTime { get; set; } // EstDriveTime

        [Column(@"PrevDeptDT", Order = 65, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Prev dept dt")]
        public System.DateTime? PrevDeptDt { get; set; } // PrevDeptDT

        [Column(@"ActDriveTime", Order = 66, TypeName = "int")]
        [Display(Name = "Act drive time")]
        public int? ActDriveTime { get; set; } // ActDriveTime
    }

    // The table 'vwDispatchAppAllStops' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwDispatchAppAllStops
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppAllStop
    {
        [Column(@"RunNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopSequence", Order = 2, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"StopNumberID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"ConsCode", Order = 4, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"NAME", Order = 5, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Name")]
        public string Name { get; set; } // NAME (length: 500)

        [Column(@"ApptStartDT", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt start dt")]
        public System.DateTime? ApptStartDt { get; set; } // ApptStartDT

        [Column(@"ApptEndDT", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt end dt")]
        public System.DateTime? ApptEndDt { get; set; } // ApptEndDT

        [Column(@"UAD", Order = 8, TypeName = "bit")]
        [Display(Name = "Uad")]
        public bool? Uad { get; set; } // UAD

        [Column(@"Driver", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"ArriveDT", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Arrive dt")]
        public System.DateTime? ArriveDt { get; set; } // ArriveDT

        [Column(@"DepartDT", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart dt")]
        public System.DateTime? DepartDt { get; set; } // DepartDT

        [Column(@"StartScanDT", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start scan dt")]
        public System.DateTime? StartScanDt { get; set; } // StartScanDT

        [Column(@"Type", Order = 13, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 14, TypeName = "bit")]
        [Display(Name = "Late")]
        public bool? Late { get; set; } // Late

        [Column(@"CasesOnBills", Order = 15, TypeName = "int")]
        [Display(Name = "Cases on bills")]
        public int? CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 16, TypeName = "int")]
        [Display(Name = "Delivered cases")]
        public int? DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 17, TypeName = "bit")]
        [Display(Name = "Over short")]
        public bool? OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 18, TypeName = "bit")]
        [Display(Name = "Damage")]
        public bool? Damage { get; set; } // Damage

        [Column(@"CalledInOSD", Order = 19, TypeName = "bit")]
        [Display(Name = "Called in osd")]
        public bool? CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 20, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 30)

        [Column(@"PalletsOff", Order = 21, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 22, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"Delayed", Order = 23, TypeName = "bit")]
        [Display(Name = "Delayed")]
        public bool? Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 24, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 500)

        [Column(@"GPSLatitude", Order = 25, TypeName = "decimal")]
        [Display(Name = "Gpsl atitude")]
        public decimal? GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 26, TypeName = "decimal")]
        [Display(Name = "Gpsl ongitude")]
        public decimal? GpsLongitude { get; set; } // GPSLongitude

        [Column(@"Orders", Order = 27, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"Peices", Order = 28, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 29, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Street1", Order = 30, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 31, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"City", Order = 32, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 100)

        [Column(@"STATE", Order = 33, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "State")]
        public string State { get; set; } // STATE (length: 50)

        [Column(@"Zip", Order = 34, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip (length: 50)

        [Column(@"PhoneNumber", Order = 35, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"NoEarly", Order = 36, TypeName = "bit")]
        [Display(Name = "No early")]
        public bool? NoEarly { get; set; } // NoEarly

        [Column(@"PrevStopSequence", Order = 37, TypeName = "numeric")]
        [Display(Name = "Prev stop sequence")]
        public decimal? PrevStopSequence { get; set; } // PrevStopSequence

        [Column(@"PrevZip", Order = 38, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Prev zip")]
        public string PrevZip { get; set; } // PrevZip (length: 5)

        [Column(@"EstMiles", Order = 39, TypeName = "numeric")]
        [Display(Name = "Est miles")]
        public decimal? EstMiles { get; set; } // EstMiles

        [Column(@"EstDriveTime", Order = 40, TypeName = "smallint")]
        [Display(Name = "Est drive time")]
        public short? EstDriveTime { get; set; } // EstDriveTime

        [Column(@"PrevDeptDT", Order = 41, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Prev dept dt")]
        public System.DateTime? PrevDeptDt { get; set; } // PrevDeptDT

        [Column(@"ActDriveTime", Order = 42, TypeName = "int")]
        [Display(Name = "Act drive time")]
        public int? ActDriveTime { get; set; } // ActDriveTime
    }

    // vwDispatchAppArchive
    [Table("vwDispatchAppArchive", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppArchive
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedStartTime", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned start time")]
        public System.DateTime? PlannedStartTime { get; set; } // PlannedStartTime

        [Column(@"RunDriver", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Run driver")]
        public string RunDriver { get; set; } // RunDriver (length: 50)

        [Column(@"StartTime", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start time")]
        public System.DateTime? StartTime { get; set; } // StartTime

        [Column(@"Tractor", Order = 7, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 100)

        [Column(@"TruckNumber", Order = 8, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Truck number")]
        public string TruckNumber { get; set; } // TruckNumber (length: 100)

        [Column(@"Trailer", Order = 9, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trailer")]
        public string Trailer { get; set; } // Trailer (length: 100)

        [Column(@"TrailerEnd", Order = 10, TypeName = "int")]
        [Display(Name = "Trailer end")]
        public int? TrailerEnd { get; set; } // TrailerEnd

        [Column(@"EndTime", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End time")]
        public System.DateTime? EndTime { get; set; } // EndTime

        [Column(@"Comments", Order = 12, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 1073741823)

        [Column(@"ConsCode", Order = 13, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"Name", Order = 14, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"ApptStart", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt start")]
        public System.DateTime? ApptStart { get; set; } // ApptStart

        [Column(@"ApptEnd", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt end")]
        public System.DateTime? ApptEnd { get; set; } // ApptEnd

        [Column(@"UAD", Order = 17, TypeName = "bit")]
        [Display(Name = "Uad")]
        public bool? Uad { get; set; } // UAD

        [Column(@"Driver", Order = 18, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Arrive", Order = 19, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Arrive")]
        public System.DateTime? Arrive { get; set; } // Arrive

        [Column(@"StartScan", Order = 20, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start scan")]
        public System.DateTime? StartScan { get; set; } // StartScan

        [Column(@"Depart", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart")]
        public System.DateTime? Depart { get; set; } // Depart

        [Column(@"Type", Order = 22, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 23, TypeName = "bit")]
        [Display(Name = "Late")]
        public bool? Late { get; set; } // Late

        [Column(@"CasesOnBills", Order = 24, TypeName = "int")]
        [Display(Name = "Cases on bills")]
        public int? CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 25, TypeName = "int")]
        [Display(Name = "Delivered cases")]
        public int? DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 26, TypeName = "bit")]
        [Display(Name = "Over short")]
        public bool? OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 27, TypeName = "bit")]
        [Display(Name = "Damage")]
        public bool? Damage { get; set; } // Damage

        [Column(@"CalledInOSD", Order = 28, TypeName = "bit")]
        [Display(Name = "Called in osd")]
        public bool? CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 29, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 1073741823)

        [Column(@"PalletsOff", Order = 30, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 31, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"Delayed", Order = 32, TypeName = "bit")]
        [Display(Name = "Delayed")]
        public bool? Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 33, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 1073741823)

        [Column(@"GPSLatitude", Order = 34, TypeName = "decimal")]
        [Display(Name = "Gpsl atitude")]
        public decimal? GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 35, TypeName = "decimal")]
        [Display(Name = "Gpsl ongitude")]
        public decimal? GpsLongitude { get; set; } // GPSLongitude

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 36, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNumberID", Order = 37, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"StopSequence", Order = 38, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"StopNumberID", Order = 39, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Orders", Order = 40, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"Peices", Order = 41, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"Street1", Order = 43, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 1")]
        public string Street1 { get; set; } // Street1 (length: 25)

        [Column(@"Street2", Order = 44, TypeName = "char")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Street 2")]
        public string Street2 { get; set; } // Street2 (length: 25)

        [Column(@"City", Order = 45, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 46, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"Zip", Order = 47, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip (length: 10)

        [Column(@"PhoneNumber", Order = 48, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 30)

        [Column(@"NoEarly", Order = 49, TypeName = "bit")]
        [Display(Name = "No early")]
        public bool? NoEarly { get; set; } // NoEarly

        [Column(@"StopTime", Order = 50, TypeName = "int")]
        [Display(Name = "Stop time")]
        public int? StopTime { get; set; } // StopTime

        [Column(@"DeliveryTime", Order = 51, TypeName = "int")]
        [Display(Name = "Delivery time")]
        public int? DeliveryTime { get; set; } // DeliveryTime
    }

    // vwDispatchAppRun
    [Table("vwDispatchAppRun", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppRun
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNumberID", Order = 3, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"ProformaDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 6, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedStartTime", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned start time")]
        public System.DateTime? PlannedStartTime { get; set; } // PlannedStartTime

        [Column(@"PlannedDriver", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned driver")]
        public string PlannedDriver { get; set; } // PlannedDriver (length: 50)

        [Column(@"PlannedTractor", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned tractor")]
        public string PlannedTractor { get; set; } // PlannedTractor (length: 50)

        [Column(@"PlannedTrailer", Order = 10, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned trailer")]
        public string PlannedTrailer { get; set; } // PlannedTrailer (length: 50)

        [Column(@"Driver", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"StartTime", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start time")]
        public System.DateTime? StartTime { get; set; } // StartTime

        [Column(@"DepartTime", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart time")]
        public System.DateTime? DepartTime { get; set; } // DepartTime

        [Column(@"Tractor", Order = 14, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 100)

        [Column(@"TractorStart", Order = 15, TypeName = "int")]
        [Display(Name = "Tractor start")]
        public int? TractorStart { get; set; } // TractorStart

        [Column(@"TractorEnd", Order = 16, TypeName = "int")]
        [Display(Name = "Tractor end")]
        public int? TractorEnd { get; set; } // TractorEnd

        [Column(@"Trailer", Order = 17, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Trailer")]
        public string Trailer { get; set; } // Trailer (length: 100)

        [Column(@"TrailerEnd", Order = 18, TypeName = "int")]
        [Display(Name = "Trailer end")]
        public int? TrailerEnd { get; set; } // TrailerEnd

        [Column(@"EndTime", Order = 19, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "End time")]
        public System.DateTime? EndTime { get; set; } // EndTime

        [Column(@"Comments", Order = 20, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (length: 1073741823)

        [Column(@"Created", Order = 21, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"LastMod", Order = 22, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Last mod")]
        public System.DateTime? LastMod { get; set; } // LastMod

        [Column(@"PalletJack", Order = 23, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Pallet jack")]
        public string PalletJack { get; set; } // PalletJack (length: 100)

        [Column(@"2Wheeler", Order = 24, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "2 Wheeler")]
        public string C2Wheeler { get; set; } // 2Wheeler (length: 100)

        [Column(@"UBoat", Order = 25, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Ub oat")]
        public string UBoat { get; set; } // UBoat (length: 100)

        [Column(@"Scanner", Order = 26, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Scanner")]
        public string Scanner { get; set; } // Scanner (length: 100)

        [Column(@"Pigtail", Order = 27, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Pigtail")]
        public string Pigtail { get; set; } // Pigtail (length: 100)
    }

    // vwDispatchAppRunStop
    [Table("vwDispatchAppRunStop", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppRunStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"StopNumberID", Order = 4, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"ConsCode", Order = 5, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"Name", Order = 6, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Column(@"City", Order = 7, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 8, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"Zip", Order = 9, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip (length: 10)

        [Column(@"ApptStart", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt start")]
        public System.DateTime? ApptStart { get; set; } // ApptStart

        [Column(@"ApptEnd", Order = 11, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Appt end")]
        public System.DateTime? ApptEnd { get; set; } // ApptEnd

        [Column(@"Arrive", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Arrive")]
        public System.DateTime? Arrive { get; set; } // Arrive

        [Column(@"Depart", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart")]
        public System.DateTime? Depart { get; set; } // Depart

        [Column(@"StartScan", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Start scan")]
        public System.DateTime? StartScan { get; set; } // StartScan

        [Column(@"Type", Order = 15, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 200)

        [Column(@"Late", Order = 16, TypeName = "bit")]
        [Display(Name = "Late")]
        public bool? Late { get; set; } // Late

        [Column(@"CasesOnBills", Order = 17, TypeName = "int")]
        [Display(Name = "Cases on bills")]
        public int? CasesOnBills { get; set; } // CasesOnBills

        [Column(@"DeliveredCases", Order = 18, TypeName = "int")]
        [Display(Name = "Delivered cases")]
        public int? DeliveredCases { get; set; } // DeliveredCases

        [Column(@"OverShort", Order = 19, TypeName = "bit")]
        [Display(Name = "Over short")]
        public bool? OverShort { get; set; } // OverShort

        [Column(@"Damage", Order = 20, TypeName = "bit")]
        [Display(Name = "Damage")]
        public bool? Damage { get; set; } // Damage

        [Column(@"CalledInOSD", Order = 21, TypeName = "bit")]
        [Display(Name = "Called in osd")]
        public bool? CalledInOsd { get; set; } // CalledInOSD

        [Column(@"OSDComments", Order = 22, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Osdc omments")]
        public string OsdComments { get; set; } // OSDComments (length: 1073741823)

        [Column(@"PalletsOff", Order = 23, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PalletsOn", Order = 24, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"Delayed", Order = 25, TypeName = "bit")]
        [Display(Name = "Delayed")]
        public bool? Delayed { get; set; } // Delayed

        [Column(@"GeneralComments", Order = 26, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "General comments")]
        public string GeneralComments { get; set; } // GeneralComments (length: 1073741823)

        [Column(@"Driver", Order = 27, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"GPSLatitude", Order = 28, TypeName = "decimal")]
        [Display(Name = "Gpsl atitude")]
        public decimal? GpsLatitude { get; set; } // GPSLatitude

        [Column(@"GPSLongitude", Order = 29, TypeName = "decimal")]
        [Display(Name = "Gpsl ongitude")]
        public decimal? GpsLongitude { get; set; } // GPSLongitude

        [Column(@"Created", Order = 30, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"LastMod", Order = 31, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Last mod")]
        public System.DateTime? LastMod { get; set; } // LastMod

        [Column(@"Orders", Order = 32, TypeName = "int")]
        [Display(Name = "Orders")]
        public int? Orders { get; set; } // Orders

        [Column(@"Peices", Order = 33, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 34, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"ProformaDate", Order = 35, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate
    }

    // vwDispatchAppUnplanned
    [Table("vwDispatchAppUnplanned", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppUnplanned
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Driver", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"StopDateTime", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Stop date time")]
        public System.DateTime? StopDateTime { get; set; } // StopDateTime

        [Column(@"DepartDateTime", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Depart date time")]
        public System.DateTime? DepartDateTime { get; set; } // DepartDateTime

        [Column(@"Duration", Order = 5, TypeName = "numeric")]
        [Display(Name = "Duration")]
        public decimal? Duration { get; set; } // Duration

        [Column(@"Type", Order = 6, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Type")]
        public string Type { get; set; } // Type (length: 100)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"City", Order = 7, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Key]
        [Display(Name = "City")]
        public string City { get; set; } // City (Primary key) (length: 100)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"State", Order = 8, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "State")]
        public string State { get; set; } // State (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Longitude", Order = 9, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Longitude")]
        public decimal Longitude { get; set; } // Longitude (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Latitude", Order = 10, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Latitude")]
        public decimal Latitude { get; set; } // Latitude (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LocationDescription", Order = 11, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Key]
        [Display(Name = "Location description")]
        public string LocationDescription { get; set; } // LocationDescription (Primary key) (length: 500)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PostalCode", Order = 12, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CallInStop", Order = 13, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Call in stop")]
        public int CallInStop { get; set; } // CallInStop (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CallInDepart", Order = 14, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Call in depart")]
        public int CallInDepart { get; set; } // CallInDepart (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Comments", Order = 15, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(500)]
        [StringLength(500)]
        [Key]
        [Display(Name = "Comments")]
        public string Comments { get; set; } // Comments (Primary key) (length: 500)

        [Column(@"Tractor", Order = 16, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 100)

        [Column(@"RunNo", Order = 17, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PlannedStartTime", Order = 18, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned start time")]
        public System.DateTime? PlannedStartTime { get; set; } // PlannedStartTime

        [Column(@"PlannedDriver", Order = 19, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned driver")]
        public string PlannedDriver { get; set; } // PlannedDriver (length: 50)

        [Column(@"PlannedTractor", Order = 20, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Planned tractor")]
        public string PlannedTractor { get; set; } // PlannedTractor (length: 50)

        [Column(@"RunDriver", Order = 21, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Run driver")]
        public string RunDriver { get; set; } // RunDriver (length: 50)

        [Column(@"RunStartTime", Order = 22, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run start time")]
        public System.DateTime? RunStartTime { get; set; } // RunStartTime

        [Column(@"RunEndTime", Order = 23, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run end time")]
        public System.DateTime? RunEndTime { get; set; } // RunEndTime
    }

    // vwDispatchArchive
    [Table("vwDispatchArchive", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchArchive
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"Driver1", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 1")]
        public string Driver1 { get; set; } // Driver1 (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (length: 5)

        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (length: 200)

        [Column(@"Condition", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 20, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"RunID", Order = 22, TypeName = "numeric")]
        [Display(Name = "Run ID")]
        public decimal? RunId { get; set; } // RunID

        [Column(@"RunSequence", Order = 23, TypeName = "numeric")]
        [Display(Name = "Run sequence")]
        public decimal? RunSequence { get; set; } // RunSequence

        [Column(@"StopSequence", Order = 24, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"RunDate", Order = 25, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"Trailer_Length", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"SecondRun", Order = 29, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"PickUp", Order = 30, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Trailer2_Name", Order = 31, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2 name")]
        public string Trailer2Name { get; set; } // Trailer2_Name (length: 50)

        [Column(@"Trailer2_Length", Order = 32, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 2 length")]
        public string Trailer2Length { get; set; } // Trailer2_Length (length: 10)

        [Column(@"Trailer3_Name", Order = 33, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3 name")]
        public string Trailer3Name { get; set; } // Trailer3_Name (length: 50)

        [Column(@"Trailer3_Length", Order = 34, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 3 length")]
        public string Trailer3Length { get; set; } // Trailer3_Length (length: 10)

        [Column(@"Driver2", Order = 35, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 2")]
        public string Driver2 { get; set; } // Driver2 (length: 50)

        [Column(@"StopNotes", Order = 36, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (length: 200)

        [Column(@"Require_Audit", Order = 37, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 38, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 39, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"RunNotes", Order = 40, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (length: 800)

        [Column(@"SameDayPieces", Order = 41, TypeName = "numeric")]
        [Display(Name = "Same day pieces")]
        public decimal? SameDayPieces { get; set; } // SameDayPieces

        [Column(@"SameDayWeight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Same day weight")]
        public decimal? SameDayWeight { get; set; } // SameDayWeight

        [Column(@"LeavePieces", Order = 43, TypeName = "numeric")]
        [Display(Name = "Leave pieces")]
        public decimal? LeavePieces { get; set; } // LeavePieces

        [Column(@"LeaveWeight", Order = 44, TypeName = "numeric")]
        [Display(Name = "Leave weight")]
        public decimal? LeaveWeight { get; set; } // LeaveWeight

        [Column(@"ConsigneeNotes", Order = 45, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (length: 2000)

        [Column(@"SameDay", Order = 46, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 47, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperType", Order = 48, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (Primary key) (length: 10)

        [Column(@"ProformaDate", Order = 49, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Status", Order = 50, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DayStatus", Order = 51, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(7)]
        [StringLength(7)]
        [Key]
        [Display(Name = "Day status")]
        public string DayStatus { get; set; } // DayStatus (Primary key) (length: 7)

        [Column(@"StopNumberID", Order = 52, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"PlannedArrivalDate", Order = 53, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 54, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 55, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"PalletsOn", Order = 56, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 57, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PlannedDepartDate", Order = 58, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"RunNumberID", Order = 59, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"OrderID", Order = 60, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LineItems", Order = 61, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Line items")]
        public int LineItems { get; set; } // LineItems (Primary key)
    }

    // vwDispatchAudit
    [Table("vwDispatchAudit", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAudit
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"Driver", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (Primary key) (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 11, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 12, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [Column(@"ShipperNumber", Order = 13, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 14, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 15, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConsCode", Order = 16, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (Primary key) (length: 18)

        [Column(@"Notes", Order = 17, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 18, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 19, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 20, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 21, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 22, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 23, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"RunDate", Order = 24, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 25, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate
    }

    // vwDispatchDetailOpen
    [Table("vwDispatchDetailOpen", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchDetailOpen
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"Driver", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (length: 5)

        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (length: 100)

        [Column(@"Condition", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 20, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 22, TypeName = "numeric")]
        [Display(Name = "Run ID")]
        public decimal? RunId { get; set; } // RunID

        [Column(@"RunSequence", Order = 23, TypeName = "numeric")]
        [Display(Name = "Run sequence")]
        public decimal? RunSequence { get; set; } // RunSequence

        [Column(@"StopSequence", Order = 24, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"RunDate", Order = 25, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"Trailer_Length", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"SecondRun", Order = 29, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"PickUp", Order = 30, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Trailer2_Name", Order = 31, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2 name")]
        public string Trailer2Name { get; set; } // Trailer2_Name (length: 50)

        [Column(@"Trailer2_Length", Order = 32, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 2 length")]
        public string Trailer2Length { get; set; } // Trailer2_Length (length: 10)

        [Column(@"Trailer3_Name", Order = 33, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3 name")]
        public string Trailer3Name { get; set; } // Trailer3_Name (length: 50)

        [Column(@"Trailer3_Length", Order = 34, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 3 length")]
        public string Trailer3Length { get; set; } // Trailer3_Length (length: 10)

        [Column(@"Driver2", Order = 35, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 2")]
        public string Driver2 { get; set; } // Driver2 (length: 50)

        [Column(@"StopNotes", Order = 36, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (length: 200)

        [Column(@"Require_Audit", Order = 37, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 38, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 39, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"RunNotes", Order = 40, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (length: 800)

        [Column(@"SameDayPieces", Order = 41, TypeName = "numeric")]
        [Display(Name = "Same day pieces")]
        public decimal? SameDayPieces { get; set; } // SameDayPieces

        [Column(@"SameDayWeight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Same day weight")]
        public decimal? SameDayWeight { get; set; } // SameDayWeight

        [Column(@"LeavePieces", Order = 43, TypeName = "numeric")]
        [Display(Name = "Leave pieces")]
        public decimal? LeavePieces { get; set; } // LeavePieces

        [Column(@"LeaveWeight", Order = 44, TypeName = "numeric")]
        [Display(Name = "Leave weight")]
        public decimal? LeaveWeight { get; set; } // LeaveWeight

        [Column(@"ConsigneeNotes", Order = 45, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (length: 2000)

        [Column(@"SameDay", Order = 46, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 47, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperType", Order = 48, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (Primary key) (length: 10)

        [Column(@"ProformaDate", Order = 49, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Status", Order = 50, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DayStatus", Order = 51, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Key]
        [Display(Name = "Day status")]
        public string DayStatus { get; set; } // DayStatus (Primary key) (length: 4)

        [Column(@"StopNumberID", Order = 52, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Itemcode", Order = 53, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"ItemDesc", Order = 54, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 55, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"PalletVolume", Order = 56, TypeName = "numeric")]
        [Display(Name = "Pallet volume")]
        public decimal? PalletVolume { get; set; } // PalletVolume

        [Column(@"Location", Order = 57, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Location")]
        public string Location { get; set; } // Location (length: 10)

        [Column(@"Pieces", Order = 58, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"SameDayPiecesDetail", Order = 59, TypeName = "numeric")]
        [Display(Name = "Same day pieces detail")]
        public decimal? SameDayPiecesDetail { get; set; } // SameDayPiecesDetail
    }

    // vwDispatchOpen
    [Table("vwDispatchOpen", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchOpen
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"Driver", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (length: 5)

        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (length: 100)

        [Column(@"Condition", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 20, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"RunID", Order = 22, TypeName = "numeric")]
        [Display(Name = "Run ID")]
        public decimal? RunId { get; set; } // RunID

        [Column(@"RunSequence", Order = 23, TypeName = "numeric")]
        [Display(Name = "Run sequence")]
        public decimal? RunSequence { get; set; } // RunSequence

        [Column(@"StopSequence", Order = 24, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"RunDate", Order = 25, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"Trailer_Length", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"SecondRun", Order = 29, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"PickUp", Order = 30, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Trailer2_Name", Order = 31, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2 name")]
        public string Trailer2Name { get; set; } // Trailer2_Name (length: 50)

        [Column(@"Trailer2_Length", Order = 32, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 2 length")]
        public string Trailer2Length { get; set; } // Trailer2_Length (length: 10)

        [Column(@"Trailer3_Name", Order = 33, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3 name")]
        public string Trailer3Name { get; set; } // Trailer3_Name (length: 50)

        [Column(@"Trailer3_Length", Order = 34, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 3 length")]
        public string Trailer3Length { get; set; } // Trailer3_Length (length: 10)

        [Column(@"Driver2", Order = 35, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 2")]
        public string Driver2 { get; set; } // Driver2 (length: 50)

        [Column(@"StopNotes", Order = 36, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (length: 200)

        [Column(@"Require_Audit", Order = 37, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 38, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 39, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"RunNotes", Order = 40, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (length: 800)

        [Column(@"SameDayPieces", Order = 41, TypeName = "numeric")]
        [Display(Name = "Same day pieces")]
        public decimal? SameDayPieces { get; set; } // SameDayPieces

        [Column(@"SameDayWeight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Same day weight")]
        public decimal? SameDayWeight { get; set; } // SameDayWeight

        [Column(@"LeavePieces", Order = 43, TypeName = "numeric")]
        [Display(Name = "Leave pieces")]
        public decimal? LeavePieces { get; set; } // LeavePieces

        [Column(@"LeaveWeight", Order = 44, TypeName = "numeric")]
        [Display(Name = "Leave weight")]
        public decimal? LeaveWeight { get; set; } // LeaveWeight

        [Column(@"ConsigneeNotes", Order = 45, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (length: 2000)

        [Column(@"SameDay", Order = 46, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 47, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperType", Order = 48, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (Primary key) (length: 10)

        [Column(@"ProformaDate", Order = 49, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Status", Order = 50, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DayStatus", Order = 51, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Key]
        [Display(Name = "Day status")]
        public string DayStatus { get; set; } // DayStatus (Primary key) (length: 4)

        [Column(@"StopNumberID", Order = 52, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"PlannedArrivalDate", Order = 53, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 54, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 55, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"PalletsOn", Order = 56, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 57, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"PlannedDepartDate", Order = 58, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"RunNumberID", Order = 59, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"OrderID", Order = 60, TypeName = "numeric")]
        [Display(Name = "Order ID")]
        public decimal? OrderId { get; set; } // OrderID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LineItems", Order = 61, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Line items")]
        public int LineItems { get; set; } // LineItems (Primary key)
    }

    // vwDispatchOpen_old
    [Table("vwDispatchOpen_old", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchOpenOld
    {
        [Column(@"RunNo", Order = 1, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"RunPlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"Driver", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 8, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (length: 5)

        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (length: 100)

        [Column(@"Condition", Order = 19, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"OrderNumber", Order = 20, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"OrderOrientation", Order = 21, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 22, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 23, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"StopSequence", Order = 24, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"RunDate", Order = 25, TypeName = "int")]
        [Display(Name = "Run date")]
        public int? RunDate { get; set; } // RunDate

        [Column(@"ShipperShipDate", Order = 26, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedDeliveryDate", Order = 27, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned delivery date")]
        public System.DateTime? PlannedDeliveryDate { get; set; } // PlannedDeliveryDate

        [Column(@"Trailer_Length", Order = 28, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"SecondRun", Order = 29, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"PickUp", Order = 30, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Trailer2_Name", Order = 31, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2 name")]
        public string Trailer2Name { get; set; } // Trailer2_Name (length: 50)

        [Column(@"Trailer2_Length", Order = 32, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 2 length")]
        public string Trailer2Length { get; set; } // Trailer2_Length (length: 10)

        [Column(@"Trailer3_Name", Order = 33, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3 name")]
        public string Trailer3Name { get; set; } // Trailer3_Name (length: 50)

        [Column(@"Trailer3_Length", Order = 34, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer 3 length")]
        public string Trailer3Length { get; set; } // Trailer3_Length (length: 10)

        [Column(@"Driver2", Order = 35, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver 2")]
        public string Driver2 { get; set; } // Driver2 (length: 50)

        [Column(@"StopNotes", Order = 36, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (length: 200)

        [Column(@"Require_Audit", Order = 37, TypeName = "bit")]
        [Display(Name = "Require audit")]
        public bool? RequireAudit { get; set; } // Require_Audit

        [Column(@"PrintNotes", Order = 38, TypeName = "bit")]
        [Display(Name = "Print notes")]
        public bool? PrintNotes { get; set; } // PrintNotes

        [Column(@"PrintDirections", Order = 39, TypeName = "bit")]
        [Display(Name = "Print directions")]
        public bool? PrintDirections { get; set; } // PrintDirections

        [Column(@"RunNotes", Order = 40, TypeName = "varchar")]
        [MaxLength(800)]
        [StringLength(800)]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (length: 800)

        [Column(@"SameDayPieces", Order = 41, TypeName = "numeric")]
        [Display(Name = "Same day pieces")]
        public decimal? SameDayPieces { get; set; } // SameDayPieces

        [Column(@"SameDayWeight", Order = 42, TypeName = "numeric")]
        [Display(Name = "Same day weight")]
        public decimal? SameDayWeight { get; set; } // SameDayWeight

        [Column(@"LeavePieces", Order = 43, TypeName = "numeric")]
        [Display(Name = "Leave pieces")]
        public decimal? LeavePieces { get; set; } // LeavePieces

        [Column(@"LeaveWeight", Order = 44, TypeName = "numeric")]
        [Display(Name = "Leave weight")]
        public decimal? LeaveWeight { get; set; } // LeaveWeight

        [Column(@"ConsigneeNotes", Order = 45, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (length: 2000)

        [Column(@"SameDay", Order = 46, TypeName = "bit")]
        [Display(Name = "Same day")]
        public bool? SameDay { get; set; } // SameDay

        [Column(@"Ltl", Order = 47, TypeName = "bit")]
        [Display(Name = "Ltl")]
        public bool? Ltl { get; set; } // Ltl

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperType", Order = 48, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Shipper type")]
        public string ShipperType { get; set; } // ShipperType (Primary key) (length: 10)

        [Column(@"ProformaDate", Order = 49, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"Status", Order = 50, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DayStatus", Order = 51, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Key]
        [Display(Name = "Day status")]
        public string DayStatus { get; set; } // DayStatus (Primary key) (length: 4)

        [Column(@"StopNumberID", Order = 52, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID
    }

    // vwDispatchSheet2
    [Table("vwDispatchSheet2", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchSheet2
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"LastName", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"TotalOrderPieces", Order = 7, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 8, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"CoDriver", Order = 9, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Co driver")]
        public string CoDriver { get; set; } // CoDriver (length: 50)

        [Column(@"Trailer2", Order = 10, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2")]
        public string Trailer2 { get; set; } // Trailer2 (length: 50)

        [Column(@"Trailer3", Order = 11, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3")]
        public string Trailer3 { get; set; } // Trailer3 (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 12, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNo", Order = 13, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PickUp", Order = 14, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"SecondRun", Order = 15, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"GrossPieces", Order = 16, TypeName = "numeric")]
        [Display(Name = "Gross pieces")]
        public decimal? GrossPieces { get; set; } // GrossPieces

        [Column(@"GrossWeight", Order = 17, TypeName = "numeric")]
        [Display(Name = "Gross weight")]
        public decimal? GrossWeight { get; set; } // GrossWeight

        [Column(@"Trailer_Length", Order = 18, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)
    }

    // vwDispatchSheet_orig
    [Table("vwDispatchSheet_orig", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchSheetOrig
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedShipDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"LastName", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 50)

        [Column(@"Tractor_Name", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"TotalOrderPieces", Order = 7, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"TotalOrderWeight", Order = 8, TypeName = "numeric")]
        [Display(Name = "Total order weight")]
        public decimal? TotalOrderWeight { get; set; } // TotalOrderWeight

        [Column(@"CoDriver", Order = 9, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Co driver")]
        public string CoDriver { get; set; } // CoDriver (length: 50)

        [Column(@"Trailer2", Order = 10, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 2")]
        public string Trailer2 { get; set; } // Trailer2 (length: 50)

        [Column(@"Trailer3", Order = 11, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer 3")]
        public string Trailer3 { get; set; } // Trailer3 (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 12, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [Column(@"RunNo", Order = 13, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"PickUp", Order = 14, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"SecondRun", Order = 15, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun
    }

    // vwDriversOff
    [Table("vwDriversOff", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDriversOff
    {
        [Column(@"Employee_Date", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Employee date")]
        public System.DateTime? EmployeeDate { get; set; } // Employee_Date

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LastName", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"FirstName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"InActive_Reason", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "In active reason")]
        public string InActiveReason { get; set; } // InActive_Reason (Primary key) (length: 50)
    }

    // vwInboundDamage
    [Table("vwInboundDamage", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwInboundDamage
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"UnloadDate", Order = 1, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Unload date")]
        public System.DateTime UnloadDate { get; set; } // UnloadDate (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"URNumber", Order = 2, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Urn umber")]
        public string UrNumber { get; set; } // URNumber (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ItemCode", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Item code")]
        public string ItemCode { get; set; } // ItemCode (Primary key) (length: 10)

        [Column(@"NumPieces", Order = 4, TypeName = "int")]
        [Display(Name = "Num pieces")]
        public int? NumPieces { get; set; } // NumPieces

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConditionDescription", Order = 5, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Key]
        [Display(Name = "Condition description")]
        public string ConditionDescription { get; set; } // ConditionDescription (Primary key) (length: 255)

        [Column(@"CustCode", Order = 6, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Cust code")]
        public string CustCode { get; set; } // CustCode (length: 10)

        [Column(@"DistanceInTrailer", Order = 7, TypeName = "int")]
        [Display(Name = "Distance in trailer")]
        public int? DistanceInTrailer { get; set; } // DistanceInTrailer

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"VerticalLocation", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Key]
        [Display(Name = "Vertical location")]
        public string VerticalLocation { get; set; } // VerticalLocation (Primary key) (length: 255)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"HorizontalLocation", Order = 9, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(255)]
        [StringLength(255)]
        [Key]
        [Display(Name = "Horizontal location")]
        public string HorizontalLocation { get; set; } // HorizontalLocation (Primary key) (length: 255)
    }

    // vwItemsPalletsConsignee
    [Table("vwItemsPalletsConsignee", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwItemsPalletsConsignee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WMSCode", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (Primary key) (length: 18)

        [Column(@"ProformaDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [Column(@"RunNo", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedShipDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletID", Order = 7, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletID (Primary key)

        [Column(@"FinishedAt", Order = 8, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt

        [Column(@"Custcode", Order = 9, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 10, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [Column(@"ItemDesc", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemPieces", Order = 12, TypeName = "int")]
        [Display(Name = "Item pieces")]
        public int? ItemPieces { get; set; } // ItemPieces

        [Column(@"NumPallets", Order = 13, TypeName = "int")]
        [Display(Name = "Num pallets")]
        public int? NumPallets { get; set; } // NumPallets

        [Column(@"Pieces", Order = 14, TypeName = "int")]
        [Display(Name = "Pieces")]
        public int? Pieces { get; set; } // Pieces
    }

    // vwOrders
    [Table("vwOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrder
    {
        [Column(@"OrderNumber", Order = 1, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"Shipper", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"Consignee", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"ShipperNumber", Order = 4, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipperShipDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedShipDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 7, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 8, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [Column(@"Status", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 10, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"PO_Number", Order = 11, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"Notes", Order = 12, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 13, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"RunName", Order = 14, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderID", Order = 16, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public decimal OrderId { get; set; } // OrderID (Primary key)

        [Column(@"ShipCode", Order = 17, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"ConsCode", Order = 18, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"ProformaDate", Order = 19, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate
    }

    // The table 'vwOrderDetail' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwOrderDetail
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderDetail
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"StopNumberID", Order = 4, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"StopName", Order = 5, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Stop name")]
        public string StopName { get; set; } // StopName (length: 30)

        [Column(@"OrderNumber", Order = 6, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 7, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"Custcode", Order = 8, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"Pieces", Order = 10, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"ItemDesc", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 12, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"Lip", Order = 13, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"StopSequence", Order = 14, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence
    }

    // The table 'vwOrderDetailPMMulti' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwOrderDetailPMMulti
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderDetailPmMulti
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"StopNumberID", Order = 4, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"StopName", Order = 5, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Stop name")]
        public string StopName { get; set; } // StopName (length: 30)

        [Column(@"OrderNumber", Order = 6, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"ShipperNumber", Order = 7, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"Custcode", Order = 8, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 10)

        [Column(@"Pieces", Order = 10, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"ItemDesc", Order = 11, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Item desc")]
        public string ItemDesc { get; set; } // ItemDesc (length: 50)

        [Column(@"ItemSize", Order = 12, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Item size")]
        public string ItemSize { get; set; } // ItemSize (length: 4)

        [Column(@"Lip", Order = 13, TypeName = "bit")]
        [Display(Name = "Lip")]
        public bool? Lip { get; set; } // Lip

        [Column(@"StopSequence", Order = 14, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence
    }

    // vwOrderLogins
    [Table("vwOrderLogins", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderLogin
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderActivityId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order activity ID")]
        public int OrderActivityId { get; set; } // OrderActivityId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActivityDateTime", Order = 3, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Activity date time")]
        public System.DateTime ActivityDateTime { get; set; } // ActivityDateTime (Primary key)

        [Column(@"UserId", Order = 4, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderActionId", Order = 5, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order action ID")]
        public int OrderActionId { get; set; } // OrderActionId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Description", Order = 6, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (Primary key) (length: 50)
    }

    // vwOrderPalletCounts
    [Table("vwOrderPalletCounts", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderPalletCount
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderActivityId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order activity ID")]
        public int OrderActivityId { get; set; } // OrderActivityId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActivityDateTime", Order = 3, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Activity date time")]
        public System.DateTime ActivityDateTime { get; set; } // ActivityDateTime (Primary key)

        [Column(@"UserId", Order = 4, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [Column(@"UserCaseCount", Order = 5, TypeName = "int")]
        [Display(Name = "User case count")]
        public int? UserCaseCount { get; set; } // UserCaseCount

        [Column(@"ScannerCaseCount", Order = 6, TypeName = "int")]
        [Display(Name = "Scanner case count")]
        public int? ScannerCaseCount { get; set; } // ScannerCaseCount

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderActionId", Order = 7, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order action ID")]
        public int OrderActionId { get; set; } // OrderActionId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Description", Order = 8, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (Primary key) (length: 50)
    }

    // vwOrderPickListOpen
    [Table("vwOrderPickListOpen", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderPickListOpen
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OrderActivityId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order activity ID")]
        public int OrderActivityId { get; set; } // OrderActivityId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderPickId", Order = 2, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order pick ID")]
        public int OrderPickId { get; set; } // OrderPickId (Primary key)

        [Column(@"OrderId", Order = 3, TypeName = "int")]
        [Display(Name = "Order ID")]
        public int? OrderId { get; set; } // OrderId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActivityDateTime", Order = 4, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Activity date time")]
        public System.DateTime ActivityDateTime { get; set; } // ActivityDateTime (Primary key)

        [Column(@"UserId", Order = 5, TypeName = "int")]
        [Display(Name = "User ID")]
        public int? UserId { get; set; } // UserId

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderActionId", Order = 6, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order action ID")]
        public int OrderActionId { get; set; } // OrderActionId (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Description", Order = 7, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (Primary key) (length: 50)
    }

    // vwOrphanedOrders
    [Table("vwOrphanedOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrphanedOrder
    {
        [Column(@"OrderNumber", Order = 1, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [Column(@"Shipper", Order = 2, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"Consignee", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"ShipperNumber", Order = 4, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"ShipperShipDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedShipDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 7, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 8, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [Column(@"Status", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"OrderOrientation", Order = 10, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Order orientation")]
        public string OrderOrientation { get; set; } // OrderOrientation (length: 5)

        [Column(@"PO_Number", Order = 11, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // PO_Number (length: 20)

        [Column(@"Notes", Order = 12, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 13, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [Column(@"RunName", Order = 14, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate
    }

    // vwPalletLoaderDispatchOpen
    [Table("vwPalletLoaderDispatchOpen", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwPalletLoaderDispatchOpen
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Tractor_Name", Order = 4, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Trailer_Name", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TrailerID", Order = 6, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Trailer ID")]
        public decimal TrailerId { get; set; } // TrailerID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Consignee", Order = 7, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"City", Order = 8, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Key]
        [Display(Name = "City")]
        public string City { get; set; } // City (Primary key) (length: 15)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"State", Order = 9, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(2)]
        [StringLength(2)]
        [Key]
        [Display(Name = "State")]
        public string State { get; set; } // State (Primary key) (length: 2)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PostalCode", Order = 10, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(10)]
        [StringLength(10)]
        [Key]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (Primary key) (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PostalCode5", Order = 11, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Postal code 5")]
        public string PostalCode5 { get; set; } // PostalCode5 (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 12, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 13, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipperNumber", Order = 14, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Key]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (Primary key) (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShipCode", Order = 15, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (Primary key) (length: 18)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Shipper", Order = 16, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConsCode", Order = 17, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (Primary key) (length: 18)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderNotes", Order = 18, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Key]
        [Display(Name = "Order notes")]
        public string OrderNotes { get; set; } // OrderNotes (Primary key) (length: 100)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OrderNumber", Order = 19, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Order number")]
        public decimal OrderNumber { get; set; } // OrderNumber (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunSequence", Order = 20, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run sequence")]
        public decimal RunSequence { get; set; } // RunSequence (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 21, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunDate", Order = 22, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Run date")]
        public int RunDate { get; set; } // RunDate (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopNotes", Order = 23, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(200)]
        [StringLength(200)]
        [Key]
        [Display(Name = "Stop notes")]
        public string StopNotes { get; set; } // StopNotes (Primary key) (length: 200)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunNotes", Order = 24, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(800)]
        [StringLength(800)]
        [Key]
        [Display(Name = "Run notes")]
        public string RunNotes { get; set; } // RunNotes (Primary key) (length: 800)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ConsigneeNotes", Order = 25, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Key]
        [Display(Name = "Consignee notes")]
        public string ConsigneeNotes { get; set; } // ConsigneeNotes (Primary key) (length: 2000)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProformaDate", Order = 26, TypeName = "datetime")]
        [Required]
        [Key]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime ProformaDate { get; set; } // ProformaDate (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopNumberID", Order = 27, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop number ID")]
        public decimal StopNumberId { get; set; } // StopNumberID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunNumberID", Order = 28, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run number ID")]
        public decimal RunNumberId { get; set; } // RunNumberID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TractorID", Order = 29, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Tractor ID")]
        public decimal TractorId { get; set; } // TractorID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TractorName", Order = 30, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Tractor name")]
        public string TractorName1 { get; set; } // TractorName (Primary key) (length: 50)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"IsStraightTruck", Order = 31, TypeName = "bit")]
        [Required]
        [Key]
        [Display(Name = "Is straight truck")]
        public bool IsStraightTruck { get; set; } // IsStraightTruck (Primary key)
    }

    // vwPalletsByItemConsignee
    [Table("vwPalletsByItemConsignee", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwPalletsByItemConsignee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WMSCode", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (Primary key) (length: 18)

        [Column(@"ProformaDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunID", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run ID")]
        public decimal RunId { get; set; } // RunID (Primary key)

        [Column(@"RunNo", Order = 4, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 5, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"PlannedShipDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"Custcode", Order = 7, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Custcode")]
        public string Custcode { get; set; } // Custcode (length: 2)

        [Column(@"Itemcode", Order = 8, TypeName = "char")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Itemcode")]
        public string Itemcode { get; set; } // Itemcode (length: 12)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PalletID", Order = 9, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Pallet ID")]
        public int PalletId { get; set; } // PalletID (Primary key)

        [Column(@"FinishedAt", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Finished at")]
        public System.DateTime? FinishedAt { get; set; } // FinishedAt

        [Column(@"Pieces", Order = 11, TypeName = "int")]
        [Display(Name = "Pieces")]
        public int? Pieces { get; set; } // Pieces
    }

    // The table 'vwPMCCTBarcode' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwPMCCTBarcode
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwPmcctBarcode
    {
        [Column(@"Consignee", Order = 1, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"ShipperNumber", Order = 2, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shipper number")]
        public string ShipperNumber { get; set; } // ShipperNumber (length: 20)

        [Column(@"TotalOrderPieces", Order = 3, TypeName = "numeric")]
        [Display(Name = "Total order pieces")]
        public decimal? TotalOrderPieces { get; set; } // TotalOrderPieces

        [Column(@"ConsCode", Order = 4, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"RunNo", Order = 5, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 6, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"ProformaDate", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"ShipCode", Order = 8, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"PMCustNo", Order = 9, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Pmc ust no")]
        public string PmCustNo { get; set; } // PMCustNo (length: 5)

        [Column(@"Barcode", Order = 10, TypeName = "varchar")]
        [MaxLength(16)]
        [StringLength(16)]
        [Display(Name = "Barcode")]
        public string Barcode { get; set; } // Barcode (length: 16)
    }

    // The table 'vwRunEquipment' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwRunEquipment
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwRunEquipment
    {
        [Column(@"RunNumberID", Order = 1, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [Column(@"PalletJack", Order = 2, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Pallet jack")]
        public string PalletJack { get; set; } // PalletJack (length: 100)

        [Column(@"2Wheeler", Order = 3, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "2 Wheeler")]
        public string C2Wheeler { get; set; } // 2Wheeler (length: 100)

        [Column(@"UBoat", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Ub oat")]
        public string UBoat { get; set; } // UBoat (length: 100)

        [Column(@"Scanner", Order = 5, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Scanner")]
        public string Scanner { get; set; } // Scanner (length: 100)

        [Column(@"Pigtail", Order = 6, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Pigtail")]
        public string Pigtail { get; set; } // Pigtail (length: 100)
    }

    // vwSmartDriveSchedule
    [Table("vwSmartDriveSchedule", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSmartDriveSchedule
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Company ID", Order = 1, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Key]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // Company ID (Primary key) (length: 4)

        [Column(@"Employee ID", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Employee ID")]
        public string EmployeeId { get; set; } // Employee ID (length: 50)

        [Column(@"Vehicle", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Vehicle")]
        public string Vehicle { get; set; } // Vehicle (length: 50)

        [Column(@"Start", Order = 4, TypeName = "varchar")]
        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "Start")]
        public string Start { get; set; } // Start (length: 36)

        [Column(@"End", Order = 5, TypeName = "varchar")]
        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "End")]
        public string End { get; set; } // End (length: 36)

        [Column(@"First Name", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // First Name (length: 50)

        [Column(@"Last Name", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // Last Name (length: 50)

        [Column(@"Middle Name", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // Middle Name (length: 50)

        [Column(@"ProformaDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate
    }

    // vwSmartDriveScheduleArchive
    [Table("vwSmartDriveScheduleArchive", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSmartDriveScheduleArchive
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Company ID", Order = 1, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(4)]
        [StringLength(4)]
        [Key]
        [Display(Name = "Company ID")]
        public string CompanyId { get; set; } // Company ID (Primary key) (length: 4)

        [Column(@"Employee ID", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Employee ID")]
        public string EmployeeId { get; set; } // Employee ID (length: 50)

        [Column(@"Vehicle", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Vehicle")]
        public string Vehicle { get; set; } // Vehicle (length: 50)

        [Column(@"Start", Order = 4, TypeName = "varchar")]
        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "Start")]
        public string Start { get; set; } // Start (length: 36)

        [Column(@"End", Order = 5, TypeName = "varchar")]
        [MaxLength(36)]
        [StringLength(36)]
        [Display(Name = "End")]
        public string End { get; set; } // End (length: 36)

        [Column(@"First Name", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // First Name (length: 50)

        [Column(@"Last Name", Order = 7, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // Last Name (length: 50)

        [Column(@"Middle Name", Order = 8, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // Middle Name (length: 50)

        [Column(@"ProformaDate", Order = 9, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate
    }

    // vwStartTimes
    [Table("vwStartTimes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStartTime
    {
        [Column(@"Driver", Order = 1, TypeName = "varchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 15)

        [Column(@"CoDriver", Order = 2, TypeName = "varchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Co driver")]
        public string CoDriver { get; set; } // CoDriver (length: 15)

        [Column(@"StartTime", Order = 3, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Start time")]
        public string StartTime { get; set; } // StartTime (length: 5)

        [Column(@"RunNo", Order = 4, TypeName = "varchar")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 4)

        [Column(@"RunName", Order = 5, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 20)

        [Column(@"PickUp", Order = 6, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Pick up")]
        public string PickUp { get; set; } // PickUp (length: 50)

        [Column(@"Tractor", Order = 7, TypeName = "varchar")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Tractor")]
        public string Tractor { get; set; } // Tractor (length: 4)

        [Column(@"Trailer", Order = 8, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Trailer")]
        public string Trailer { get; set; } // Trailer (length: 5)

        [Column(@"RunSequence", Order = 9, TypeName = "numeric")]
        [Display(Name = "Run sequence")]
        public decimal? RunSequence { get; set; } // RunSequence

        [Column(@"Proformadate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proformadate")]
        public System.DateTime? Proformadate { get; set; } // Proformadate

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Source", Order = 11, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Source")]
        public int Source { get; set; } // Source (Primary key)
    }

    // vwStops
    [Table("vwStops", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStop
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [Column(@"StopNumberID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Name", Order = 3, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (Primary key) (length: 30)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StopSequence", Order = 4, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Stop sequence")]
        public decimal StopSequence { get; set; } // StopSequence (Primary key)

        [Column(@"NoException", Order = 5, TypeName = "bit")]
        [Display(Name = "No exception")]
        public bool? NoException { get; set; } // NoException

        [Column(@"PlannedDepartDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned depart date")]
        public System.DateTime? PlannedDepartDate { get; set; } // PlannedDepartDate

        [Column(@"Notes", Order = 7, TypeName = "char")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 200)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RunName", Order = 8, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Key]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (Primary key) (length: 30)

        [Column(@"RunNo", Order = 9, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"ProformaDate", Order = 10, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNumberID", Order = 11, TypeName = "numeric")]
        [Display(Name = "Run number ID")]
        public decimal? RunNumberId { get; set; } // RunNumberID

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"WMSCode", Order = 12, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(18)]
        [StringLength(18)]
        [Key]
        [Display(Name = "Wmsc ode")]
        public string WmsCode { get; set; } // WMSCode (Primary key) (length: 18)
    }

    // The table 'vwStopStats' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwStopStats
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopStat
    {
        [Column(@"ProformaDate", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 2, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"SecondRun", Order = 5, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"Driver", Order = 6, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"StopSequence", Order = 7, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"Consignee", Order = 8, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 9, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"Pieces", Order = 11, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Weight", Order = 12, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"PlannedArrivalDate", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"PalletsOn", Order = 16, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 17, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"ConsCode", Order = 18, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"ShipCode", Order = 19, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"StopNumberID", Order = 20, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Tractor_Name", Order = 21, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 22, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)
    }

    // vwStopStatsId
    [Table("vwStopStatsId", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopStatsId
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"RowId", Order = 1, TypeName = "uniqueidentifier")]
        [Required]
        [Key]
        [Display(Name = "Row ID")]
        public System.Guid RowId { get; set; } // RowId (Primary key)

        [Column(@"ProformaDate", Order = 2, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Proforma date")]
        public System.DateTime? ProformaDate { get; set; } // ProformaDate

        [Column(@"RunNo", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Run no")]
        public string RunNo { get; set; } // RunNo (length: 10)

        [Column(@"RunName", Order = 4, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Run name")]
        public string RunName { get; set; } // RunName (length: 30)

        [Column(@"RunPlannedShipDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Run planned ship date")]
        public System.DateTime? RunPlannedShipDate { get; set; } // RunPlannedShipDate

        [Column(@"SecondRun", Order = 6, TypeName = "bit")]
        [Display(Name = "Second run")]
        public bool? SecondRun { get; set; } // SecondRun

        [Column(@"Driver", Order = 7, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Driver")]
        public string Driver { get; set; } // Driver (length: 50)

        [Column(@"StopSequence", Order = 8, TypeName = "numeric")]
        [Display(Name = "Stop sequence")]
        public decimal? StopSequence { get; set; } // StopSequence

        [Column(@"Consignee", Order = 9, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Consignee")]
        public string Consignee { get; set; } // Consignee (length: 30)

        [Column(@"City", Order = 10, TypeName = "char")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"State", Order = 11, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"Pieces", Order = 12, TypeName = "numeric")]
        [Display(Name = "Pieces")]
        public decimal? Pieces { get; set; } // Pieces

        [Column(@"Weight", Order = 13, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        [Column(@"PlannedArrivalDate", Order = 14, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned arrival date")]
        public System.DateTime? PlannedArrivalDate { get; set; } // PlannedArrivalDate

        [Column(@"ActualArrivalDate", Order = 15, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual arrival date")]
        public System.DateTime? ActualArrivalDate { get; set; } // ActualArrivalDate

        [Column(@"ActualDepartDate", Order = 16, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Actual depart date")]
        public System.DateTime? ActualDepartDate { get; set; } // ActualDepartDate

        [Column(@"PalletsOn", Order = 17, TypeName = "int")]
        [Display(Name = "Pallets on")]
        public int? PalletsOn { get; set; } // PalletsOn

        [Column(@"PalletsOff", Order = 18, TypeName = "int")]
        [Display(Name = "Pallets off")]
        public int? PalletsOff { get; set; } // PalletsOff

        [Column(@"ConsCode", Order = 19, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)

        [Column(@"ShipCode", Order = 20, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"StopNumberID", Order = 21, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"Tractor_Name", Order = 22, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (length: 50)

        [Column(@"Trailer_Name", Order = 23, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"TotalOrders", Order = 24, TypeName = "int")]
        [Display(Name = "Total orders")]
        public int? TotalOrders { get; set; } // TotalOrders

        [Column(@"TotalLineItems", Order = 25, TypeName = "int")]
        [Display(Name = "Total line items")]
        public int? TotalLineItems { get; set; } // TotalLineItems
    }

    // vwStopSummary
    [Table("vwStopSummary", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopSummary
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"RunStopID", Order = 1, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Run stop ID")]
        public decimal RunStopId { get; set; } // RunStopID (Primary key)

        [Column(@"StopNumberID", Order = 2, TypeName = "numeric")]
        [Display(Name = "Stop number ID")]
        public decimal? StopNumberId { get; set; } // StopNumberID

        [Column(@"OrderCount", Order = 3, TypeName = "int")]
        [Display(Name = "Order count")]
        public int? OrderCount { get; set; } // OrderCount

        [Column(@"Peices", Order = 4, TypeName = "numeric")]
        [Display(Name = "Peices")]
        public decimal? Peices { get; set; } // Peices

        [Column(@"Weight", Order = 5, TypeName = "numeric")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight
    }

    // vwTractorsOff
    [Table("vwTractorsOff", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwTractorsOff
    {
        [Column(@"Tractor_Date", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Tractor date")]
        public System.DateTime? TractorDate { get; set; } // Tractor_Date

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Tractor_Name", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Key]
        [Display(Name = "Tractor name")]
        public string TractorName { get; set; } // Tractor_Name (Primary key) (length: 50)

        [Column(@"Tractor_Axles", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Tractor axles")]
        public string TractorAxles { get; set; } // Tractor_Axles (length: 10)

        [Column(@"LisStraight_Truck", Order = 4, TypeName = "bit")]
        [Display(Name = "Lis straight truck")]
        public bool? LisStraightTruck { get; set; } // LisStraight_Truck

        [Column(@"Inactive_Reason", Order = 5, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Inactive reason")]
        public string InactiveReason { get; set; } // Inactive_Reason (length: 50)
    }

    // The table 'vwTrailersOff' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vwTrailersOff
    [NotMapped]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwTrailersOff
    {
        [Column(@"Trailer_Date", Order = 1, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Trailer date")]
        public System.DateTime? TrailerDate { get; set; } // Trailer_Date

        [Column(@"Trailer_Name", Order = 2, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Trailer name")]
        public string TrailerName { get; set; } // Trailer_Name (length: 50)

        [Column(@"Trailer_Length", Order = 3, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Trailer length")]
        public string TrailerLength { get; set; } // Trailer_Length (length: 10)

        [Column(@"Inactive_Reason", Order = 4, TypeName = "char")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Inactive reason")]
        public string InactiveReason { get; set; } // Inactive_Reason (length: 50)
    }

    // vwUnassignedOrders
    [Table("vwUnassignedOrders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwUnassignedOrder
    {
        [Column(@"OrderNumber", Order = 1, TypeName = "numeric")]
        [Display(Name = "Order number")]
        public decimal? OrderNumber { get; set; } // OrderNumber

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderPieces", Order = 2, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order pieces")]
        public decimal TotalOrderPieces { get; set; } // TotalOrderPieces (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TotalOrderWeight", Order = 3, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Total order weight")]
        public decimal TotalOrderWeight { get; set; } // TotalOrderWeight (Primary key)

        [Column(@"ShipperShipDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Shipper ship date")]
        public System.DateTime? ShipperShipDate { get; set; } // ShipperShipDate

        [Column(@"PlannedShipDate", Order = 5, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Planned ship date")]
        public System.DateTime? PlannedShipDate { get; set; } // PlannedShipDate

        [Column(@"CreateDate", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"Notes", Order = 7, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 100)

        [Column(@"Condition", Order = 8, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Condition")]
        public string Condition { get; set; } // Condition (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"shipperid", Order = 9, TypeName = "numeric")]
        [Required]
        [Key]
        [Display(Name = "Shipperid")]
        public decimal Shipperid { get; set; } // shipperid (Primary key)

        [Column(@"consignee", Order = 10, TypeName = "numeric")]
        [Display(Name = "Consignee")]
        public decimal? Consignee { get; set; } // consignee

        [Column(@"shippernumber", Order = 11, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Shippernumber")]
        public string Shippernumber { get; set; } // shippernumber (length: 20)

        [Column(@"po_number", Order = 12, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Po number")]
        public string PoNumber { get; set; } // po_number (length: 20)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Processed", Order = 13, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Processed")]
        public int Processed { get; set; } // Processed (Primary key)

        [Column(@"ShipCode", Order = 14, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Ship code")]
        public string ShipCode { get; set; } // ShipCode (length: 18)

        [Column(@"Shipper", Order = 15, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Shipper")]
        public string Shipper { get; set; } // Shipper (length: 30)

        [Column(@"ConsCode", Order = 16, TypeName = "char")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Cons code")]
        public string ConsCode { get; set; } // ConsCode (length: 18)
    }

    // WorkAssignment
    [Table("WorkAssignment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WorkAssignment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"WorkAssignmentId", Order = 1, TypeName = "int")]
        [Index(@"PK__WorkAssi__C2B89B3C5728DECD", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Work assignment ID")]
        public int WorkAssignmentId { get; set; } // WorkAssignmentId (Primary key)

        [Column(@"EmployeeId", Order = 2, TypeName = "numeric")]
        [Required]
        [Display(Name = "Employee ID")]
        public decimal EmployeeId { get; set; } // EmployeeId

        [Column(@"WorkDate", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Work date")]
        public System.DateTime? WorkDate { get; set; } // WorkDate

        [Column(@"WorkType", Order = 4, TypeName = "int")]
        [Required]
        [Display(Name = "Work type")]
        public int WorkType { get; set; } // WorkType

        [Column(@"PercentAssigned", Order = 5, TypeName = "decimal")]
        [Display(Name = "Percent assigned")]
        public decimal? PercentAssigned { get; set; } // PercentAssigned

        [Column(@"Created", Order = 6, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; } // Created

        [Column(@"Modified", Order = 7, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; } // Modified

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [WorkAssignment].([EmployeeId]) (FK_WorkAssignment_WorkAssignment)
        /// </summary>
        [ForeignKey("EmployeeId"), Required] public virtual Employee Employee { get; set; } // FK_WorkAssignment_WorkAssignment

        public WorkAssignment()
        {
            WorkType = 0;
            Created = System.DateTime.Now;
        }
    }

    // XPObjectType
    [Table("XPObjectType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XpObjectType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"OID", Order = 1, TypeName = "int")]
        [Index(@"PK_XPObjectType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Oid")]
        public int Oid { get; set; } // OID (Primary key)

        [Column(@"TypeName", Order = 2, TypeName = "nvarchar")]
        [Index(@"iTypeName_XPObjectType", 1, IsUnique = true, IsClustered = false)]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Type name")]
        public string TypeName { get; set; } // TypeName (length: 254)

        [Column(@"AssemblyName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(254)]
        [StringLength(254)]
        [Display(Name = "Assembly name")]
        public string AssemblyName { get; set; } // AssemblyName (length: 254)
    }

    // Zip2Zip
    [Table("Zip2Zip", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Zip2Zip
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Origin", Order = 1, TypeName = "char")]
        [Index(@"IX_Zip2Zip_Origin_Dest", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Origin")]
        public string Origin { get; set; } // Origin (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Dest", Order = 2, TypeName = "char")]
        [Index(@"IX_Zip2Zip_Origin_Dest", 2, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Dest")]
        public string Dest { get; set; } // Dest (Primary key) (length: 5)

        [Column(@"Miles", Order = 3, TypeName = "numeric")]
        [Display(Name = "Miles")]
        public decimal? Miles { get; set; } // Miles

        [Column(@"DriveTime", Order = 4, TypeName = "smallint")]
        [Display(Name = "Drive time")]
        public short? DriveTime { get; set; } // DriveTime
    }

    // Zip2ZipHistory
    [Table("Zip2ZipHistory", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Zip2ZipHistory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Origin", Order = 1, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Origin")]
        public string Origin { get; set; } // Origin (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Dest", Order = 2, TypeName = "char")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(5)]
        [StringLength(5)]
        [Key]
        [Display(Name = "Dest")]
        public string Dest { get; set; } // Dest (Primary key) (length: 5)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OriginalMiles", Order = 3, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Original miles")]
        public decimal OriginalMiles { get; set; } // OriginalMiles (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"OriginDriveTime", Order = 4, TypeName = "smallint")]
        [Required]
        [Key]
        [Display(Name = "Origin drive time")]
        public short OriginDriveTime { get; set; } // OriginDriveTime (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Miles", Order = 5, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Miles")]
        public decimal Miles { get; set; } // Miles (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DriveTime", Order = 6, TypeName = "smallint")]
        [Required]
        [Key]
        [Display(Name = "Drive time")]
        public short DriveTime { get; set; } // DriveTime (Primary key)
    }

    #endregion

    #region POCO Configuration

    // AppLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AppLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AppLog>
    {
        public AppLogConfiguration()
            : this("dbo")
        {
        }

        public AppLogConfiguration(string schema)
        {
            Property(x => x.TraceType).IsUnicode(false);
            Property(x => x.AppName).IsUnicode(false);
            Property(x => x.Context).IsUnicode(false);
            Property(x => x.SqlStmt).IsOptional().IsUnicode(false);
            Property(x => x.ExecuteStartTime).IsOptional();
            Property(x => x.ExecuteEndTime).IsOptional();
            Property(x => x.ExecuteAsHours).IsOptional().HasPrecision(12,3);
            Property(x => x.ExecuteAsMinutes).IsOptional().HasPrecision(12,3);
            Property(x => x.ExecuteAsSeconds).IsOptional().HasPrecision(12,3);
            Property(x => x.ExecuteAsMilliseconds).IsOptional().HasPrecision(12,3);
        }
    }

    // AppSettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AppSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AppSetting>
    {
        public AppSettingConfiguration()
            : this("dbo")
        {
        }

        public AppSettingConfiguration(string schema)
        {
            Property(x => x.SettingName).IsUnicode(false);
            Property(x => x.SettingValue).IsUnicode(false);
        }
    }

    // ArchiveOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveOrder>
    {
        public ArchiveOrderConfiguration()
            : this("dbo")
        {
        }

        public ArchiveOrderConfiguration(string schema)
        {
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).HasPrecision(18,0);
            Property(x => x.Consignor).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.ShipperDeliveryDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.ActualDeliveryDate).IsOptional();
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderCube).HasPrecision(18,3);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderPallets).HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.UpdateOrderDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ServiceLevel).IsOptional();
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
        }
    }

    // ArchiveOrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveOrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveOrderDetail>
    {
        public ArchiveOrderDetailConfiguration()
            : this("dbo")
        {
        }

        public ArchiveOrderDetailConfiguration(string schema)
        {
            Property(x => x.ArchiveOrderDetail_).HasPrecision(18,0);
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.LineSeqNo).IsOptional();
            Property(x => x.ItemId).IsOptional();
            Property(x => x.Pieces).IsOptional().HasPrecision(9,0);
            Property(x => x.Weight).IsOptional().HasPrecision(18,2);
            Property(x => x.Cube).IsOptional().HasPrecision(18,3);
            Property(x => x.LisTempControlled).IsOptional();
            Property(x => x.ItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // ArchiveRun
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveRun>
    {
        public ArchiveRunConfiguration()
            : this("dbo")
        {
        }

        public ArchiveRunConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.Weight).IsOptional().HasPrecision(18,0);
            Property(x => x.Cube).IsOptional().HasPrecision(18,0);
            Property(x => x.Pallets).IsOptional().HasPrecision(18,0);
            Property(x => x.Pieces).IsOptional().HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.ActualReturnDate).IsOptional();
            Property(x => x.StandardMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Comments).IsOptional().IsUnicode(false);
            Property(x => x.ReportDate).IsOptional();
            Property(x => x.UpdateDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
        }
    }

    // ArchiveRunOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveRunOrder>
    {
        public ArchiveRunOrderConfiguration()
            : this("dbo")
        {
        }

        public ArchiveRunOrderConfiguration(string schema)
        {
            Property(x => x.RunOrderId).HasPrecision(18,0);
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunOrderSequence).IsOptional().HasPrecision(18,0);
        }
    }

    // ArchiveRunResource
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunResourceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveRunResource>
    {
        public ArchiveRunResourceConfiguration()
            : this("dbo")
        {
        }

        public ArchiveRunResourceConfiguration(string schema)
        {
            Property(x => x.RunResourceId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.CarrierId).IsOptional().HasPrecision(18,0);
            Property(x => x.TractorId).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId1).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId2).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId3).IsOptional().HasPrecision(18,0);
            Property(x => x.Driver1).IsOptional().HasPrecision(18,0);
            Property(x => x.Driver2).IsOptional().HasPrecision(18,0);
            Property(x => x.SecondRun).IsOptional();
        }
    }

    // ArchiveRunStop
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ArchiveRunStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ArchiveRunStop>
    {
        public ArchiveRunStopConfiguration()
            : this("dbo")
        {
        }

        public ArchiveRunStopConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.LisSubRun).IsOptional();
            Property(x => x.RunSubId).IsOptional().HasPrecision(18,0);
            Property(x => x.CompanyLocationId).IsOptional().HasPrecision(18,0);
            Property(x => x.StandardMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.Notes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoFax).IsOptional();
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.DelayStopTime).IsOptional().HasPrecision(18,0);
        }
    }

    // chkCheckItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkCheckItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkCheckItem>
    {
        public ChkCheckItemConfiguration()
            : this("dbo")
        {
        }

        public ChkCheckItemConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PalletId).IsOptional();
            Property(x => x.StopNumberId).IsOptional();
            Property(x => x.Pieces).IsOptional();
            Property(x => x.ScanTime).IsOptional();
            Property(x => x.ScanSequence).IsOptional();
            Property(x => x.PalletStopSequence).IsOptional();
            Property(x => x.NewItem).IsOptional();
            Property(x => x.Promo).IsOptional();
        }
    }

    // chkCheckItemLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkCheckItemLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkCheckItemLog>
    {
        public ChkCheckItemLogConfiguration()
            : this("dbo")
        {
        }

        public ChkCheckItemLogConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PalletId).IsOptional();
            Property(x => x.StopNumberId).IsOptional();
            Property(x => x.Pieces).IsOptional();
            Property(x => x.ScanTime).IsOptional();
            Property(x => x.ScanSequence).IsOptional();
            Property(x => x.PalletStopSequence).IsOptional();
            Property(x => x.NewItem).IsOptional();
            Property(x => x.Promo).IsOptional();
            Property(x => x.Action).IsUnicode(false);
            Property(x => x.ActionUser).IsUnicode(false);
        }
    }

    // chkPallet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkPalletConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkPallet>
    {
        public ChkPalletConfiguration()
            : this("dbo")
        {
        }

        public ChkPalletConfiguration(string schema)
        {
            Property(x => x.ItemCount).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FinishedAt).IsOptional();
        }
    }

    // chkPalletLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkPalletLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkPalletLog>
    {
        public ChkPalletLogConfiguration()
            : this("dbo")
        {
        }

        public ChkPalletLogConfiguration(string schema)
        {
            Property(x => x.ItemCount).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FinishedAt).IsOptional();
            Property(x => x.Action).IsUnicode(false);
            Property(x => x.ActionUser).IsUnicode(false);
        }
    }

    // chkStop
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkStop>
    {
        public ChkStopConfiguration()
            : this("dbo")
        {
        }

        public ChkStopConfiguration(string schema)
        {
            Property(x => x.StopNumberId).IsOptional();
            Property(x => x.Exceptions).IsOptional();
            Property(x => x.ClosedAt).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PrintedAt).IsOptional();
            Property(x => x.Cust).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // chkvwCheckSummary
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwCheckSummaryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwCheckSummary>
    {
        public ChkvwCheckSummaryConfiguration()
            : this("dbo")
        {
        }

        public ChkvwCheckSummaryConfiguration(string schema)
        {
            Property(x => x.StopNumberId).IsOptional();
            Property(x => x.PalletId).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Pieces).IsOptional();
        }
    }

    // chkvwExceptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwException>
    {
        public ChkvwExceptionConfiguration()
            : this("dbo")
        {
        }

        public ChkvwExceptionConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.CheckPieces).IsOptional();
            Property(x => x.OverShort).IsOptional().HasPrecision(38,0);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.ItemSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Promo).IsOptional();
            Property(x => x.Lip).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Orders).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // chkvwExceptionDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwExceptionDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwExceptionDetail>
    {
        public ChkvwExceptionDetailConfiguration()
            : this("dbo")
        {
        }

        public ChkvwExceptionDetailConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.CheckPieces).IsOptional();
            Property(x => x.OverShort).IsOptional().HasPrecision(38,0);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.ItemSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Promo).IsOptional();
            Property(x => x.Lip).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Orders).IsOptional();
            Property(x => x.Palletid).IsOptional();
            Property(x => x.CheckPalletPieces).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FinishedAt).IsOptional();
        }
    }

    // chkvwOrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwOrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwOrderDetail>
    {
        public ChkvwOrderDetailConfiguration()
            : this("dbo")
        {
        }

        public ChkvwOrderDetailConfiguration(string schema)
        {
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Pieces).IsOptional().HasPrecision(38,0);
        }
    }

    // chkvwPalletCount
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwPalletCountConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwPalletCount>
    {
        public ChkvwPalletCountConfiguration()
            : this("dbo")
        {
        }

        public ChkvwPalletCountConfiguration(string schema)
        {
            Property(x => x.CustCode).IsOptional().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsUnicode(false);
            Property(x => x.ItemSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.ShipNo).IsOptional().IsUnicode(false);
            Property(x => x.UserCount1).IsOptional();
            Property(x => x.ScannerCount1).IsOptional();
            Property(x => x.UserCount2).IsOptional();
            Property(x => x.ScannerCount2).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FirstName).IsOptional().IsUnicode(false);
            Property(x => x.LastName).IsOptional().IsUnicode(false);
        }
    }

    // chkvwReconcile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwReconcileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwReconcile>
    {
        public ChkvwReconcileConfiguration()
            : this("dbo")
        {
        }

        public ChkvwReconcileConfiguration(string schema)
        {
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.CheckPieces).IsOptional();
            Property(x => x.OverShort).IsOptional().HasPrecision(38,0);
            Property(x => x.Orders).IsOptional();
        }
    }

    // chkvwStopsNotClosed
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChkvwStopsNotClosedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChkvwStopsNotClosed>
    {
        public ChkvwStopsNotClosedConfiguration()
            : this("dbo")
        {
        }

        public ChkvwStopsNotClosedConfiguration(string schema)
        {
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderCount).IsOptional();
            Property(x => x.TotalPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.ScanCount).IsOptional();
            Property(x => x.StopClosedAt).IsOptional();
            Property(x => x.ShipperClosedAt).IsOptional();
            Property(x => x.Closed).IsOptional();
        }
    }

    // ClientBarcodeType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClientBarcodeTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClientBarcodeType>
    {
        public ClientBarcodeTypeConfiguration()
            : this("dbo")
        {
        }

        public ClientBarcodeTypeConfiguration(string schema)
        {
            Property(x => x.ClientName).IsUnicode(false);
            Property(x => x.Prefix).IsUnicode(false);
            Property(x => x.ClientDesc).IsOptional().IsUnicode(false);
        }
    }

    // ClientBarcodeTypeSpec
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClientBarcodeTypeSpecConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClientBarcodeTypeSpec>
    {
        public ClientBarcodeTypeSpecConfiguration()
            : this("dbo")
        {
        }

        public ClientBarcodeTypeSpecConfiguration(string schema)
        {
            Property(x => x.BarcodeTypeName).IsUnicode(false);
            Property(x => x.RegexIdentExtract).IsOptional().IsUnicode(false);
            Property(x => x.NdxStore1Start).IsOptional();
            Property(x => x.NdxStore1End).IsOptional();
            Property(x => x.NdxStore2Start).IsOptional();
            Property(x => x.NdxStore2End).IsOptional();
            Property(x => x.StoreConcatChar).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // Company
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Company>
    {
        public CompanyConfiguration()
            : this("dbo")
        {
        }

        public CompanyConfiguration(string schema)
        {
            Property(x => x.CompanyId).HasPrecision(18,0);
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.ParentCompany).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // CompanyCarrier
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyCarrierConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyCarrier>
    {
        public CompanyCarrierConfiguration()
            : this("dbo")
        {
        }

        public CompanyCarrierConfiguration(string schema)
        {
            Property(x => x.CompanyCarrierId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.Rank).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // CompanyContactInfo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyContactInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyContactInfo>
    {
        public CompanyContactInfoConfiguration()
            : this("dbo")
        {
        }

        public CompanyContactInfoConfiguration(string schema)
        {
            Property(x => x.CompanyContactInfoId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.ContactType).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ContactBlnk).IsOptional().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Email).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ContactTypeId).IsOptional().HasPrecision(18,0);

        }
    }

    // CompanyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyLocation>
    {
        public CompanyLocationConfiguration()
            : this("dbo")
        {
        }

        public CompanyLocationConfiguration(string schema)
        {
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.CompanyId).HasPrecision(18,0);
            Property(x => x.Type).IsFixedLength().IsUnicode(false);
            Property(x => x.Type1).IsFixedLength().IsUnicode(false);
            Property(x => x.AlternateName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Appointment).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoFax).IsOptional();
            Property(x => x.FaxNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SpecialInstructions).IsOptional().IsUnicode(false);
            Property(x => x.Directions).IsOptional().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PmCustNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Lane).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // CompanyLocationAppointment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocationAppointmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyLocationAppointment>
    {
        public CompanyLocationAppointmentConfiguration()
            : this("dbo")
        {
        }

        public CompanyLocationAppointmentConfiguration(string schema)
        {
            Property(x => x.CompanyLocationAppointmentId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.NegativeStartOffset).IsOptional();
            Property(x => x.StartOffset).IsOptional();
            Property(x => x.EndOffset).IsOptional();
            Property(x => x.StartOffsetInMin).IsOptional();
            Property(x => x.EndOffsetInMin).IsOptional();
            Property(x => x.MustFinishWithinWindow).IsOptional();
            Property(x => x.MustStartWithinWindow).IsOptional();
            Property(x => x.Weekday).IsOptional();

        }
    }

    // CompanyLocationGPS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyLocationGpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyLocationGp>
    {
        public CompanyLocationGpConfiguration()
            : this("dbo")
        {
        }

        public CompanyLocationGpConfiguration(string schema)
        {
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.Longitude).HasPrecision(18,10);
            Property(x => x.Latitude).HasPrecision(18,10);
        }
    }

    // CompanyMfCode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyMfCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyMfCode>
    {
        public CompanyMfCodeConfiguration()
            : this("dbo")
        {
        }

        public CompanyMfCodeConfiguration(string schema)
        {
            Property(x => x.CompanyId).IsOptional();
            Property(x => x.MfCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // CompanyOpenWindow
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyOpenWindowConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyOpenWindow>
    {
        public CompanyOpenWindowConfiguration()
            : this("dbo")
        {
        }

        public CompanyOpenWindowConfiguration(string schema)
        {
            Property(x => x.CompanyOpenWindowId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.DayofWeek).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OpenTime).IsOptional();
            Property(x => x.CloseTime).IsOptional();
            Property(x => x.AppointmentTime).IsOptional();
            Property(x => x.LunchTime).IsOptional();

        }
    }

    // CompanyShipper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyShipperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyShipper>
    {
        public CompanyShipperConfiguration()
            : this("dbo")
        {
        }

        public CompanyShipperConfiguration(string schema)
        {
            Property(x => x.CompanyLocationId).IsOptional().HasPrecision(18,0);
            Property(x => x.Type).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NotChecked).IsOptional();
            Property(x => x.DetailNotChecked).IsOptional();
            Property(x => x.DetailPromoNotChecked).IsOptional();
            Property(x => x.HotButton).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MfgDateType).IsOptional().IsUnicode(false);

        }
    }

    // CompanyStandard
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompanyStandardConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompanyStandard>
    {
        public CompanyStandardConfiguration()
            : this("dbo")
        {
        }

        public CompanyStandardConfiguration(string schema)
        {
            Property(x => x.CompanyStandardId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.MinTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoundsPerHour).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // CompletedWork
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CompletedWorkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CompletedWork>
    {
        public CompletedWorkConfiguration()
            : this("dbo")
        {
        }

        public CompletedWorkConfiguration(string schema)
        {
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.Hours).IsOptional().HasPrecision(6,2);
            Property(x => x.UnitType).IsOptional().IsUnicode(false);
            Property(x => x.Units).IsOptional().HasPrecision(9,2);
            Property(x => x.Source).IsOptional().IsUnicode(false);
            Property(x => x.Created).IsOptional();
            Property(x => x.Modified).IsOptional();
        }
    }

    // Condition
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConditionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Condition>
    {
        public ConditionConfiguration()
            : this("dbo")
        {
        }

        public ConditionConfiguration(string schema)
        {
            Property(x => x.ConditionId).HasPrecision(18,0);
            Property(x => x.Condition_).IsFixedLength().IsUnicode(false);
        }
    }

    // ContactType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ContactTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ContactType>
    {
        public ContactTypeConfiguration()
            : this("dbo")
        {
        }

        public ContactTypeConfiguration(string schema)
        {
            Property(x => x.ContactTypeId).HasPrecision(18,0);
            Property(x => x.ContactType_).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // DeletedOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeletedOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeletedOrder>
    {
        public DeletedOrderConfiguration()
            : this("dbo")
        {
        }

        public DeletedOrderConfiguration(string schema)
        {
            Property(x => x.DeletedOrdersId).HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignor).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.ShipperDeliveryDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.ActualDeliveryDate).IsOptional();
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderCube).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderPallets).IsOptional().HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.UpdateOrderDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ServiceLevel).IsOptional();
            Property(x => x.BatchNo).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // Department
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DepartmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Department>
    {
        public DepartmentConfiguration()
            : this("dbo")
        {
        }

        public DepartmentConfiguration(string schema)
        {
            Property(x => x.DepartmentId).HasPrecision(18,0);
            Property(x => x.Department_).IsFixedLength().IsUnicode(false);
        }
    }

    // dtproperties
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DtpropertyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Dtproperty>
    {
        public DtpropertyConfiguration()
            : this("dbo")
        {
        }

        public DtpropertyConfiguration(string schema)
        {
            Property(x => x.Objectid).IsOptional();
            Property(x => x.Property).IsUnicode(false);
            Property(x => x.Value).IsOptional().IsUnicode(false);
            Property(x => x.Uvalue).IsOptional();
            Property(x => x.Lvalue).IsOptional();
        }
    }

    // edi214
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Edi214Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Edi214>
    {
        public Edi214Configuration()
            : this("dbo")
        {
        }

        public Edi214Configuration(string schema)
        {
            Property(x => x.TransactionId).IsOptional();
            Property(x => x.B10Ref).IsOptional().IsUnicode(false);
            Property(x => x.B10ShipId).IsOptional().IsUnicode(false);
            Property(x => x.B10Scac).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.L11Po).IsOptional().IsUnicode(false);
            Property(x => x.L11Ma).IsOptional().IsUnicode(false);
            Property(x => x.N1SfName).IsOptional().IsUnicode(false);
            Property(x => x.N1SfQual).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.N1SfRef).IsOptional().IsUnicode(false);
            Property(x => x.N1ShName).IsOptional().IsUnicode(false);
            Property(x => x.N3ShAddr1).IsOptional().IsUnicode(false);
            Property(x => x.N4ShCity).IsOptional().IsUnicode(false);
            Property(x => x.N4ShSt).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.N4ShZip).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.N1CnName).IsOptional().IsUnicode(false);
            Property(x => x.At7XaDate).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7XaTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AaDate).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AaTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X9Date).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X9Time).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AbDate).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AbTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X3Date).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X3Time).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AfDate).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7AfTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X1Date).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7X1Time).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7D1Date).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.At7D1Time).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // ediFa
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiFaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EdiFa>
    {
        public EdiFaConfiguration()
            : this("dbo")
        {
        }

        public EdiFaConfiguration(string schema)
        {
            Property(x => x.GroupId).IsOptional();
            Property(x => x.IsaControl).IsOptional();
            Property(x => x.GsControl).IsOptional();
            Property(x => x.DirectionIn).IsOptional();
            Property(x => x.EnterDate).IsOptional();
        }
    }

    // ediGroup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiGroupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EdiGroup>
    {
        public EdiGroupConfiguration()
            : this("dbo")
        {
        }

        public EdiGroupConfiguration(string schema)
        {
            Property(x => x.IsaSendQual).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsaSendId).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsaRecvQual).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsaRecvId).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsaDate).IsOptional();
            Property(x => x.IsaControl).IsOptional();
            Property(x => x.IsaAck).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsaUsage).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.GsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.GsSendId).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.GsRecvId).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.GsDate).IsOptional();
            Property(x => x.GsControl).IsOptional();
            Property(x => x.TsCountGe).IsOptional();
            Property(x => x.TsCountActual).IsOptional();
            Property(x => x.TsCountAck).IsOptional();
            Property(x => x.AckCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DirectionIn).IsOptional();
            Property(x => x.EnterDate).IsOptional();
        }
    }

    // ediTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EdiTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EdiTransaction>
    {
        public EdiTransactionConfiguration()
            : this("dbo")
        {
        }

        public EdiTransactionConfiguration(string schema)
        {
            Property(x => x.GroupId).IsOptional();
            Property(x => x.StCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StControl).IsOptional();
            Property(x => x.SegCountSe).IsOptional();
            Property(x => x.SegCountActual).IsOptional();
            Property(x => x.AckCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EnterDate).IsOptional();
            Property(x => x.Ref1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Ref2).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // Employee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Employee>
    {
        public EmployeeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeConfiguration(string schema)
        {
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.SurName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FirstName).IsFixedLength().IsUnicode(false);
            Property(x => x.MiddleName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LastName).IsFixedLength().IsUnicode(false);
            Property(x => x.SuffixName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LisActive).IsOptional();
            Property(x => x.HireDate).IsOptional();
            Property(x => x.Email).IsOptional().IsUnicode(false);
            Property(x => x.Ref1).IsOptional().IsUnicode(false);
            Property(x => x.Ref2).IsOptional().IsUnicode(false);
            Property(x => x.Active).IsOptional();
            Property(x => x.Ref3).IsOptional().IsUnicode(false);
        }
    }

    // Employee_Calendar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeCalendarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeCalendar>
    {
        public EmployeeCalendarConfiguration()
            : this("dbo")
        {
        }

        public EmployeeCalendarConfiguration(string schema)
        {
            Property(x => x.EmployeeCalendarId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.DateFrom).IsOptional();
            Property(x => x.DateTo).IsOptional();
            Property(x => x.EmployeeInActiveReasonListId).IsOptional().HasPrecision(18,0);
        }
    }

    // Employee_Department
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeDepartmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeDepartment>
    {
        public EmployeeDepartmentConfiguration()
            : this("dbo")
        {
        }

        public EmployeeDepartmentConfiguration(string schema)
        {
            Property(x => x.EmployeeDepartmentId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.DepartmentId).HasPrecision(18,0);

        }
    }

    // Employee_InActive_Reason_List
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeInActiveReasonListConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeInActiveReasonList>
    {
        public EmployeeInActiveReasonListConfiguration()
            : this("dbo")
        {
        }

        public EmployeeInActiveReasonListConfiguration(string schema)
        {
            Property(x => x.EmployeeInactiveReasonListId).HasPrecision(18,0);
            Property(x => x.InActiveReason).IsFixedLength().IsUnicode(false);
        }
    }

    // Employee_Productivity
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeProductivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeProductivity>
    {
        public EmployeeProductivityConfiguration()
            : this("dbo")
        {
        }

        public EmployeeProductivityConfiguration(string schema)
        {
            Property(x => x.EmployeeProductivityId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.EmployeeDate).IsOptional();
            Property(x => x.Status).IsOptional().HasPrecision(18,0);
            Property(x => x.EmployeeInactiveReasonId).IsOptional().HasPrecision(18,0);

        }
    }

    // EmployeeTime
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeTimeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeTime>
    {
        public EmployeeTimeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeTimeConfiguration(string schema)
        {
            Property(x => x.EmployeeId).IsUnicode(false);
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.InTime).IsOptional().IsUnicode(false);
            Property(x => x.OutTime).IsOptional().IsUnicode(false);
            Property(x => x.InCode).IsOptional().IsUnicode(false);
            Property(x => x.OutCode).IsOptional().IsUnicode(false);
            Property(x => x.InMod).IsOptional();
            Property(x => x.OutMod).IsOptional();
            Property(x => x.RegHour).IsOptional().HasPrecision(6,2);
            Property(x => x.OverTime1).IsOptional().HasPrecision(6,2);
            Property(x => x.OverTime2).IsOptional().HasPrecision(6,2);
            Property(x => x.JobId).IsOptional();
            Property(x => x.Deleted).IsOptional();
            Property(x => x.Shift).IsOptional().IsUnicode(false);
            Property(x => x.EventDate).IsOptional();
        }
    }

    // EquipmentChecklistResponse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentChecklistResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentChecklistResponse>
    {
        public EquipmentChecklistResponseConfiguration()
            : this("dbo")
        {
        }

        public EquipmentChecklistResponseConfiguration(string schema)
        {
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.EquipmentDetailId).IsOptional();
            Property(x => x.Comment).IsOptional();

        }
    }

    // EquipmentClassHeader
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentClassHeaderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentClassHeader>
    {
        public EquipmentClassHeaderConfiguration()
            : this("dbo")
        {
        }

        public EquipmentClassHeaderConfiguration(string schema)
        {
        }
    }

    // EquipmentDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentDetail>
    {
        public EquipmentDetailConfiguration()
            : this("dbo")
        {
        }

        public EquipmentDetailConfiguration(string schema)
        {
            Property(x => x.Description).IsOptional();
            Property(x => x.SerialNo).IsOptional();
            Property(x => x.InServiceDate).IsOptional();
            Property(x => x.OutOfServiceDate).IsOptional();

        }
    }

    // ExceptionLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExceptionLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExceptionLog>
    {
        public ExceptionLogConfiguration()
            : this("dbo")
        {
        }

        public ExceptionLogConfiguration(string schema)
        {
            Property(x => x.LogDate).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.ScannerId).IsOptional().IsUnicode(false);
            Property(x => x.MsgSource).IsOptional().IsUnicode(false);
            Property(x => x.MsgType).IsOptional().IsUnicode(false);
            Property(x => x.MsgText).IsOptional().IsUnicode(false);
        }
    }

    // Flag
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlagConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Flag>
    {
        public FlagConfiguration()
            : this("dbo")
        {
        }

        public FlagConfiguration(string schema)
        {
            Property(x => x.FlagId).HasPrecision(10,0);
            Property(x => x.HostOrders).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ProcessedOrders).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CountOrders).IsOptional();
        }
    }

    // GPSLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GpsLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GpsLocation>
    {
        public GpsLocationConfiguration()
            : this("dbo")
        {
        }

        public GpsLocationConfiguration(string schema)
        {
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.Longitude).HasPrecision(18,8);
            Property(x => x.Latitude).HasPrecision(18,8);
        }
    }

    // IdList
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IdListConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IdList>
    {
        public IdListConfiguration()
            : this("dbo")
        {
        }

        public IdListConfiguration(string schema)
        {
            Property(x => x.Id).HasPrecision(18,0);
        }
    }

    // ImportedWarehouseWeight
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ImportedWarehouseWeightConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImportedWarehouseWeight>
    {
        public ImportedWarehouseWeightConfiguration()
            : this("dbo")
        {
        }

        public ImportedWarehouseWeightConfiguration(string schema)
        {
            Property(x => x.Weight).HasPrecision(8,2);
        }
    }

    // InboundCondition
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundConditionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundCondition>
    {
        public InboundConditionConfiguration()
            : this("dbo")
        {
        }

        public InboundConditionConfiguration(string schema)
        {
            Property(x => x.ConditionDescription).IsUnicode(false);
        }
    }

    // InboundException
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundException>
    {
        public InboundExceptionConfiguration()
            : this("dbo")
        {
        }

        public InboundExceptionConfiguration(string schema)
        {
            Property(x => x.NumPieces).IsOptional();
            Property(x => x.DistanceInTrailer).IsOptional();
            Property(x => x.VerticalLocationId).IsOptional();
            Property(x => x.HorizontalLocationId).IsOptional();
        }
    }

    // InboundException_Beta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionBetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundExceptionBeta>
    {
        public InboundExceptionBetaConfiguration()
            : this("dbo")
        {
        }

        public InboundExceptionBetaConfiguration(string schema)
        {
            Property(x => x.NumPieces).IsOptional();
            Property(x => x.DistanceInTrailer).IsOptional();
            Property(x => x.VerticalLocationId).IsOptional();
            Property(x => x.HorizontalLocationId).IsOptional();
        }
    }

    // InboundExceptionCondition
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionConditionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundExceptionCondition>
    {
        public InboundExceptionConditionConfiguration()
            : this("dbo")
        {
        }

        public InboundExceptionConditionConfiguration(string schema)
        {
        }
    }

    // InboundExceptionCondition_Beta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundExceptionConditionBetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundExceptionConditionBeta>
    {
        public InboundExceptionConditionBetaConfiguration()
            : this("dbo")
        {
        }

        public InboundExceptionConditionBetaConfiguration(string schema)
        {
        }
    }

    // InboundLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundLocation>
    {
        public InboundLocationConfiguration()
            : this("dbo")
        {
        }

        public InboundLocationConfiguration(string schema)
        {
            Property(x => x.LocationType).IsFixedLength().IsUnicode(false);
            Property(x => x.LocationCode).IsFixedLength().IsUnicode(false);
            Property(x => x.LocationDescription).IsUnicode(false);
        }
    }

    // InboundLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundLog>
    {
        public InboundLogConfiguration()
            : this("dbo")
        {
        }

        public InboundLogConfiguration(string schema)
        {
            Property(x => x.LogDate).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.ScannerId).IsOptional().IsUnicode(false);
            Property(x => x.MsgSource).IsOptional().IsUnicode(false);
            Property(x => x.MsgType).IsOptional().IsUnicode(false);
            Property(x => x.MsgText).IsOptional().IsUnicode(false);
        }
    }

    // InboundPallet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPalletConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundPallet>
    {
        public InboundPalletConfiguration()
            : this("dbo")
        {
        }

        public InboundPalletConfiguration(string schema)
        {
            Property(x => x.LicensePlate).IsOptional().IsUnicode(false);
            Property(x => x.ItemCode).IsFixedLength().IsUnicode(false);
            Property(x => x.NumPieces).IsOptional();
            Property(x => x.ManufactureDate).IsOptional();
            Property(x => x.ManufactureYear).IsOptional();
            Property(x => x.ManufactureMonth).IsOptional();
            Property(x => x.ManufactureDay).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BarCodeId).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.ScanTime).IsOptional();
        }
    }

    // InboundPallet_Beta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPalletBetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundPalletBeta>
    {
        public InboundPalletBetaConfiguration()
            : this("dbo")
        {
        }

        public InboundPalletBetaConfiguration(string schema)
        {
            Property(x => x.LicensePlate).IsOptional().IsUnicode(false);
            Property(x => x.ManufactureDate).IsOptional();
            Property(x => x.ManufactureYear).IsOptional();
            Property(x => x.ManufactureMonth).IsOptional();
            Property(x => x.ManufactureDay).IsOptional();
            Property(x => x.UserId).IsOptional();
        }
    }

    // InboundPalletDetail_Beta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundPalletDetailBetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundPalletDetailBeta>
    {
        public InboundPalletDetailBetaConfiguration()
            : this("dbo")
        {
        }

        public InboundPalletDetailBetaConfiguration(string schema)
        {
            Property(x => x.ItemCode).IsFixedLength().IsUnicode(false);
            Property(x => x.NumPieces).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BarCodeId).IsOptional();
            Property(x => x.ScanTime).IsOptional();
        }
    }

    // InboundSealDisposition
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundSealDispositionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundSealDisposition>
    {
        public InboundSealDispositionConfiguration()
            : this("dbo")
        {
        }

        public InboundSealDispositionConfiguration(string schema)
        {
            Property(x => x.Description).IsUnicode(false);
        }
    }

    // InboundTrailer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundTrailerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundTrailer>
    {
        public InboundTrailerConfiguration()
            : this("dbo")
        {
        }

        public InboundTrailerConfiguration(string schema)
        {
            Property(x => x.UrNumber).IsUnicode(false);
            Property(x => x.CloseDate).IsOptional();
            Property(x => x.ReportPrinted).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.UnloadStatus).IsFixedLength().IsUnicode(false);
            Property(x => x.UserId).IsOptional();
            Property(x => x.ReSealNumber).IsOptional().IsUnicode(false);
            Property(x => x.SealNumber).IsOptional().IsUnicode(false);
            Property(x => x.SealDispositionId).IsOptional();
            Property(x => x.Dunnage).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // InboundTrailer_Beta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InboundTrailerBetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InboundTrailerBeta>
    {
        public InboundTrailerBetaConfiguration()
            : this("dbo")
        {
        }

        public InboundTrailerBetaConfiguration(string schema)
        {
            Property(x => x.UrNumber).IsUnicode(false);
            Property(x => x.CloseDate).IsOptional();
            Property(x => x.ReportPrinted).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.UnloadStatus).IsFixedLength().IsUnicode(false);
            Property(x => x.UserId).IsOptional();
            Property(x => x.ReSealNumber).IsOptional().IsUnicode(false);
            Property(x => x.SealNumber).IsOptional().IsUnicode(false);
            Property(x => x.SealDispositionId).IsOptional();
            Property(x => x.Dunnage).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // Item
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Item>
    {
        public ItemConfiguration()
            : this("dbo")
        {
        }

        public ItemConfiguration(string schema)
        {
            Property(x => x.ItemCode).IsFixedLength().IsUnicode(false);
            Property(x => x.Description).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Weight).IsOptional().HasPrecision(18,0);
            Property(x => x.Cube).IsOptional().HasPrecision(18,0);
            Property(x => x.DifferentCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // JobType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobType>
    {
        public JobTypeConfiguration()
            : this("dbo")
        {
        }

        public JobTypeConfiguration(string schema)
        {
            Property(x => x.DepartmentId).IsOptional();
            Property(x => x.Description).IsOptional().IsUnicode(false);
            Property(x => x.Name).IsOptional().IsUnicode(false);
        }
    }

    // vwAllRuns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwAllRunConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LFolino_VwAllRun>
    {
        public LFolino_VwAllRunConfiguration()
            : this("LFolino")
        {
        }

        public LFolino_VwAllRunConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.Weight).IsOptional().HasPrecision(18,0);
            Property(x => x.Cube).IsOptional().HasPrecision(18,0);
            Property(x => x.Pallets).IsOptional().HasPrecision(18,0);
            Property(x => x.Pieces).IsOptional().HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.ActualReturnDate).IsOptional();
            Property(x => x.StandardMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Comments).IsOptional().IsUnicode(false);
            Property(x => x.ReportDate).IsOptional();
            Property(x => x.UpdateDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
        }
    }

    // vwAllStops
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwAllStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LFolino_VwAllStop>
    {
        public LFolino_VwAllStopConfiguration()
            : this("LFolino")
        {
        }

        public LFolino_VwAllStopConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.LisSubRun).IsOptional();
            Property(x => x.RunSubId).IsOptional().HasPrecision(18,0);
            Property(x => x.CompanyLocationId).IsOptional().HasPrecision(18,0);
            Property(x => x.StandardMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.Notes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoFax).IsOptional();
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.DelayStopTime).IsOptional().HasPrecision(18,0);
        }
    }

    // vwProductivity
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LFolino_VwProductivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LFolino_VwProductivity>
    {
        public LFolino_VwProductivityConfiguration()
            : this("LFolino")
        {
        }

        public LFolino_VwProductivityConfiguration(string schema)
        {
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.FirstName).IsFixedLength().IsUnicode(false);
            Property(x => x.LastName).IsFixedLength().IsUnicode(false);
            Property(x => x.Hours).IsOptional().HasPrecision(6,2);
            Property(x => x.UnitType).IsOptional().IsUnicode(false);
            Property(x => x.Units).IsOptional().HasPrecision(9,2);
            Property(x => x.Description).IsOptional().IsUnicode(false);
            Property(x => x.JobId).IsOptional();
            Property(x => x.Ref2).IsOptional().IsUnicode(false);
            Property(x => x.IdName).IsOptional().IsUnicode(false);
        }
    }

    // License
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LicenseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<License>
    {
        public LicenseConfiguration()
            : this("dbo")
        {
        }

        public LicenseConfiguration(string schema)
        {
            Property(x => x.LicenseId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.ProformaRunMasterId).HasPrecision(18,0);
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.StopNumberId).HasPrecision(18,0);
        }
    }

    // Location_Images
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LocationImageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LocationImage>
    {
        public LocationImageConfiguration()
            : this("dbo")
        {
        }

        public LocationImageConfiguration(string schema)
        {
        }
    }

    // Location_ImageRelationship
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LocationImageRelationshipConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LocationImageRelationship>
    {
        public LocationImageRelationshipConfiguration()
            : this("dbo")
        {
        }

        public LocationImageRelationshipConfiguration(string schema)
        {

        }
    }

    // LoggedInfo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LoggedInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LoggedInfo>
    {
        public LoggedInfoConfiguration()
            : this("dbo")
        {
        }

        public LoggedInfoConfiguration(string schema)
        {
            Property(x => x.Importance).IsOptional().IsUnicode(false);
            Property(x => x.Message).IsOptional().IsUnicode(false);
            Property(x => x.TimeStamp).IsOptional();
        }
    }

    // MobileAppConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MobileAppConfig>
    {
        public MobileAppConfigConfiguration()
            : this("dbo")
        {
        }

        public MobileAppConfigConfiguration(string schema)
        {
        }
    }

    // MobileAppEmployeeRequestsOthersRun
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppEmployeeRequestsOthersRunConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MobileAppEmployeeRequestsOthersRun>
    {
        public MobileAppEmployeeRequestsOthersRunConfiguration()
            : this("dbo")
        {
        }

        public MobileAppEmployeeRequestsOthersRunConfiguration(string schema)
        {
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.RequestedEmployeeId).HasPrecision(18,0);
            Property(x => x.RunNumberId).HasPrecision(18,0);
        }
    }

    // MobileAppExceptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MobileAppException>
    {
        public MobileAppExceptionConfiguration()
            : this("dbo")
        {
        }

        public MobileAppExceptionConfiguration(string schema)
        {
        }
    }

    // MobileAppProformaDateReleased
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileAppProformaDateReleasedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MobileAppProformaDateReleased>
    {
        public MobileAppProformaDateReleasedConfiguration()
            : this("dbo")
        {
        }

        public MobileAppProformaDateReleasedConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsUnicode(false);
        }
    }

    // MobileUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MobileUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MobileUser>
    {
        public MobileUserConfiguration()
            : this("dbo")
        {
        }

        public MobileUserConfiguration(string schema)
        {
            Property(x => x.Lastname).IsOptional().IsFixedLength();
            Property(x => x.Firstname).IsOptional().IsFixedLength();
            Property(x => x.Initials).IsFixedLength();
            Property(x => x.Pin).IsOptional();
            Property(x => x.Deleted).IsOptional();
        }
    }

    // ModuleInfo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ModuleInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModuleInfo>
    {
        public ModuleInfoConfiguration()
            : this("dbo")
        {
        }

        public ModuleInfoConfiguration(string schema)
        {
            Property(x => x.Version).IsOptional();
            Property(x => x.Name).IsOptional();
            Property(x => x.AssemblyFileName).IsOptional();
            Property(x => x.IsMain).IsOptional();
            Property(x => x.OptimisticLockField).IsOptional();
        }
    }

    // NewOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NewOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NewOrder>
    {
        public NewOrderConfiguration()
            : this("dbo")
        {
        }

        public NewOrderConfiguration(string schema)
        {
            Property(x => x.NewOrdersId).HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).HasPrecision(18,0);
            Property(x => x.Consignor).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.ShipperDeliveryDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.ActualDeliveryDate).IsOptional();
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderCube).HasPrecision(18,3);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderPallets).HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.UpdateOrderDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ServiceLevel).IsOptional();
            Property(x => x.FlagId).IsOptional().HasPrecision(10,0);
            Property(x => x.AddDeleteEdit).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Error).IsOptional().IsUnicode(false);
            Property(x => x.BatchNo).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // NewOrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NewOrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NewOrderDetail>
    {
        public NewOrderDetailConfiguration()
            : this("dbo")
        {
        }

        public NewOrderDetailConfiguration(string schema)
        {
            Property(x => x.OrderDetailId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
            Property(x => x.LineSeqNo).IsOptional().HasPrecision(18,0);
            Property(x => x.ItemId).IsOptional();
            Property(x => x.Pieces).IsOptional().HasPrecision(9,0);
            Property(x => x.Weight).IsOptional().HasPrecision(18,2);
            Property(x => x.Cube).IsOptional().HasPrecision(18,3);
            Property(x => x.LisTempControlled).IsOptional();
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).HasPrecision(18,0);
            Property(x => x.FlagId).HasPrecision(10,0);

        }
    }

    // NonDispatchedStop
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NonDispatchedStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NonDispatchedStop>
    {
        public NonDispatchedStopConfiguration()
            : this("dbo")
        {
        }

        public NonDispatchedStopConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.StopDateTime).IsOptional();
            Property(x => x.DepartDateTime).IsOptional();
            Property(x => x.Longitude).HasPrecision(18,10);
            Property(x => x.Latitude).HasPrecision(18,10);
            Property(x => x.RunNumberId).HasPrecision(18,0);

        }
    }

    // NonDispatchedStopType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NonDispatchedStopTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NonDispatchedStopType>
    {
        public NonDispatchedStopTypeConfiguration()
            : this("dbo")
        {
        }

        public NonDispatchedStopTypeConfiguration(string schema)
        {
        }
    }

    // Orders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Order>
    {
        public OrderConfiguration()
            : this("dbo")
        {
        }

        public OrderConfiguration(string schema)
        {
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).HasPrecision(18,0);
            Property(x => x.Consignor).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.ShipperDeliveryDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.ActualDeliveryDate).IsOptional();
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderCube).HasPrecision(18,3);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderPallets).HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.UpdateOrderDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ServiceLevel).IsOptional();
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.BatchNo).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // OrderActions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderActionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderAction>
    {
        public OrderActionConfiguration()
            : this("dbo")
        {
        }

        public OrderActionConfiguration(string schema)
        {
            Property(x => x.Description).IsUnicode(false);
        }
    }

    // OrderActivity
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderActivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderActivity>
    {
        public OrderActivityConfiguration()
            : this("dbo")
        {
        }

        public OrderActivityConfiguration(string schema)
        {
            Property(x => x.OrderId).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.PalletId).IsOptional();
            Property(x => x.UserCaseCount).IsOptional();
            Property(x => x.ScannerCaseCount).IsOptional();
            Property(x => x.SupervisorCode).IsOptional().IsUnicode(false);
        }
    }

    // OrderAssignment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderAssignmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderAssignment>
    {
        public OrderAssignmentConfiguration()
            : this("dbo")
        {
        }

        public OrderAssignmentConfiguration(string schema)
        {
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.PercentPick).IsOptional().HasPrecision(5,4);
            Property(x => x.PercentLoad).IsOptional().HasPrecision(5,4);
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.PercentAssigned).IsOptional().HasPrecision(5,4);
            Property(x => x.Created).IsOptional();
            Property(x => x.Modified).IsOptional();
        }
    }

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderDetail>
    {
        public OrderDetailConfiguration()
            : this("dbo")
        {
        }

        public OrderDetailConfiguration(string schema)
        {
            Property(x => x.OrderDetailId).HasPrecision(18,0);
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.LineSeqNo).IsOptional();
            Property(x => x.ItemId).IsOptional();
            Property(x => x.Pieces).IsOptional().HasPrecision(9,0);
            Property(x => x.Weight).IsOptional().HasPrecision(18,2);
            Property(x => x.Cube).IsOptional().HasPrecision(18,3);
            Property(x => x.LisTempControlled).IsOptional();
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);

        }
    }

    // OrderErrors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderError>
    {
        public OrderErrorConfiguration()
            : this("dbo")
        {
        }

        public OrderErrorConfiguration(string schema)
        {
            Property(x => x.BarCode).IsOptional().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsUnicode(false);
            Property(x => x.ErrorCode).IsOptional().IsUnicode(false);
            Property(x => x.ErrorDesc).IsOptional().IsUnicode(false);
            Property(x => x.EntryTypeCode).IsUnicode(false);
            Property(x => x.UserId).IsOptional();
        }
    }

    // OrderItems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderItem>
    {
        public OrderItemConfiguration()
            : this("dbo")
        {
        }

        public OrderItemConfiguration(string schema)
        {
            Property(x => x.LookupCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipNo).IsOptional().IsUnicode(false);
            Property(x => x.SourceTable).IsOptional().IsUnicode(false);
            Property(x => x.BarCodeId).IsOptional();
            Property(x => x.BarCode).IsOptional().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsUnicode(false);
            Property(x => x.EntrySeqNum).IsOptional();
            Property(x => x.EntryTypeCode).IsUnicode(false);
            Property(x => x.EntryMode).IsOptional().IsUnicode(false);
            Property(x => x.UserId).IsOptional();
        }
    }

    // OrderJobCode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderJobCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderJobCode>
    {
        public OrderJobCodeConfiguration()
            : this("dbo")
        {
        }

        public OrderJobCodeConfiguration(string schema)
        {
            Property(x => x.OrderId).HasPrecision(18,0);
        }
    }

    // OrderJobCodeMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderJobCodeMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderJobCodeMapping>
    {
        public OrderJobCodeMappingConfiguration()
            : this("dbo")
        {
        }

        public OrderJobCodeMappingConfiguration(string schema)
        {
            Property(x => x.ShipperShortName).IsOptional().IsUnicode(false);
            Property(x => x.ShipperType).IsOptional().IsUnicode(false);
            Property(x => x.OrderType).IsOptional().IsUnicode(false);
            Property(x => x.WorkType).IsOptional();
        }
    }

    // OrderPick
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderPickConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderPick>
    {
        public OrderPickConfiguration()
            : this("dbo")
        {
        }

        public OrderPickConfiguration(string schema)
        {
            Property(x => x.State).IsUnicode(false);
            Property(x => x.StartDateTime).IsOptional();
            Property(x => x.EndDateTime).IsOptional();
        }
    }

    // PalletTag
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PalletTagConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PalletTag>
    {
        public PalletTagConfiguration()
            : this("dbo")
        {
        }

        public PalletTagConfiguration(string schema)
        {
            Property(x => x.DateCreated).IsOptional();
            Property(x => x.DateModified).IsOptional();
            Property(x => x.Userid).IsOptional().IsFixedLength();
            Property(x => x.BarCode).IsOptional().IsUnicode(false);
        }
    }

    // Proforma
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Proforma>
    {
        public ProformaConfiguration()
            : this("dbo")
        {
        }

        public ProformaConfiguration(string schema)
        {
            Property(x => x.ProformaName).IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
        }
    }

    // ProformaRunMaster
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunMasterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProformaRunMaster>
    {
        public ProformaRunMasterConfiguration()
            : this("dbo")
        {
        }

        public ProformaRunMasterConfiguration(string schema)
        {
            Property(x => x.ProformaRunMasterId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.ProformaName).IsFixedLength().IsUnicode(false);
            Property(x => x.DayOfWeek).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LisAllowDelete).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaId).IsOptional();
            Property(x => x.RunId).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.DispatchDatePlusThis).IsOptional().HasPrecision(18,0);

        }
    }

    // ProformaRunResource
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunResourceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProformaRunResource>
    {
        public ProformaRunResourceConfiguration()
            : this("dbo")
        {
        }

        public ProformaRunResourceConfiguration(string schema)
        {
            Property(x => x.ProformaRunResourceId).HasPrecision(18,0);
            Property(x => x.Driver1).IsOptional().HasPrecision(18,0);
            Property(x => x.Driver2).IsOptional().HasPrecision(18,0);
            Property(x => x.Tractor).IsOptional().HasPrecision(18,0);
            Property(x => x.Trailer1).IsOptional().HasPrecision(18,0);
            Property(x => x.Trailer2).IsOptional().HasPrecision(18,0);
            Property(x => x.ProformaRunMasterId).HasPrecision(18,0);
            Property(x => x.SecondRun).IsOptional();

        }
    }

    // ProformaRunStops
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProformaRunStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProformaRunStop>
    {
        public ProformaRunStopConfiguration()
            : this("dbo")
        {
        }

        public ProformaRunStopConfiguration(string schema)
        {
            Property(x => x.ProformaRunStopsId).HasPrecision(18,0);
            Property(x => x.ProformaRunMasterId).HasPrecision(18,0);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.AveWeight).IsOptional().HasPrecision(18,0);
            Property(x => x.AveCube).IsOptional().HasPrecision(18,0);
            Property(x => x.AvePieces).IsOptional().HasPrecision(18,0);
            Property(x => x.AvePallets).IsOptional().HasPrecision(18,0);
            Property(x => x.MilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.AveStopTime).IsOptional().HasPrecision(18,0);

        }
    }

    // Report
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Report>
    {
        public ReportConfiguration()
            : this("dbo")
        {
        }

        public ReportConfiguration(string schema)
        {
            Property(x => x.ReportId).HasPrecision(18,0);
            Property(x => x.MenuName).IsFixedLength().IsUnicode(false);
            Property(x => x.Path).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Report_).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SortOrder).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsByRun).IsOptional();
            Property(x => x.IsPoByStop).IsOptional();
            Property(x => x.HasEndDate).IsOptional();
        }
    }

    // ReportJob
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportJobConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReportJob>
    {
        public ReportJobConfiguration()
            : this("dbo")
        {
        }

        public ReportJobConfiguration(string schema)
        {
            Property(x => x.ReportId).IsOptional();
            Property(x => x.Created).IsOptional();
            Property(x => x.Printed).IsOptional();
            Property(x => x.Printer).IsOptional().IsUnicode(false);
            Property(x => x.Param1Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param1Value).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param1Type).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param2Value).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param2Type).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param3Value).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Param3Type).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
        }
    }

    // Results_old
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ResultsOldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResultsOld>
    {
        public ResultsOldConfiguration()
            : this("dbo")
        {
        }

        public ResultsOldConfiguration(string schema)
        {
            Property(x => x.Runname).IsFixedLength().IsUnicode(false);
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
        }
    }

    // Run
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Run>
    {
        public RunConfiguration()
            : this("dbo")
        {
        }

        public RunConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.Weight).IsOptional().HasPrecision(18,0);
            Property(x => x.Cube).IsOptional().HasPrecision(18,0);
            Property(x => x.Pallets).IsOptional().HasPrecision(18,0);
            Property(x => x.Pieces).IsOptional().HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.ActualShipDate).IsOptional();
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.ActualReturnDate).IsOptional();
            Property(x => x.StandardMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMiles).IsOptional().HasPrecision(18,0);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Comments).IsOptional().IsUnicode(false);
            Property(x => x.UpdateDate).IsOptional();
            Property(x => x.ReportDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.RunNum).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.ProformaRunMasterId).IsOptional();
            Property(x => x.WarehouseNotes).IsOptional().IsUnicode(false);
        }
    }

    // RunAssignment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunAssignmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunAssignment>
    {
        public RunAssignmentConfiguration()
            : this("dbo")
        {
        }

        public RunAssignmentConfiguration(string schema)
        {
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.PercentPick).HasPrecision(5,4);
            Property(x => x.PercentLoad).HasPrecision(5,4);
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.PercentAssigned).IsOptional().HasPrecision(5,4);
            Property(x => x.Created).IsOptional();
            Property(x => x.Modified).IsOptional();
        }
    }

    // RunDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunDetail>
    {
        public RunDetailConfiguration()
            : this("dbo")
        {
        }

        public RunDetailConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.RunStartTime).IsOptional();
            Property(x => x.RunEndTime).IsOptional();
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.ModifiedDatetime).IsOptional();
            Property(x => x.RunDepartTime).IsOptional();
        }
    }

    // RunOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunOrder>
    {
        public RunOrderConfiguration()
            : this("dbo")
        {
        }

        public RunOrderConfiguration(string schema)
        {
            Property(x => x.RunOrderId).HasPrecision(18,0);
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunOrderSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.PdsCol).IsOptional().IsFixedLength();

        }
    }

    // RunResource
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunResourceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunResource>
    {
        public RunResourceConfiguration()
            : this("dbo")
        {
        }

        public RunResourceConfiguration(string schema)
        {
            Property(x => x.RunResourceId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.CarrierId).IsOptional().HasPrecision(18,0);
            Property(x => x.TractorId).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId1).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId2).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerId3).IsOptional().HasPrecision(18,0);
            Property(x => x.Driver1).IsOptional().HasPrecision(18,0);
            Property(x => x.Driver2).IsOptional().HasPrecision(18,0);
            Property(x => x.SecondRun).IsOptional();

        }
    }

    // RunStop
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunStop>
    {
        public RunStopConfiguration()
            : this("dbo")
        {
        }

        public RunStopConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.LisSubRun).IsOptional();
            Property(x => x.RunSubId).IsOptional().HasPrecision(18,0);
            Property(x => x.CompanyLocationId).IsOptional().HasPrecision(18,0);
            Property(x => x.StandardMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.ActualMilesTo).IsOptional().HasPrecision(18,0);
            Property(x => x.Notes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoFax).IsOptional();
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.StopNum).IsOptional();
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.DelayStopTime).IsOptional().HasPrecision(18,0);
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PoEmailSentTime).IsOptional();

        }
    }

    // RunStopDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStopDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunStopDetail>
    {
        public RunStopDetailConfiguration()
            : this("dbo")
        {
        }

        public RunStopDetailConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.StopNumberId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.UnloadLoadFirstscan).IsOptional();
            Property(x => x.UnloadStartDate).IsOptional();
            Property(x => x.Photo).IsOptional();
            Property(x => x.GpsLatitude).HasPrecision(18,10);
            Property(x => x.GpsLongitude).HasPrecision(18,10);
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.ModifiedDatetime).IsOptional();
        }
    }

    // RunStopDetailPhoto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunStopDetailPhotoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunStopDetailPhoto>
    {
        public RunStopDetailPhotoConfiguration()
            : this("dbo")
        {
        }

        public RunStopDetailPhotoConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.Photo).IsOptional();
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.PhotoLength).IsOptional();
        }
    }

    // RunSub
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RunSubConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RunSub>
    {
        public RunSubConfiguration()
            : this("dbo")
        {
        }

        public RunSubConfiguration(string schema)
        {
            Property(x => x.RunSubId).HasPrecision(18,0);
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
        }
    }

    // ScannedPalletConfirm
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ScannedPalletConfirmConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScannedPalletConfirm>
    {
        public ScannedPalletConfirmConfiguration()
            : this("dbo")
        {
        }

        public ScannedPalletConfirmConfiguration(string schema)
        {
            Property(x => x.StopNumberId).HasPrecision(18,0);
            Property(x => x.TrailerId).IsOptional().HasPrecision(18,0);
            Property(x => x.TractorId).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalPieces).HasPrecision(18,2);
            Property(x => x.TrailerBarcode).IsUnicode(false);
            Property(x => x.TrailerNumber).IsUnicode(false);

        }
    }

    // ScannedPalletLoad
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ScannedPalletLoadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScannedPalletLoad>
    {
        public ScannedPalletLoadConfiguration()
            : this("dbo")
        {
        }

        public ScannedPalletLoadConfiguration(string schema)
        {
            Property(x => x.StopNumberId).HasPrecision(18,0);
            Property(x => x.WmsCode).IsUnicode(false);
            Property(x => x.Store).IsUnicode(false);
            Property(x => x.CompanyLocationId).IsOptional();
            Property(x => x.PalletCount).HasPrecision(6,2);
            Property(x => x.BarcodeScan).IsUnicode(false);

        }
    }

    // Server
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Server>
    {
        public ServerConfiguration()
            : this("dbo")
        {
        }

        public ServerConfiguration(string schema)
        {
            Property(x => x.Server_).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DatabaseName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.UserId).IsFixedLength().IsUnicode(false);
            Property(x => x.Password).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Timer).IsOptional().HasPrecision(18,0);
        }
    }

    // Service_Level
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceLevelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceLevel>
    {
        public ServiceLevelConfiguration()
            : this("dbo")
        {
        }

        public ServiceLevelConfiguration(string schema)
        {
            Property(x => x.ServiceLevelId).HasPrecision(18,0);
        }
    }

    // Status_Codes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusCode>
    {
        public StatusCodeConfiguration()
            : this("dbo")
        {
        }

        public StatusCodeConfiguration(string schema)
        {
            Property(x => x.StatusCodeId).HasPrecision(18,0);
            Property(x => x.OrderStatus).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderDescription).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // stkBarcode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkBarcodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkBarcode>
    {
        public StkBarcodeConfiguration()
            : this("dbo")
        {
        }

        public StkBarcodeConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.UpdateDate).IsOptional();
            Property(x => x.CreateBy).IsOptional();
            Property(x => x.OldItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsSubstitute).IsOptional();
        }
    }

    // stkBarcode_Archive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkBarcodeArchiveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkBarcodeArchive>
    {
        public StkBarcodeArchiveConfiguration()
            : this("dbo")
        {
        }

        public StkBarcodeArchiveConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.UpdateDate).IsOptional();
            Property(x => x.CreateBy).IsOptional();
            Property(x => x.OldItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.IsSubstitute).IsOptional();
        }
    }

    // stkCodeDate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkCodeDateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkCodeDate>
    {
        public StkCodeDateConfiguration()
            : this("dbo")
        {
        }

        public StkCodeDateConfiguration(string schema)
        {
            Property(x => x.StockId).IsOptional();
            Property(x => x.CodeDate).IsOptional();
            Property(x => x.Active).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DateNo).IsOptional();
        }
    }

    // stkCust
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkCustConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkCust>
    {
        public StkCustConfiguration()
            : this("dbo")
        {
        }

        public StkCustConfiguration(string schema)
        {
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // stkFlag
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkFlagConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkFlag>
    {
        public StkFlagConfiguration()
            : this("dbo")
        {
        }

        public StkFlagConfiguration(string schema)
        {
            Property(x => x.Ready).IsOptional();
            Property(x => x.Processed).IsOptional();
            Property(x => x.NumRecords).IsOptional();
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.ReadyDate).IsOptional();
            Property(x => x.ProcessedDate).IsOptional();
            Property(x => x.UserId).IsOptional();
        }
    }

    // stkInfo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkInfo>
    {
        public StkInfoConfiguration()
            : this("dbo")
        {
        }

        public StkInfoConfiguration(string schema)
        {
            Property(x => x.BarcodeId).IsOptional();
            Property(x => x.Barcode).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LocationId).IsOptional();
            Property(x => x.Tie).IsOptional();
            Property(x => x.High).IsOptional();
            Property(x => x.ItemLenId).IsOptional();
            Property(x => x.ItemPackId).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.CreateBy).IsOptional();
            Property(x => x.FlagId).IsOptional();
            Property(x => x.Suffix).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // stkInfoFlag
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkInfoFlagConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkInfoFlag>
    {
        public StkInfoFlagConfiguration()
            : this("dbo")
        {
        }

        public StkInfoFlagConfiguration(string schema)
        {
            Property(x => x.Ready).IsOptional();
            Property(x => x.Processed).IsOptional();
            Property(x => x.NumRecords).IsOptional();
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.ReadyDate).IsOptional();
            Property(x => x.ProcessedDate).IsOptional();
            Property(x => x.UserId).IsOptional();
        }
    }

    // stkLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkLocation>
    {
        public StkLocationConfiguration()
            : this("dbo")
        {
        }

        public StkLocationConfiguration(string schema)
        {
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SortOrder).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickSortOrder).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Rack).IsOptional();
        }
    }

    // stkMobileDevice
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkMobileDeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkMobileDevice>
    {
        public StkMobileDeviceConfiguration()
            : this("dbo")
        {
        }

        public StkMobileDeviceConfiguration(string schema)
        {
            Property(x => x.MacAddress).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.SerialNumber).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // stkSqlCEIdentityRange
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkSqlCeIdentityRangeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkSqlCeIdentityRange>
    {
        public StkSqlCeIdentityRangeConfiguration()
            : this("dbo")
        {
        }

        public StkSqlCeIdentityRangeConfiguration(string schema)
        {
            Property(x => x.SqlCeIdentityRangeTableId).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.IdentityMin).IsOptional();
            Property(x => x.IdentityMax).IsOptional();
            Property(x => x.Threshold).IsOptional();
            Property(x => x.LastIdentity).IsOptional();
            Property(x => x.LastSyncDate).IsOptional();
            Property(x => x.IsCurrent).IsOptional();
            Property(x => x.CreateDate).IsOptional();
        }
    }

    // stkSqlCEIdentityRangeTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkSqlCeIdentityRangeTableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkSqlCeIdentityRangeTable>
    {
        public StkSqlCeIdentityRangeTableConfiguration()
            : this("dbo")
        {
        }

        public StkSqlCeIdentityRangeTableConfiguration(string schema)
        {
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RangeSize).IsOptional();
            Property(x => x.Increment).IsOptional();
            Property(x => x.Threshold).IsOptional();
            Property(x => x.NextIdentity).IsOptional();
        }
    }

    // stkStock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkStockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkStock>
    {
        public StkStockConfiguration()
            : this("dbo")
        {
        }

        public StkStockConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StackSize).IsOptional();
            Property(x => x.Stacks).IsOptional();
            Property(x => x.Cases).IsOptional();
            Property(x => x.Location).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ScanTime).IsOptional();
            Property(x => x.FlagId).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // stkUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkUser>
    {
        public StkUserConfiguration()
            : this("dbo")
        {
        }

        public StkUserConfiguration(string schema)
        {
            Property(x => x.Initials).IsFixedLength().IsUnicode(false);
            Property(x => x.FirstName).IsOptional().IsUnicode(false);
            Property(x => x.LastName).IsOptional().IsUnicode(false);
            Property(x => x.ShowExceptions).IsOptional();
            Property(x => x.IsActive).IsOptional();
        }
    }

    // stkvwLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwLocation>
    {
        public StkvwLocationConfiguration()
            : this("dbo")
        {
        }

        public StkvwLocationConfiguration(string schema)
        {
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsUnicode(false);
            Property(x => x.Location).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SortOrder).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustItem).IsOptional().IsUnicode(false);
            Property(x => x.LocationId).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.FlagId).IsOptional();
        }
    }

    // stkvwStockChecks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockCheckConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwStockCheck>
    {
        public StkvwStockCheckConfiguration()
            : this("dbo")
        {
        }

        public StkvwStockCheckConfiguration(string schema)
        {
            Property(x => x.ReadyDate).IsOptional();
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Count).IsOptional();
            Property(x => x.Initials).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Duration).IsOptional();
            Property(x => x.MobileDeviceId).IsOptional();
            Property(x => x.MobileDeviceName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CountPerMin).IsOptional().HasPrecision(6,2);
        }
    }

    // stkvwStockDate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockDateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwStockDate>
    {
        public StkvwStockDateConfiguration()
            : this("dbo")
        {
        }

        public StkvwStockDateConfiguration(string schema)
        {
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StackSize).IsOptional();
            Property(x => x.Stacks).IsOptional();
            Property(x => x.Cases).IsOptional();
            Property(x => x.TotalCases).IsOptional();
            Property(x => x.Location).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ScanTime).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.CodeDate).IsOptional();
            Property(x => x.Active).IsOptional();
            Property(x => x.DateStatus).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DateNo).IsOptional();
            Property(x => x.JulianDay).IsOptional();
        }
    }

    // stkvwStock_ld
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwStockLd>
    {
        public StkvwStockLdConfiguration()
            : this("dbo")
        {
        }

        public StkvwStockLdConfiguration(string schema)
        {
            Property(x => x.StockDt).IsOptional();
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Scancode).IsFixedLength().IsUnicode(false);
            Property(x => x.Stack).IsOptional();
            Property(x => x.StackNo).IsOptional();
            Property(x => x.Cases).IsOptional();
            Property(x => x.Date1).IsUnicode(false);
            Property(x => x.Date1Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date2).IsUnicode(false);
            Property(x => x.Date2Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date3).IsUnicode(false);
            Property(x => x.Date3Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date4).IsUnicode(false);
            Property(x => x.Date4Act).IsFixedLength().IsUnicode(false);
            Property(x => x.StockId).IsOptional();
            Property(x => x.FlagId).IsOptional();
        }
    }

    // stkvwStock_ldAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLdAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwStockLdAll>
    {
        public StkvwStockLdAllConfiguration()
            : this("dbo")
        {
        }

        public StkvwStockLdAllConfiguration(string schema)
        {
            Property(x => x.StockDt).IsOptional();
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Scancode).IsFixedLength().IsUnicode(false);
            Property(x => x.Stack).IsOptional();
            Property(x => x.StackNo).IsOptional();
            Property(x => x.Cases).IsOptional();
            Property(x => x.Date1).IsUnicode(false);
            Property(x => x.Date1Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date2).IsUnicode(false);
            Property(x => x.Date2Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date3).IsUnicode(false);
            Property(x => x.Date3Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date4).IsUnicode(false);
            Property(x => x.Date4Act).IsFixedLength().IsUnicode(false);
            Property(x => x.StockId).IsOptional();
            Property(x => x.FlagId).IsOptional();
        }
    }

    // stkvwStock_ld_orig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwStockLdOrigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwStockLdOrig>
    {
        public StkvwStockLdOrigConfiguration()
            : this("dbo")
        {
        }

        public StkvwStockLdOrigConfiguration(string schema)
        {
            Property(x => x.StockDt).IsOptional();
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Scancode).IsFixedLength().IsUnicode(false);
            Property(x => x.Stack).IsOptional();
            Property(x => x.StackNo).IsOptional();
            Property(x => x.Cases).IsOptional();
            Property(x => x.Date1).IsUnicode(false);
            Property(x => x.Date1Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date2).IsUnicode(false);
            Property(x => x.Date2Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date3).IsUnicode(false);
            Property(x => x.Date3Act).IsFixedLength().IsUnicode(false);
            Property(x => x.Date4).IsUnicode(false);
            Property(x => x.Date4Act).IsFixedLength().IsUnicode(false);
            Property(x => x.StockId).IsOptional();
            Property(x => x.FlagId).IsOptional();
        }
    }

    // stkvwTiHi
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StkvwTiHiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StkvwTiHi>
    {
        public StkvwTiHiConfiguration()
            : this("dbo")
        {
        }

        public StkvwTiHiConfiguration(string schema)
        {
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemCode).IsOptional().IsUnicode(false);
            Property(x => x.Barcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CustItem).IsOptional().IsUnicode(false);
            Property(x => x.LocationId).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.FlagId).IsOptional();
            Property(x => x.Location).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // StopAssignment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StopAssignmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StopAssignment>
    {
        public StopAssignmentConfiguration()
            : this("dbo")
        {
        }

        public StopAssignmentConfiguration(string schema)
        {
            Property(x => x.StopNumberId).HasPrecision(18,0);
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.PercentPick).HasPrecision(5,4);
            Property(x => x.PercentLoad).HasPrecision(5,4);
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.PercentAssigned).IsOptional().HasPrecision(5,4);
            Property(x => x.Created).IsOptional();
            Property(x => x.Modified).IsOptional();
        }
    }

    // StopPallet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StopPalletConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StopPallet>
    {
        public StopPalletConfiguration()
            : this("dbo")
        {
        }

        public StopPalletConfiguration(string schema)
        {
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
        }
    }

    // SurName
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SurNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SurName>
    {
        public SurNameConfiguration()
            : this("dbo")
        {
        }

        public SurNameConfiguration(string schema)
        {
            Property(x => x.SurNameId).HasPrecision(18,0);
            Property(x => x.SurName_).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // Tractor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Tractor>
    {
        public TractorConfiguration()
            : this("dbo")
        {
        }

        public TractorConfiguration(string schema)
        {
            Property(x => x.TractorId).HasPrecision(18,0);
            Property(x => x.TractorName).IsFixedLength().IsUnicode(false);
            Property(x => x.TractorWeight).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorAxles).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LisStraightTruck).IsOptional();
        }
    }

    // Tractor_Calendar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorCalendarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TractorCalendar>
    {
        public TractorCalendarConfiguration()
            : this("dbo")
        {
        }

        public TractorCalendarConfiguration(string schema)
        {
            Property(x => x.TractorCalendarId).HasPrecision(18,0);
            Property(x => x.TractorId).HasPrecision(18,0);
            Property(x => x.DateFrom).IsOptional();
            Property(x => x.DateTo).IsOptional();
            Property(x => x.TractorInactiveReasonListId).IsOptional().HasPrecision(18,0);
        }
    }

    // Tractor_InActive_Reason_List
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorInActiveReasonListConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TractorInActiveReasonList>
    {
        public TractorInActiveReasonListConfiguration()
            : this("dbo")
        {
        }

        public TractorInActiveReasonListConfiguration(string schema)
        {
            Property(x => x.TractorInactiveReasonListId).HasPrecision(18,0);
            Property(x => x.InactiveReason).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // Tractor_Productivity
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TractorProductivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TractorProductivity>
    {
        public TractorProductivityConfiguration()
            : this("dbo")
        {
        }

        public TractorProductivityConfiguration(string schema)
        {
            Property(x => x.TractorProductivityId).HasPrecision(18,0);
            Property(x => x.TractorId).HasPrecision(18,0);
            Property(x => x.TractorDate).IsOptional();
            Property(x => x.Status).IsOptional().HasPrecision(18,0);
            Property(x => x.TractorInactiveReasonId).IsOptional().HasPrecision(18,0);

        }
    }

    // Trailer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Trailer>
    {
        public TrailerConfiguration()
            : this("dbo")
        {
        }

        public TrailerConfiguration(string schema)
        {
            Property(x => x.TrailerId).HasPrecision(18,0);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerWeight).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerMaxOrderWeight).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerAxles).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LisDryVan).IsOptional();
            Property(x => x.LisTempControlled).IsOptional();
        }
    }

    // Trailer_Calendar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerCalendarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TrailerCalendar>
    {
        public TrailerCalendarConfiguration()
            : this("dbo")
        {
        }

        public TrailerCalendarConfiguration(string schema)
        {
            Property(x => x.TrailerCalendarId).HasPrecision(18,0);
            Property(x => x.TrailerId).HasPrecision(18,0);
            Property(x => x.DateFrom).IsOptional();
            Property(x => x.DateTo).IsOptional();
            Property(x => x.TrailerInactiveReasonListId).IsOptional().HasPrecision(18,0);
        }
    }

    // Trailer_Inactive_Reason_List
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerInactiveReasonListConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TrailerInactiveReasonList>
    {
        public TrailerInactiveReasonListConfiguration()
            : this("dbo")
        {
        }

        public TrailerInactiveReasonListConfiguration(string schema)
        {
            Property(x => x.TrailerInactiveReasonListId).HasPrecision(18,0);
            Property(x => x.InactiveReason).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // Trailer_Productivity
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TrailerProductivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TrailerProductivity>
    {
        public TrailerProductivityConfiguration()
            : this("dbo")
        {
        }

        public TrailerProductivityConfiguration(string schema)
        {
            Property(x => x.TrailerProductivityId).HasPrecision(18,0);
            Property(x => x.TrailerId).HasPrecision(18,0);
            Property(x => x.TrailerDate).IsOptional();
            Property(x => x.Status).IsOptional().HasPrecision(18,0);
            Property(x => x.TrailerInactiveReasonId).IsOptional().HasPrecision(18,0);

        }
    }

    // vwAllOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAllOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAllOrder>
    {
        public VwAllOrderConfiguration()
            : this("dbo")
        {
        }

        public VwAllOrderConfiguration(string schema)
        {
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Source).IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FlagId).IsOptional().HasPrecision(10,0);
        }
    }

    // vwCompanyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwCompanyLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwCompanyLocation>
    {
        public VwCompanyLocationConfiguration()
            : this("dbo")
        {
        }

        public VwCompanyLocationConfiguration(string schema)
        {
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.ParentCompany).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Expr1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Type).IsFixedLength().IsUnicode(false);
            Property(x => x.Type1).IsFixedLength().IsUnicode(false);
            Property(x => x.AlternateName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Appointment).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoFax).IsOptional();
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.PmCustNo).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // vwConsigneeFax
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwConsigneeFaxConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwConsigneeFax>
    {
        public VwConsigneeFaxConfiguration()
            : this("dbo")
        {
        }

        public VwConsigneeFaxConfiguration(string schema)
        {
            Property(x => x.CompanyLocationId).HasPrecision(18,0);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.FaxNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperId).HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.StopPlannedArrivalDate).IsOptional();
            Property(x => x.PoFax).IsOptional();
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ContactBlnk).IsUnicode(false);
            Property(x => x.Shipper).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
        }
    }

    // vwContacts
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwContactConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwContact>
    {
        public VwContactConfiguration()
            : this("dbo")
        {
        }

        public VwContactConfiguration(string schema)
        {
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.CompanyId).HasPrecision(18,0);
            Property(x => x.ContactType).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ContactBlnk).IsOptional().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Email).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
        }
    }

    // vwContactsLegacy
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwContactsLegacyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwContactsLegacy>
    {
        public VwContactsLegacyConfiguration()
            : this("dbo")
        {
        }

        public VwContactsLegacyConfiguration(string schema)
        {
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.CompanyId).HasPrecision(18,0);
            Property(x => x.Owner).IsOptional().IsUnicode(false);
            Property(x => x.OPhone).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Buyer).IsOptional().IsUnicode(false);
            Property(x => x.BPhone).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Receiver).IsOptional().IsUnicode(false);
            Property(x => x.RPhone).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.WhseMgr).IsOptional().IsUnicode(false);
            Property(x => x.WPhone).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // vwDispatch
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatch>
    {
        public VwDispatchConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsOptional().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Trailer2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Driver2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNotes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.RunNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDayPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.SameDayWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.LeavePieces).IsOptional().HasPrecision(19,0);
            Property(x => x.LeaveWeight).IsOptional().HasPrecision(19,2);
            Property(x => x.ConsigneeNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.ShipperType).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DayStatus).IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
        }
    }

    // vwDispatchApp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchApp>
    {
        public VwDispatchAppConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedStartTime).IsOptional().IsUnicode(false);
            Property(x => x.PlannedStartTimeDt).IsOptional();
            Property(x => x.PlannedDriver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedTractor).IsOptional().IsUnicode(false);
            Property(x => x.PlannedTrailer).IsOptional().IsUnicode(false);
            Property(x => x.RunDriver).IsOptional().IsUnicode(false);
            Property(x => x.StartTime).IsOptional().IsUnicode(false);
            Property(x => x.StartTimeDt).IsOptional();
            Property(x => x.Tractor).IsOptional();
            Property(x => x.TruckNumber).IsOptional();
            Property(x => x.Trailer).IsOptional();
            Property(x => x.TrailerEnd).IsOptional();
            Property(x => x.EndTime).IsOptional().IsUnicode(false);
            Property(x => x.EndTimeDt).IsOptional();
            Property(x => x.Comments).IsOptional();
            Property(x => x.ConsCode).IsOptional().IsUnicode(false);
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ApptStart).IsOptional().IsUnicode(false);
            Property(x => x.ApptEnd).IsOptional().IsUnicode(false);
            Property(x => x.ApptStartDt).IsOptional();
            Property(x => x.ApptEndDt).IsOptional();
            Property(x => x.Uad).IsOptional();
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.Arrive).IsOptional().IsUnicode(false);
            Property(x => x.Depart).IsOptional().IsUnicode(false);
            Property(x => x.StartScan).IsOptional().IsUnicode(false);
            Property(x => x.ArriveDt).IsOptional();
            Property(x => x.DepartDt).IsOptional();
            Property(x => x.StartScanDt).IsOptional();
            Property(x => x.Type).IsOptional();
            Property(x => x.Late).IsOptional();
            Property(x => x.CasesOnBills).IsOptional();
            Property(x => x.DeliveredCases).IsOptional();
            Property(x => x.OverShort).IsOptional();
            Property(x => x.Damage).IsOptional();
            Property(x => x.CalledInOsd).IsOptional();
            Property(x => x.OsdComments).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.Delayed).IsOptional();
            Property(x => x.GeneralComments).IsOptional();
            Property(x => x.GpsLatitude).IsOptional().HasPrecision(18,10);
            Property(x => x.GpsLongitude).IsOptional().HasPrecision(18,10);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Orders).IsOptional();
            Property(x => x.Peices).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
            Property(x => x.Street1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Zip).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NoEarly).IsOptional();
        }
    }

    // vwDispatchAppAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAppAll>
    {
        public VwDispatchAppAllConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppAllConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsUnicode(false);
            Property(x => x.PlannedStartTime).IsOptional().IsUnicode(false);
            Property(x => x.PlannedStartTimeDt).IsOptional();
            Property(x => x.PlannedDriver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedTractor).IsOptional().IsUnicode(false);
            Property(x => x.PlannedTrailer).IsOptional().IsUnicode(false);
            Property(x => x.RunDriver).IsOptional().IsUnicode(false);
            Property(x => x.StartTime).IsOptional().IsUnicode(false);
            Property(x => x.StartTimeDt).IsOptional();
            Property(x => x.Tractor).IsOptional();
            Property(x => x.TruckNumber).IsOptional();
            Property(x => x.Trailer).IsOptional();
            Property(x => x.TrailerEnd).IsOptional();
            Property(x => x.EndTime).IsOptional().IsUnicode(false);
            Property(x => x.EndTimeDt).IsOptional();
            Property(x => x.Comments).IsOptional();
            Property(x => x.ConsCode).IsOptional().IsUnicode(false);
            Property(x => x.Name).IsOptional();
            Property(x => x.ApptStart).IsOptional().IsUnicode(false);
            Property(x => x.ApptEnd).IsOptional().IsUnicode(false);
            Property(x => x.ApptStartDt).IsOptional();
            Property(x => x.ApptEndDt).IsOptional();
            Property(x => x.Uad).IsOptional();
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.Arrive).IsOptional().IsUnicode(false);
            Property(x => x.Depart).IsOptional().IsUnicode(false);
            Property(x => x.StartScan).IsOptional().IsUnicode(false);
            Property(x => x.ArriveDt).IsOptional();
            Property(x => x.DepartDt).IsOptional();
            Property(x => x.StartScanDt).IsOptional();
            Property(x => x.Type).IsOptional();
            Property(x => x.Late).IsOptional();
            Property(x => x.CasesOnBills).IsOptional();
            Property(x => x.DeliveredCases).IsOptional();
            Property(x => x.OverShort).IsOptional();
            Property(x => x.Damage).IsOptional();
            Property(x => x.CalledInOsd).IsOptional();
            Property(x => x.OsdComments).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.Delayed).IsOptional();
            Property(x => x.GeneralComments).IsOptional();
            Property(x => x.GpsLatitude).IsOptional().HasPrecision(18,10);
            Property(x => x.GpsLongitude).IsOptional().HasPrecision(18,10);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Orders).IsOptional();
            Property(x => x.Peices).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
            Property(x => x.Street1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional();
            Property(x => x.State).IsOptional();
            Property(x => x.Zip).IsOptional();
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NoEarly).IsOptional();
            Property(x => x.PrevStopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.PrevZip).IsOptional().IsUnicode(false);
            Property(x => x.EstMiles).IsOptional().HasPrecision(9,2);
            Property(x => x.EstDriveTime).IsOptional();
            Property(x => x.PrevDeptDt).IsOptional();
            Property(x => x.ActDriveTime).IsOptional();
        }
    }

    // vwDispatchAppArchive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppArchiveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAppArchive>
    {
        public VwDispatchAppArchiveConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppArchiveConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedStartTime).IsOptional();
            Property(x => x.RunDriver).IsOptional().IsUnicode(false);
            Property(x => x.StartTime).IsOptional();
            Property(x => x.Tractor).IsOptional();
            Property(x => x.TruckNumber).IsOptional();
            Property(x => x.Trailer).IsOptional();
            Property(x => x.TrailerEnd).IsOptional();
            Property(x => x.EndTime).IsOptional();
            Property(x => x.Comments).IsOptional();
            Property(x => x.ConsCode).IsOptional().IsUnicode(false);
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ApptStart).IsOptional();
            Property(x => x.ApptEnd).IsOptional();
            Property(x => x.Uad).IsOptional();
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.Arrive).IsOptional();
            Property(x => x.StartScan).IsOptional();
            Property(x => x.Depart).IsOptional();
            Property(x => x.Type).IsOptional();
            Property(x => x.Late).IsOptional();
            Property(x => x.CasesOnBills).IsOptional();
            Property(x => x.DeliveredCases).IsOptional();
            Property(x => x.OverShort).IsOptional();
            Property(x => x.Damage).IsOptional();
            Property(x => x.CalledInOsd).IsOptional();
            Property(x => x.OsdComments).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.Delayed).IsOptional();
            Property(x => x.GeneralComments).IsOptional();
            Property(x => x.GpsLatitude).IsOptional().HasPrecision(18,10);
            Property(x => x.GpsLongitude).IsOptional().HasPrecision(18,10);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Orders).IsOptional();
            Property(x => x.Peices).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
            Property(x => x.Street1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Street2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Zip).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NoEarly).IsOptional();
            Property(x => x.StopTime).IsOptional();
            Property(x => x.DeliveryTime).IsOptional();
        }
    }

    // vwDispatchAppRun
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppRunConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAppRun>
    {
        public VwDispatchAppRunConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppRunConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedStartTime).IsOptional();
            Property(x => x.PlannedDriver).IsOptional().IsUnicode(false);
            Property(x => x.PlannedTractor).IsOptional().IsUnicode(false);
            Property(x => x.PlannedTrailer).IsOptional().IsUnicode(false);
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.StartTime).IsOptional();
            Property(x => x.DepartTime).IsOptional();
            Property(x => x.Tractor).IsOptional();
            Property(x => x.TractorStart).IsOptional();
            Property(x => x.TractorEnd).IsOptional();
            Property(x => x.Trailer).IsOptional();
            Property(x => x.TrailerEnd).IsOptional();
            Property(x => x.EndTime).IsOptional();
            Property(x => x.Comments).IsOptional();
            Property(x => x.Created).IsOptional();
            Property(x => x.LastMod).IsOptional();
            Property(x => x.PalletJack).IsOptional();
            Property(x => x.C2Wheeler).IsOptional();
            Property(x => x.UBoat).IsOptional();
            Property(x => x.Scanner).IsOptional();
            Property(x => x.Pigtail).IsOptional();
        }
    }

    // vwDispatchAppRunStop
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppRunStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAppRunStop>
    {
        public VwDispatchAppRunStopConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppRunStopConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.ConsCode).IsOptional().IsUnicode(false);
            Property(x => x.Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Zip).IsOptional().IsUnicode(false);
            Property(x => x.ApptStart).IsOptional();
            Property(x => x.ApptEnd).IsOptional();
            Property(x => x.Arrive).IsOptional();
            Property(x => x.Depart).IsOptional();
            Property(x => x.StartScan).IsOptional();
            Property(x => x.Type).IsOptional();
            Property(x => x.Late).IsOptional();
            Property(x => x.CasesOnBills).IsOptional();
            Property(x => x.DeliveredCases).IsOptional();
            Property(x => x.OverShort).IsOptional();
            Property(x => x.Damage).IsOptional();
            Property(x => x.CalledInOsd).IsOptional();
            Property(x => x.OsdComments).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.Delayed).IsOptional();
            Property(x => x.GeneralComments).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.GpsLatitude).IsOptional().HasPrecision(18,10);
            Property(x => x.GpsLongitude).IsOptional().HasPrecision(18,10);
            Property(x => x.Created).IsOptional();
            Property(x => x.LastMod).IsOptional();
            Property(x => x.Orders).IsOptional();
            Property(x => x.Peices).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
            Property(x => x.ProformaDate).IsOptional();
        }
    }

    // vwDispatchAppUnplanned
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAppUnplannedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAppUnplanned>
    {
        public VwDispatchAppUnplannedConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAppUnplannedConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.StopDateTime).IsOptional();
            Property(x => x.DepartDateTime).IsOptional();
            Property(x => x.Duration).IsOptional().HasPrecision(18,7);
            Property(x => x.Type).IsOptional();
            Property(x => x.Longitude).HasPrecision(18,10);
            Property(x => x.Latitude).HasPrecision(18,10);
            Property(x => x.Tractor).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedStartTime).IsOptional();
            Property(x => x.PlannedDriver).IsOptional().IsUnicode(false);
            Property(x => x.PlannedTractor).IsOptional().IsUnicode(false);
            Property(x => x.RunDriver).IsOptional().IsUnicode(false);
            Property(x => x.RunStartTime).IsOptional();
            Property(x => x.RunEndTime).IsOptional();
        }
    }

    // vwDispatchArchive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchArchiveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchArchive>
    {
        public VwDispatchArchiveConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchArchiveConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.Driver1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsOptional().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Trailer2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Driver2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNotes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.RunNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDayPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.SameDayWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.LeavePieces).IsOptional().HasPrecision(19,0);
            Property(x => x.LeaveWeight).IsOptional().HasPrecision(19,2);
            Property(x => x.ConsigneeNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.ShipperType).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DayStatus).IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
        }
    }

    // vwDispatchAudit
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchAuditConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchAudit>
    {
        public VwDispatchAuditConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchAuditConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
        }
    }

    // vwDispatchDetailOpen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchDetailOpenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchDetailOpen>
    {
        public VwDispatchDetailOpenConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchDetailOpenConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsOptional().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Trailer2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Driver2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNotes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.RunNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDayPieces).IsOptional().HasPrecision(9,0);
            Property(x => x.SameDayWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.LeavePieces).IsOptional().HasPrecision(10,0);
            Property(x => x.LeaveWeight).IsOptional().HasPrecision(19,2);
            Property(x => x.ConsigneeNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.ShipperType).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DayStatus).IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.ItemSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PalletVolume).IsOptional().HasPrecision(18,9);
            Property(x => x.Location).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Pieces).IsOptional().HasPrecision(9,0);
            Property(x => x.SameDayPiecesDetail).IsOptional().HasPrecision(9,0);
        }
    }

    // vwDispatchOpen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchOpenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchOpen>
    {
        public VwDispatchOpenConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchOpenConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsOptional().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).IsOptional().HasPrecision(18,0);
            Property(x => x.RunSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Trailer2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Driver2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNotes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.RunNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDayPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.SameDayWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.LeavePieces).IsOptional().HasPrecision(19,0);
            Property(x => x.LeaveWeight).IsOptional().HasPrecision(19,2);
            Property(x => x.ConsigneeNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.ShipperType).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DayStatus).IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderId).IsOptional().HasPrecision(18,0);
        }
    }

    // vwDispatchOpen_old
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchOpenOldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchOpenOld>
    {
        public VwDispatchOpenOldConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchOpenOldConfiguration(string schema)
        {
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsOptional().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.RunDate).IsOptional();
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedDeliveryDate).IsOptional();
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Trailer2Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Name).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3Length).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Driver2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNotes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RequireAudit).IsOptional();
            Property(x => x.PrintNotes).IsOptional();
            Property(x => x.PrintDirections).IsOptional();
            Property(x => x.RunNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDayPieces).IsOptional().HasPrecision(18,0);
            Property(x => x.SameDayWeight).IsOptional().HasPrecision(18,2);
            Property(x => x.LeavePieces).IsOptional().HasPrecision(19,0);
            Property(x => x.LeaveWeight).IsOptional().HasPrecision(19,2);
            Property(x => x.ConsigneeNotes).IsOptional().IsUnicode(false);
            Property(x => x.SameDay).IsOptional();
            Property(x => x.Ltl).IsOptional();
            Property(x => x.ShipperType).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DayStatus).IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
        }
    }

    // vwDispatchSheet2
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchSheet2Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchSheet2>
    {
        public VwDispatchSheet2Configuration()
            : this("dbo")
        {
        }

        public VwDispatchSheet2Configuration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.LastName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(38,2);
            Property(x => x.CoDriver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.GrossPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.GrossWeight).IsOptional().HasPrecision(38,2);
            Property(x => x.TrailerLength).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // vwDispatchSheet_orig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDispatchSheetOrigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDispatchSheetOrig>
    {
        public VwDispatchSheetOrigConfiguration()
            : this("dbo")
        {
        }

        public VwDispatchSheetOrigConfiguration(string schema)
        {
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.LastName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TotalOrderPieces).IsOptional().HasPrecision(38,0);
            Property(x => x.TotalOrderWeight).IsOptional().HasPrecision(38,2);
            Property(x => x.CoDriver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Trailer3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.SecondRun).IsOptional();
        }
    }

    // vwDriversOff
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwDriversOffConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDriversOff>
    {
        public VwDriversOffConfiguration()
            : this("dbo")
        {
        }

        public VwDriversOffConfiguration(string schema)
        {
            Property(x => x.EmployeeDate).IsOptional();
            Property(x => x.LastName).IsFixedLength().IsUnicode(false);
            Property(x => x.FirstName).IsFixedLength().IsUnicode(false);
            Property(x => x.InActiveReason).IsFixedLength().IsUnicode(false);
        }
    }

    // vwInboundDamage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwInboundDamageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwInboundDamage>
    {
        public VwInboundDamageConfiguration()
            : this("dbo")
        {
        }

        public VwInboundDamageConfiguration(string schema)
        {
            Property(x => x.UrNumber).IsUnicode(false);
            Property(x => x.ItemCode).IsFixedLength().IsUnicode(false);
            Property(x => x.NumPieces).IsOptional();
            Property(x => x.ConditionDescription).IsUnicode(false);
            Property(x => x.CustCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DistanceInTrailer).IsOptional();
            Property(x => x.VerticalLocation).IsUnicode(false);
            Property(x => x.HorizontalLocation).IsUnicode(false);
        }
    }

    // vwItemsPalletsConsignee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwItemsPalletsConsigneeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwItemsPalletsConsignee>
    {
        public VwItemsPalletsConsigneeConfiguration()
            : this("dbo")
        {
        }

        public VwItemsPalletsConsigneeConfiguration(string schema)
        {
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.FinishedAt).IsOptional();
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ItemDesc).IsOptional().IsUnicode(false);
            Property(x => x.ItemPieces).IsOptional();
            Property(x => x.NumPallets).IsOptional();
            Property(x => x.Pieces).IsOptional();
        }
    }

    // vwOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrder>
    {
        public VwOrderConfiguration()
            : this("dbo")
        {
        }

        public VwOrderConfiguration(string schema)
        {
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.OrderId).HasPrecision(18,0);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
        }
    }

    // vwOrderLogins
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderLoginConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrderLogin>
    {
        public VwOrderLoginConfiguration()
            : this("dbo")
        {
        }

        public VwOrderLoginConfiguration(string schema)
        {
            Property(x => x.UserId).IsOptional();
            Property(x => x.Description).IsUnicode(false);
        }
    }

    // vwOrderPalletCounts
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderPalletCountConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrderPalletCount>
    {
        public VwOrderPalletCountConfiguration()
            : this("dbo")
        {
        }

        public VwOrderPalletCountConfiguration(string schema)
        {
            Property(x => x.UserId).IsOptional();
            Property(x => x.UserCaseCount).IsOptional();
            Property(x => x.ScannerCaseCount).IsOptional();
            Property(x => x.Description).IsUnicode(false);
        }
    }

    // vwOrderPickListOpen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrderPickListOpenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrderPickListOpen>
    {
        public VwOrderPickListOpenConfiguration()
            : this("dbo")
        {
        }

        public VwOrderPickListOpenConfiguration(string schema)
        {
            Property(x => x.OrderId).IsOptional();
            Property(x => x.UserId).IsOptional();
            Property(x => x.Description).IsUnicode(false);
        }
    }

    // vwOrphanedOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwOrphanedOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrphanedOrder>
    {
        public VwOrphanedOrderConfiguration()
            : this("dbo")
        {
        }

        public VwOrphanedOrderConfiguration(string schema)
        {
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.OrderOrientation).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
        }
    }

    // vwPalletLoaderDispatchOpen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwPalletLoaderDispatchOpenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwPalletLoaderDispatchOpen>
    {
        public VwPalletLoaderDispatchOpenConfiguration()
            : this("dbo")
        {
        }

        public VwPalletLoaderDispatchOpenConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.RunNo).IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.TractorName).IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerId).HasPrecision(18,0);
            Property(x => x.Consignee).IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode).IsFixedLength().IsUnicode(false);
            Property(x => x.PostalCode5).IsUnicode(false);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.ShipperNumber).IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.OrderNotes).IsUnicode(false);
            Property(x => x.OrderNumber).HasPrecision(18,0);
            Property(x => x.RunSequence).HasPrecision(18,0);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.StopNotes).IsFixedLength().IsUnicode(false);
            Property(x => x.RunNotes).IsUnicode(false);
            Property(x => x.ConsigneeNotes).IsUnicode(false);
            Property(x => x.StopNumberId).HasPrecision(18,0);
            Property(x => x.RunNumberId).HasPrecision(18,0);
            Property(x => x.TractorId).HasPrecision(18,0);
            Property(x => x.TractorName1).IsFixedLength().IsUnicode(false);
        }
    }

    // vwPalletsByItemConsignee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwPalletsByItemConsigneeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwPalletsByItemConsignee>
    {
        public VwPalletsByItemConsigneeConfiguration()
            : this("dbo")
        {
        }

        public VwPalletsByItemConsigneeConfiguration(string schema)
        {
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunId).HasPrecision(18,0);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.Custcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Itemcode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FinishedAt).IsOptional();
            Property(x => x.Pieces).IsOptional();
        }
    }

    // vwSmartDriveSchedule
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSmartDriveScheduleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwSmartDriveSchedule>
    {
        public VwSmartDriveScheduleConfiguration()
            : this("dbo")
        {
        }

        public VwSmartDriveScheduleConfiguration(string schema)
        {
            Property(x => x.CompanyId).IsUnicode(false);
            Property(x => x.EmployeeId).IsOptional().IsUnicode(false);
            Property(x => x.Vehicle).IsOptional().IsUnicode(false);
            Property(x => x.Start).IsOptional().IsUnicode(false);
            Property(x => x.End).IsOptional().IsUnicode(false);
            Property(x => x.FirstName).IsOptional().IsUnicode(false);
            Property(x => x.LastName).IsOptional().IsUnicode(false);
            Property(x => x.MiddleName).IsOptional().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
        }
    }

    // vwSmartDriveScheduleArchive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSmartDriveScheduleArchiveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwSmartDriveScheduleArchive>
    {
        public VwSmartDriveScheduleArchiveConfiguration()
            : this("dbo")
        {
        }

        public VwSmartDriveScheduleArchiveConfiguration(string schema)
        {
            Property(x => x.CompanyId).IsUnicode(false);
            Property(x => x.EmployeeId).IsOptional().IsUnicode(false);
            Property(x => x.Vehicle).IsOptional().IsUnicode(false);
            Property(x => x.Start).IsOptional().IsUnicode(false);
            Property(x => x.End).IsOptional().IsUnicode(false);
            Property(x => x.FirstName).IsOptional().IsUnicode(false);
            Property(x => x.LastName).IsOptional().IsUnicode(false);
            Property(x => x.MiddleName).IsOptional().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
        }
    }

    // vwStartTimes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStartTimeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwStartTime>
    {
        public VwStartTimeConfiguration()
            : this("dbo")
        {
        }

        public VwStartTimeConfiguration(string schema)
        {
            Property(x => x.Driver).IsOptional().IsUnicode(false);
            Property(x => x.CoDriver).IsOptional().IsUnicode(false);
            Property(x => x.StartTime).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunNo).IsOptional().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsUnicode(false);
            Property(x => x.PickUp).IsOptional().IsUnicode(false);
            Property(x => x.Tractor).IsOptional().IsUnicode(false);
            Property(x => x.Trailer).IsOptional().IsUnicode(false);
            Property(x => x.RunSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.Proformadate).IsOptional();
        }
    }

    // vwStops
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwStop>
    {
        public VwStopConfiguration()
            : this("dbo")
        {
        }

        public VwStopConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.Name).IsFixedLength().IsUnicode(false);
            Property(x => x.StopSequence).HasPrecision(18,0);
            Property(x => x.NoException).IsOptional();
            Property(x => x.PlannedDepartDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsFixedLength().IsUnicode(false);
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.WmsCode).IsFixedLength().IsUnicode(false);
        }
    }

    // vwStopStatsId
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopStatsIdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwStopStatsId>
    {
        public VwStopStatsIdConfiguration()
            : this("dbo")
        {
        }

        public VwStopStatsIdConfiguration(string schema)
        {
            Property(x => x.ProformaDate).IsOptional();
            Property(x => x.RunNo).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RunPlannedShipDate).IsOptional();
            Property(x => x.SecondRun).IsOptional();
            Property(x => x.Driver).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopSequence).IsOptional().HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.City).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.State).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Pieces).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
            Property(x => x.PlannedArrivalDate).IsOptional();
            Property(x => x.ActualArrivalDate).IsOptional();
            Property(x => x.ActualDepartDate).IsOptional();
            Property(x => x.PalletsOn).IsOptional();
            Property(x => x.PalletsOff).IsOptional();
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.TractorName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TrailerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TotalOrders).IsOptional();
            Property(x => x.TotalLineItems).IsOptional();
        }
    }

    // vwStopSummary
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwStopSummaryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwStopSummary>
    {
        public VwStopSummaryConfiguration()
            : this("dbo")
        {
        }

        public VwStopSummaryConfiguration(string schema)
        {
            Property(x => x.RunStopId).HasPrecision(18,0);
            Property(x => x.StopNumberId).IsOptional().HasPrecision(18,0);
            Property(x => x.OrderCount).IsOptional();
            Property(x => x.Peices).IsOptional().HasPrecision(38,0);
            Property(x => x.Weight).IsOptional().HasPrecision(38,2);
        }
    }

    // vwTractorsOff
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwTractorsOffConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwTractorsOff>
    {
        public VwTractorsOffConfiguration()
            : this("dbo")
        {
        }

        public VwTractorsOffConfiguration(string schema)
        {
            Property(x => x.TractorDate).IsOptional();
            Property(x => x.TractorName).IsFixedLength().IsUnicode(false);
            Property(x => x.TractorAxles).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LisStraightTruck).IsOptional();
            Property(x => x.InactiveReason).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // vwUnassignedOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwUnassignedOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwUnassignedOrder>
    {
        public VwUnassignedOrderConfiguration()
            : this("dbo")
        {
        }

        public VwUnassignedOrderConfiguration(string schema)
        {
            Property(x => x.OrderNumber).IsOptional().HasPrecision(18,0);
            Property(x => x.TotalOrderPieces).HasPrecision(18,0);
            Property(x => x.TotalOrderWeight).HasPrecision(18,2);
            Property(x => x.ShipperShipDate).IsOptional();
            Property(x => x.PlannedShipDate).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.Notes).IsOptional().IsUnicode(false);
            Property(x => x.Condition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipperid).HasPrecision(18,0);
            Property(x => x.Consignee).IsOptional().HasPrecision(18,0);
            Property(x => x.Shippernumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PoNumber).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ShipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Shipper).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConsCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

    // WorkAssignment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WorkAssignmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WorkAssignment>
    {
        public WorkAssignmentConfiguration()
            : this("dbo")
        {
        }

        public WorkAssignmentConfiguration(string schema)
        {
            Property(x => x.EmployeeId).HasPrecision(18,0);
            Property(x => x.WorkDate).IsOptional();
            Property(x => x.PercentAssigned).IsOptional().HasPrecision(5,4);
            Property(x => x.Created).IsOptional();
            Property(x => x.Modified).IsOptional();

        }
    }

    // XPObjectType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XpObjectTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XpObjectType>
    {
        public XpObjectTypeConfiguration()
            : this("dbo")
        {
        }

        public XpObjectTypeConfiguration(string schema)
        {
            Property(x => x.TypeName).IsOptional();
            Property(x => x.AssemblyName).IsOptional();
        }
    }

    // Zip2Zip
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Zip2ZipConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Zip2Zip>
    {
        public Zip2ZipConfiguration()
            : this("dbo")
        {
        }

        public Zip2ZipConfiguration(string schema)
        {
            Property(x => x.Origin).IsFixedLength().IsUnicode(false);
            Property(x => x.Dest).IsFixedLength().IsUnicode(false);
            Property(x => x.Miles).IsOptional().HasPrecision(9,2);
            Property(x => x.DriveTime).IsOptional();
        }
    }

    // Zip2ZipHistory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Zip2ZipHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Zip2ZipHistory>
    {
        public Zip2ZipHistoryConfiguration()
            : this("dbo")
        {
        }

        public Zip2ZipHistoryConfiguration(string schema)
        {
            Property(x => x.Origin).IsFixedLength().IsUnicode(false);
            Property(x => x.Dest).IsFixedLength().IsUnicode(false);
            Property(x => x.OriginalMiles).HasPrecision(7,2);
            Property(x => x.Miles).HasPrecision(7,2);
        }
    }

    #endregion

    #region Stored procedure return models

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PmBarcodesReturnModel
    {
        public System.String Consignee { get; set; }
        public System.String ShipperNumber { get; set; }
        public System.Decimal? TotalOrderPieces { get; set; }
        public System.String ConsCode { get; set; }
        public System.String RunNo { get; set; }
        public System.String RunName { get; set; }
        public System.DateTime? ProformaDate { get; set; }
        public System.String ShipCode { get; set; }
        public System.String PMCustNo { get; set; }
        public System.String Barcode { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UspMobileAppGetRunListReturnModel
    {
        public System.String RunNo { get; set; }
        public System.Decimal? RunID { get; set; }
        public System.Decimal? RunNumberID { get; set; }
        public System.String RunName { get; set; }
        public System.DateTime? PlannedShipDate { get; set; }
        public System.String Tractor_Name { get; set; }
        public System.String Trailer_Name { get; set; }
        public System.String Comments { get; set; }
        public System.Decimal? Driver1 { get; set; }
        public System.Decimal? Driver2 { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UspMobileAppGetRunListByEmployeeReturnModel
    {
        public System.String RunNo { get; set; }
        public System.Decimal? RunID { get; set; }
        public System.Decimal? RunNumberID { get; set; }
        public System.String RunName { get; set; }
        public System.DateTime? PlannedShipDate { get; set; }
        public System.String Tractor_Name { get; set; }
        public System.String Trailer_Name { get; set; }
        public System.String Comments { get; set; }
        public System.Decimal? Driver1 { get; set; }
        public System.Decimal? Driver2 { get; set; }
    }

    #endregion

}
// </auto-generated>

